[{"text": "there you", "start": 1.24, "duration": 4.8}, {"text": "go uh so we'll get started uh I'll be", "start": 2.56, "duration": 5.239}, {"text": "basically talking about par Computing", "start": 6.04, "duration": 4.36}, {"text": "using uh open MP and", "start": 7.799, "duration": 7.441}, {"text": "MPI uh uh it's a long session I uh I", "start": 10.4, "duration": 7.32}, {"text": "know I think it's 8 to 11 right Susan", "start": 15.24, "duration": 7.68}, {"text": "right now uh yes okay sorry we shocked", "start": 17.72, "duration": 8.639}, {"text": "everybody with this 8 to2 this", "start": 22.92, "duration": 6.64}, {"text": "morning so it should be good I think uh", "start": 26.359, "duration": 5.08}, {"text": "from content point of view we should be", "start": 29.56, "duration": 6.24}, {"text": "good and it's a long long day so let me", "start": 31.439, "duration": 8.44}, {"text": "get started let me go to the next", "start": 35.8, "duration": 8.96}, {"text": "slide okay so uh maybe uh what what I'm", "start": 39.879, "duration": 7.041}, {"text": "going to do is basically start off with", "start": 44.76, "duration": 3.84}, {"text": "uh kind of the motivation for why we", "start": 46.92, "duration": 5.0}, {"text": "need uh uh these approaches for parallel", "start": 48.6, "duration": 6.84}, {"text": "Computing uh most modern supercomputers", "start": 51.92, "duration": 5.92}, {"text": "uh you know they've involved to", "start": 55.44, "duration": 4.079}, {"text": "basically thousands of multi-socket", "start": 57.84, "duration": 5.84}, {"text": "servers nod uh that are connected with a", "start": 59.519, "duration": 6.521}, {"text": "like a high performance interconnect uh", "start": 63.68, "duration": 4.04}, {"text": "most of the Clusters you'll see will", "start": 66.04, "duration": 5.119}, {"text": "have uh infinite band connections but", "start": 67.72, "duration": 5.439}, {"text": "there are other uh high performance", "start": 71.159, "duration": 5.64}, {"text": "networks uh uh like cray has uh its own", "start": 73.159, "duration": 5.721}, {"text": "network and then there are uh other", "start": 76.799, "duration": 5.081}, {"text": "options but uh in most cases what you'll", "start": 78.88, "duration": 6.08}, {"text": "see is basically a multiset server with", "start": 81.88, "duration": 5.08}, {"text": "within the server there is uh", "start": 84.96, "duration": 5.4}, {"text": "non-uniform uh memory access uh and I'll", "start": 86.96, "duration": 8.68}, {"text": "go into the um uh uh to the architecture", "start": 90.36, "duration": 8.0}, {"text": "of the AMD chip that's on expans and you", "start": 95.64, "duration": 4.759}, {"text": "will see that uh in that in that", "start": 98.36, "duration": 5.68}, {"text": "architecture as well and usually uh so", "start": 100.399, "duration": 6.04}, {"text": "usually it's multi-socket so there's", "start": 104.04, "duration": 5.439}, {"text": "some uh different uh speed of", "start": 106.439, "duration": 5.32}, {"text": "communication between the sockets versus", "start": 109.479, "duration": 4.96}, {"text": "going to the memory that's uh uh", "start": 111.759, "duration": 5.0}, {"text": "associated with the socket itself so", "start": 114.439, "duration": 6.081}, {"text": "there's going to be uh uh different SE", "start": 116.759, "duration": 6.441}, {"text": "different band wids uh even within a", "start": 120.52, "duration": 5.68}, {"text": "node and then when you step out of a", "start": 123.2, "duration": 5.24}, {"text": "node there's the infinite band Network", "start": 126.2, "duration": 3.919}, {"text": "or whatever high performance Network", "start": 128.44, "duration": 5.68}, {"text": "there is uh and in most cases that", "start": 130.119, "duration": 5.84}, {"text": "network is also associated with a", "start": 134.12, "duration": 6.839}, {"text": "particular socket uh unless you're uh uh", "start": 135.959, "duration": 7.841}, {"text": "having multiple network uh interfaces uh", "start": 140.959, "duration": 4.441}, {"text": "on a node that", "start": 143.8, "duration": 4.12}, {"text": "basically uh hit both sockets but", "start": 145.4, "duration": 5.6}, {"text": "usually that's not the case so there's a", "start": 147.92, "duration": 7.2}, {"text": "lot of complexity in terms of uh how all", "start": 151.0, "duration": 7.959}, {"text": "these processing units uh cores are uh", "start": 155.12, "duration": 5.96}, {"text": "connected between each other and between", "start": 158.959, "duration": 6.321}, {"text": "the nodes right and to get good", "start": 161.08, "duration": 6.28}, {"text": "performance on your code uh you need to", "start": 165.28, "duration": 4.039}, {"text": "be able to scale within the node and you", "start": 167.36, "duration": 4.879}, {"text": "need to be able to scale uh out to", "start": 169.319, "duration": 5.241}, {"text": "hundreds of nodes if not thousands of", "start": 172.239, "duration": 7.321}, {"text": "mods uh so and there's uh uh different", "start": 174.56, "duration": 10.08}, {"text": "uh uh latencies and uh uh uh different", "start": 179.56, "duration": 8.319}, {"text": "bandwidth uh involved in uh the access", "start": 184.64, "duration": 5.8}, {"text": "uh to all these storage so the pyramid", "start": 187.879, "duration": 4.64}, {"text": "there is basically showing uh something", "start": 190.44, "duration": 6.159}, {"text": "that goes all the way from uh uh", "start": 192.519, "duration": 7.161}, {"text": "uh basically", "start": 196.599, "duration": 6.241}, {"text": "registers uh which are at a cycle level", "start": 199.68, "duration": 5.96}, {"text": "and then uh caches which are quite fast", "start": 202.84, "duration": 5.599}, {"text": "usually uh going out to main memory", "start": 205.64, "duration": 4.4}, {"text": "which might be on the order of 100", "start": 208.439, "duration": 4.44}, {"text": "cycles and then going to remote memory", "start": 210.04, "duration": 4.6}, {"text": "uh that could be even slower and then", "start": 212.879, "duration": 4.681}, {"text": "flash drives and spinning discs so this", "start": 214.64, "duration": 5.92}, {"text": "uh different levels of latency uh where", "start": 217.56, "duration": 5.0}, {"text": "this becomes important is if you're", "start": 220.56, "duration": 4.64}, {"text": "doing something uh in your code that", "start": 222.56, "duration": 8.239}, {"text": "hits uh uh uh like remote of flash", "start": 225.2, "duration": 8.92}, {"text": "memory or uh going out to spinning dis", "start": 230.799, "duration": 5.44}, {"text": "uh it's going to slow you down a lot so", "start": 234.12, "duration": 3.88}, {"text": "you might have a really fast clock but", "start": 236.239, "duration": 3.64}, {"text": "if you can't get your data to the", "start": 238.0, "duration": 4.76}, {"text": "compute in time uh it doesn't really", "start": 239.879, "duration": 5.681}, {"text": "help and you lose performance so you'll", "start": 242.76, "duration": 5.759}, {"text": "see a lot of the optimizations uh are", "start": 245.56, "duration": 4.72}, {"text": "basically trying to pipeline things so", "start": 248.519, "duration": 6.92}, {"text": "that you keep the CPU busy", "start": 250.28, "duration": 5.159}, {"text": "um", "start": 255.56, "duration": 4.639}, {"text": "so just looking at the AMD epic", "start": 257.12, "duration": 4.48}, {"text": "processor and you might have seen this", "start": 260.199, "duration": 4.041}, {"text": "already uh this week but basically there", "start": 261.6, "duration": 6.52}, {"text": "are eight complex core complex dieses uh", "start": 264.24, "duration": 6.399}, {"text": "uh Each of which has uh eight cores in", "start": 268.12, "duration": 5.72}, {"text": "it uh so you have 64 cores in a chip and", "start": 270.639, "duration": 4.761}, {"text": "then you have two of these chips on the", "start": 273.84, "duration": 5.199}, {"text": "Node so uh and then the CC ccds are", "start": 275.4, "duration": 6.4}, {"text": "connected essentially through this IOD", "start": 279.039, "duration": 5.681}, {"text": "so you can see even within uh a socket", "start": 281.8, "duration": 6.6}, {"text": "there is uh non uniformity in the memory", "start": 284.72, "duration": 6.199}, {"text": "access", "start": 288.4, "duration": 4.079}, {"text": "so", "start": 290.919, "duration": 5.401}, {"text": "uh I mean it's highspeed memory but uh", "start": 292.479, "duration": 6.16}, {"text": "still compared to cash it's going to be", "start": 296.32, "duration": 6.04}, {"text": "uh much slower so uh you will see the", "start": 298.639, "duration": 6.641}, {"text": "impact of this if your code is doing", "start": 302.36, "duration": 7.6}, {"text": "uh uh a lot of calls out to main the", "start": 305.28, "duration": 6.32}, {"text": "main memory", "start": 309.96, "duration": 4.76}, {"text": "basically um and then uh the one other", "start": 311.6, "duration": 6.92}, {"text": "thing is uh uh the iio devices and this", "start": 314.72, "duration": 6.64}, {"text": "includes Network essentially uh go", "start": 318.52, "duration": 7.519}, {"text": "through uh PCI G 4 uh and on expanse the", "start": 321.36, "duration": 6.52}, {"text": "network is associated with one of the", "start": 326.039, "duration": 4.28}, {"text": "sockets and the other socket uh has to", "start": 327.88, "duration": 4.039}, {"text": "go through the bridge between the two", "start": 330.319, "duration": 5.281}, {"text": "sockets if it needs to use the", "start": 331.919, "duration": 3.681}, {"text": "network so uh that's on the just within", "start": 335.96, "duration": 6.6}, {"text": "the node but then if you get out of the", "start": 340.56, "duration": 5.28}, {"text": "node uh you have all kinds of network", "start": 342.56, "duration": 6.16}, {"text": "topologies uh you can have a mesh type", "start": 345.84, "duration": 5.919}, {"text": "setup uh you can have a Taurus uh the", "start": 348.72, "duration": 4.4}, {"text": "one on the right where you're seeing", "start": 351.759, "duration": 3.801}, {"text": "those yellow blobs with uh a Taurus kind", "start": 353.12, "duration": 4.56}, {"text": "of in all three directions that is one", "start": 355.56, "duration": 4.16}, {"text": "of our old machines called Garden that", "start": 357.68, "duration": 5.4}, {"text": "used to have uh this architecture where", "start": 359.72, "duration": 7.319}, {"text": "it was a 3D Taurus uh and we had two of", "start": 363.08, "duration": 6.36}, {"text": "those 3D taus networks uh so we had two", "start": 367.039, "duration": 6.16}, {"text": "connections per uh node and each of", "start": 369.44, "duration": 6.08}, {"text": "those yellow blobs there essentially", "start": 373.199, "duration": 6.041}, {"text": "represents uh 16 compute nodes so you", "start": 375.52, "duration": 6.6}, {"text": "had a th000 nodes but uh they were uh", "start": 379.24, "duration": 6.48}, {"text": "connected in this way so uh as you can", "start": 382.12, "duration": 5.68}, {"text": "imagine if you're trying to scale out on", "start": 385.72, "duration": 3.759}, {"text": "this architecture it will be different", "start": 387.8, "duration": 4.56}, {"text": "from say the tree based uh architecture", "start": 389.479, "duration": 5.72}, {"text": "that you see below now even in the tree", "start": 392.36, "duration": 5.76}, {"text": "based uh sometimes", "start": 395.199, "duration": 6.241}, {"text": "uh uh you have uh over subscription", "start": 398.12, "duration": 5.16}, {"text": "between racks which is what you have on", "start": 401.44, "duration": 5.44}, {"text": "expanse right so within a rack uh you're", "start": 403.28, "duration": 6.24}, {"text": "on a single switch in expanse but uh", "start": 406.88, "duration": 4.759}, {"text": "when you go between racks uh the number", "start": 409.52, "duration": 4.36}, {"text": "of connections is not enough to", "start": 411.639, "duration": 3.801}, {"text": "basically do the full bisection", "start": 413.88, "duration": 4.56}, {"text": "bandwidth so you end up with uh over", "start": 415.44, "duration": 5.759}, {"text": "subscription if you're running a job at", "start": 418.44, "duration": 5.199}, {"text": "at larger scales than a not now the good", "start": 421.199, "duration": 6.28}, {"text": "news is uh uh on expanse a single rack", "start": 423.639, "duration": 6.321}, {"text": "itself is quite a few cores it's I think", "start": 427.479, "duration": 6.28}, {"text": "7,000 odd cores so it's a huge number of", "start": 429.96, "duration": 7.44}, {"text": "cores uh but you do have to keep this in", "start": 433.759, "duration": 6.44}, {"text": "mind that uh when you scale out there'll", "start": 437.4, "duration": 6.28}, {"text": "be uh network uh effects and then there", "start": 440.199, "duration": 6.44}, {"text": "are other uh topologies like the", "start": 443.68, "duration": 7.0}, {"text": "dragonfly uh Network work and a few", "start": 446.639, "duration": 5.601}, {"text": "others", "start": 450.68, "duration": 7.32}, {"text": "uh but one of the reasons uh uh uh using", "start": 452.24, "duration": 9.519}, {"text": "something like a MPI uh uh that is", "start": 458.0, "duration": 6.599}, {"text": "abstracted uh from this network is", "start": 461.759, "duration": 5.56}, {"text": "basically uh you might write your code", "start": 464.599, "duration": 5.081}, {"text": "to use particular MPI functions and you", "start": 467.319, "duration": 4.641}, {"text": "don't have to worry about how that is", "start": 469.68, "duration": 4.0}, {"text": "implemented under the UN on the", "start": 471.96, "duration": 4.76}, {"text": "underlying Network so uh that's the", "start": 473.68, "duration": 5.12}, {"text": "benefit of having a standard like that", "start": 476.72, "duration": 4.68}, {"text": "is uh you can write your code saying oh", "start": 478.8, "duration": 6.519}, {"text": "I need a collective of this kind and the", "start": 481.4, "duration": 5.759}, {"text": "implementation of that Collective will", "start": 485.319, "duration": 3.521}, {"text": "be different on different machines and", "start": 487.159, "duration": 3.281}, {"text": "it'll be optimized for that particular", "start": 488.84, "duration": 3.44}, {"text": "machine", "start": 490.44, "duration": 6.039}, {"text": "so so uh that way uh you can of benefit", "start": 492.28, "duration": 6.44}, {"text": "from using a standardized", "start": 496.479, "duration": 5.241}, {"text": "approach uh", "start": 498.72, "duration": 5.96}, {"text": "now par Computing basically involves", "start": 501.72, "duration": 6.12}, {"text": "executing instructions concurrently on", "start": 504.68, "duration": 4.919}, {"text": "physical resources so it's not time", "start": 507.84, "duration": 3.96}, {"text": "slicing it's more like uh the problem", "start": 509.599, "duration": 5.12}, {"text": "itself is broken up and run on different", "start": 511.8, "duration": 5.32}, {"text": "cores at the same time and then you have", "start": 514.719, "duration": 4.8}, {"text": "uh some coupling between them to solve", "start": 517.12, "duration": 3.68}, {"text": "the whole", "start": 519.519, "duration": 4.281}, {"text": "problem now uh there are lots of reasons", "start": 520.8, "duration": 5.56}, {"text": "for this you know the first thing is", "start": 523.8, "duration": 8.52}, {"text": "capacity uh as you know on expans uh the", "start": 526.36, "duration": 7.72}, {"text": "there is a limit on the memory per no", "start": 532.32, "duration": 7.959}, {"text": "it's 240 gigs so uh you end up with um", "start": 534.08, "duration": 9.759}, {"text": "uh 240 gigs and 128 cores so if you want", "start": 540.279, "duration": 5.361}, {"text": "to scale beyond that you'll have to go", "start": 543.839, "duration": 5.761}, {"text": "beyond one node right uh so that there's", "start": 545.64, "duration": 6.639}, {"text": "that aspect of it now the other thing is", "start": 549.6, "duration": 5.239}, {"text": "uh expans has 128 CES and if your code", "start": 552.279, "duration": 4.281}, {"text": "doesn't scale then you're not going to", "start": 554.839, "duration": 4.161}, {"text": "get a speed up like say you run with one", "start": 556.56, "duration": 5.56}, {"text": "core on expanse and use all the memory", "start": 559.0, "duration": 4.68}, {"text": "you're not going to be that much faster", "start": 562.12, "duration": 5.399}, {"text": "than your laptop in fact um uh like you", "start": 563.68, "duration": 5.64}, {"text": "might be slower because the laptop might", "start": 567.519, "duration": 4.041}, {"text": "be clocking at a higher speed and have a", "start": 569.32, "duration": 4.84}, {"text": "faster memory or whatever like so you", "start": 571.56, "duration": 4.519}, {"text": "really need to actually use all the", "start": 574.16, "duration": 6.72}, {"text": "cores uh uh to get the performance uh", "start": 576.079, "duration": 8.921}, {"text": "out of even a single node right so and", "start": 580.88, "duration": 6.72}, {"text": "and if you really want to get to you", "start": 585.0, "duration": 5.8}, {"text": "know pet of flops of performance uh then", "start": 587.6, "duration": 5.04}, {"text": "you you have to scale out to the", "start": 590.8, "duration": 4.159}, {"text": "multiple nodes and to larger number of", "start": 592.64, "duration": 4.84}, {"text": "node counts", "start": 594.959, "duration": 6.641}, {"text": "so uh now there is obviously uh some", "start": 597.48, "duration": 6.44}, {"text": "cost to doing this uh there's a lot of", "start": 601.6, "duration": 4.72}, {"text": "coordination of tasks and resources and", "start": 603.92, "duration": 4.28}, {"text": "also you need to worry about the", "start": 606.32, "duration": 4.4}, {"text": "efficiency of how you're breaking it up", "start": 608.2, "duration": 5.24}, {"text": "right like say you take a very small", "start": 610.72, "duration": 5.08}, {"text": "problem and try to solve it with a th", "start": 613.44, "duration": 4.0}, {"text": "cores you might find out that you're", "start": 615.8, "duration": 4.68}, {"text": "spending more time coordinating uh", "start": 617.44, "duration": 5.88}, {"text": "between the tasks rather than the task", "start": 620.48, "duration": 6.919}, {"text": "themselves uh and that's where you know", "start": 623.32, "duration": 6.12}, {"text": "you have to think about how you want to", "start": 627.399, "duration": 4.401}, {"text": "scale your problem sometimes algorithm", "start": 629.44, "duration": 4.44}, {"text": "might not scale at at all and then you", "start": 631.8, "duration": 4.599}, {"text": "have to find a different way of doing it", "start": 633.88, "duration": 5.88}, {"text": "so you you might see that sometimes the", "start": 636.399, "duration": 7.641}, {"text": "approach might be to use a uh a pro an", "start": 639.76, "duration": 7.04}, {"text": "approach that may take a slightly longer", "start": 644.04, "duration": 4.84}, {"text": "time to say converge but might be faster", "start": 646.8, "duration": 6.8}, {"text": "in terms of the uh F I mean in terms of", "start": 648.88, "duration": 7.84}, {"text": "the scaling and uh do like better", "start": 653.6, "duration": 4.96}, {"text": "scaling and then overall you might", "start": 656.72, "duration": 5.28}, {"text": "finish in in a faster amount of time so", "start": 658.56, "duration": 5.959}, {"text": "that uh there's lots of considerations", "start": 662.0, "duration": 5.519}, {"text": "if you start scaling out to lots of", "start": 664.519, "duration": 5.641}, {"text": "mods now there are different execution", "start": 667.519, "duration": 5.641}, {"text": "models uh uh involved uh there's the", "start": 670.16, "duration": 6.44}, {"text": "shared memory uh model where basically", "start": 673.16, "duration": 7.96}, {"text": "all the communication is done uh uh via", "start": 676.6, "duration": 7.679}, {"text": "shared memory so you're not really U", "start": 681.12, "duration": 5.6}, {"text": "moving data you're basically uh reading", "start": 684.279, "duration": 4.881}, {"text": "off the data from a shared memory", "start": 686.72, "duration": 5.919}, {"text": "segment so if you're on a single node", "start": 689.16, "duration": 5.799}, {"text": "this approach will work but then as soon", "start": 692.639, "duration": 6.281}, {"text": "as you go to a uh distributed like uh", "start": 694.959, "duration": 5.841}, {"text": "more than one node then you cannot have", "start": 698.92, "duration": 4.64}, {"text": "a shared memory because uh the memory on", "start": 700.8, "duration": 4.76}, {"text": "node 2 is not visible to the memory on", "start": 703.56, "duration": 4.12}, {"text": "node one", "start": 705.56, "duration": 5.8}, {"text": "so uh so you'll have to basically have a", "start": 707.68, "duration": 6.0}, {"text": "different model where the tasks are", "start": 711.36, "duration": 5.36}, {"text": "explicitly exchanging messages uh over", "start": 713.68, "duration": 4.279}, {"text": "the", "start": 716.72, "duration": 5.679}, {"text": "network so the execution models are uh", "start": 717.959, "duration": 7.44}, {"text": "uh also kind of different so you can", "start": 722.399, "duration": 4.88}, {"text": "have a folk joint kind of thing where", "start": 725.399, "duration": 4.12}, {"text": "you're doing threads so you start off", "start": 727.279, "duration": 4.521}, {"text": "with a Serial section of the code and", "start": 729.519, "duration": 5.601}, {"text": "then break up into lots of threads to do", "start": 731.8, "duration": 5.12}, {"text": "like the parallel part and then join", "start": 735.12, "duration": 4.12}, {"text": "back uh to serial and then maybe do", "start": 736.92, "duration": 5.24}, {"text": "another level of threads and so on uh or", "start": 739.24, "duration": 5.279}, {"text": "you could do completely different tasks", "start": 742.16, "duration": 4.4}, {"text": "uh you're running the same program but", "start": 744.519, "duration": 5.601}, {"text": "on different uh data sets basically the", "start": 746.56, "duration": 7.399}, {"text": "pieces of the data uh so you're uh", "start": 750.12, "duration": 5.88}, {"text": "enabling the parallelism but decomposing", "start": 753.959, "duration": 5.24}, {"text": "the work and this uh you know the tasks", "start": 756.0, "duration": 6.079}, {"text": "will run", "start": 759.199, "duration": 2.88}, {"text": "concurrently so uh two different", "start": 763.88, "duration": 4.36}, {"text": "approaches that I'm going to talk about", "start": 766.399, "duration": 7.081}, {"text": "today open MP and MPI and uh most modern", "start": 768.24, "duration": 7.88}, {"text": "uh uh uh computers you'll have to do a", "start": 773.48, "duration": 6.28}, {"text": "hybrid of both of these uh but uh I'm", "start": 776.12, "duration": 5.88}, {"text": "just going to present present them", "start": 779.76, "duration": 3.48}, {"text": "separately", "start": 782.0, "duration": 3.88}, {"text": "today so what's open MP so it's a high", "start": 783.24, "duration": 4.68}, {"text": "level parallelism uh that's based on", "start": 785.88, "duration": 5.44}, {"text": "threading uh it's quite easy to use uh", "start": 787.92, "duration": 5.84}, {"text": "because you can start uh with a serial", "start": 791.32, "duration": 5.519}, {"text": "code and incrementally basically change", "start": 793.76, "duration": 5.96}, {"text": "pieces of it to become parallel so you", "start": 796.839, "duration": 5.281}, {"text": "can you can basically take the time the", "start": 799.72, "duration": 4.0}, {"text": "part of the code that's taking the most", "start": 802.12, "duration": 2.92}, {"text": "time and see if you can make that", "start": 803.72, "duration": 3.559}, {"text": "parallel first and then kind of work", "start": 805.04, "duration": 4.84}, {"text": "your way backwards in uh into get", "start": 807.279, "duration": 4.441}, {"text": "getting them fully parallel", "start": 809.88, "duration": 4.44}, {"text": "code uh so you can do this incrementally", "start": 811.72, "duration": 6.0}, {"text": "mainly because uh uh it's in a shared", "start": 814.32, "duration": 5.04}, {"text": "memory kind of", "start": 817.72, "duration": 3.6}, {"text": "setup", "start": 819.36, "duration": 5.76}, {"text": "uh so uh whereas if in an MPI kind of", "start": 821.32, "duration": 6.44}, {"text": "thing each task will have its own memory", "start": 825.12, "duration": 5.639}, {"text": "uh uh segment and uh which is not", "start": 827.76, "duration": 4.96}, {"text": "visible to the other task so that's the", "start": 830.759, "duration": 4.721}, {"text": "reason uh it gets a little difficult", "start": 832.72, "duration": 4.08}, {"text": "because right from the beginning you", "start": 835.48, "duration": 3.479}, {"text": "need to be able to take your problem", "start": 836.8, "duration": 5.32}, {"text": "break it up and uh it's not incremental", "start": 838.959, "duration": 5.56}, {"text": "anymore because once you're doing that", "start": 842.12, "duration": 4.839}, {"text": "uh break up you really have to change", "start": 844.519, "duration": 6.041}, {"text": "the whole code to uh work that way but", "start": 846.959, "duration": 6.481}, {"text": "in open MP since you're uh you you're", "start": 850.56, "duration": 5.719}, {"text": "doing it with a shared memory uh you can", "start": 853.44, "duration": 5.72}, {"text": "get away with uh uh doing this in an", "start": 856.279, "duration": 5.521}, {"text": "incremental", "start": 859.16, "duration": 2.64}, {"text": "fion uh there is a it's an Evol evolving", "start": 862.16, "duration": 6.599}, {"text": "standard and it's uh extended out to", "start": 866.759, "duration": 5.0}, {"text": "gpus now and uh other accelerators so", "start": 868.759, "duration": 6.481}, {"text": "you can uh look at open mpp.org uh for", "start": 871.759, "duration": 6.32}, {"text": "details what it is is a set of uh", "start": 875.24, "duration": 5.719}, {"text": "compiler D directives and some rary", "start": 878.079, "duration": 4.921}, {"text": "routines and uh some environment", "start": 880.959, "duration": 5.041}, {"text": "variables which tell uh uh which kind of", "start": 883.0, "duration": 6.44}, {"text": "inform how the directives get uh uh", "start": 886.0, "duration": 7.92}, {"text": "used uh and then uh it's uh supported in", "start": 889.44, "duration": 8.24}, {"text": "C C++ and fortron so", "start": 893.92, "duration": 6.56}, {"text": "uh you can pretty much use it in most", "start": 897.68, "duration": 4.44}, {"text": "codes", "start": 900.48, "duration": 4.52}, {"text": "uh uh so the model is basically the", "start": 902.12, "duration": 4.839}, {"text": "process start single threaded which is", "start": 905.0, "duration": 3.88}, {"text": "like a master thread and then Forks the", "start": 906.959, "duration": 4.0}, {"text": "child threads in the parallel", "start": 908.88, "duration": 6.079}, {"text": "regions uh and then synchron rizes back", "start": 910.959, "duration": 6.841}, {"text": "and uh basically the overhead is", "start": 914.959, "duration": 4.761}, {"text": "mitigated if you reuse the", "start": 917.8, "duration": 6.0}, {"text": "threads uh and the master thread uh will", "start": 919.72, "duration": 6.6}, {"text": "continue the execution of the serial", "start": 923.8, "duration": 5.159}, {"text": "phases uh so the work decomposition", "start": 926.32, "duration": 9.079}, {"text": "itself uh is uh is done uh uh using some", "start": 928.959, "duration": 8.921}, {"text": "programming uh constructs uh there's", "start": 935.399, "duration": 5.601}, {"text": "some scope statements and uh you can do", "start": 937.88, "duration": 5.319}, {"text": "declarations in loops and I'm going to", "start": 941.0, "duration": 4.92}, {"text": "give you some examples of all these and", "start": 943.199, "duration": 4.601}, {"text": "the mapping to the threads can be static", "start": 945.92, "duration": 4.56}, {"text": "or dynamic so it depends on what your", "start": 947.8, "duration": 5.44}, {"text": "problem is some problems it it's good to", "start": 950.48, "duration": 5.64}, {"text": "just do a static uh mapping because you", "start": 953.24, "duration": 5.959}, {"text": "can easily divide up the work and uh and", "start": 956.12, "duration": 4.519}, {"text": "it stays that way but then there are", "start": 959.199, "duration": 3.241}, {"text": "some problems where the workload might", "start": 960.639, "duration": 3.481}, {"text": "differ on different threads and you", "start": 962.44, "duration": 3.68}, {"text": "don't want to be stuck statically", "start": 964.12, "duration": 4.839}, {"text": "because then uh one thread might finish", "start": 966.12, "duration": 5.68}, {"text": "and everything else is waiting it just", "start": 968.959, "duration": 4.521}, {"text": "waits for the other ones doing nothing", "start": 971.8, "duration": 4.399}, {"text": "so then you lose", "start": 973.48, "duration": 2.719}, {"text": "efficiency let me quickly check to see", "start": 976.639, "duration": 6.361}, {"text": "if there are any questions okay good uh", "start": 979.079, "duration": 6.641}, {"text": "so", "start": 983.0, "duration": 6.399}, {"text": "um the as I mentioned compiler", "start": 985.72, "duration": 5.679}, {"text": "derivatives are the main mechanism for", "start": 989.399, "duration": 3.041}, {"text": "doing this", "start": 991.399, "duration": 4.201}, {"text": "parallelism so uh you can basically have", "start": 992.44, "duration": 5.6}, {"text": "a parallel region and divide the code", "start": 995.6, "duration": 4.56}, {"text": "among threads and distribute Loop", "start": 998.04, "duration": 5.32}, {"text": "iteration over threads you can do uh", "start": 1000.16, "duration": 4.84}, {"text": "specifically serialized parts of the", "start": 1003.36, "duration": 5.0}, {"text": "code if they have to be uh and you can", "start": 1005.0, "duration": 6.72}, {"text": "do some synchronization so uh here I", "start": 1008.36, "duration": 5.599}, {"text": "have an example of basically how the", "start": 1011.72, "duration": 4.479}, {"text": "compiler directive will look like uh it", "start": 1013.959, "duration": 4.201}, {"text": "just says there's an openm parallel", "start": 1016.199, "duration": 3.08}, {"text": "section", "start": 1018.16, "duration": 3.799}, {"text": "and uh I'll talk about what this default", "start": 1019.279, "duration": 6.04}, {"text": "shared and private means but basically", "start": 1021.959, "duration": 6.48}, {"text": "this is the scope of the", "start": 1025.319, "duration": 3.12}, {"text": "variables so", "start": 1029.72, "duration": 5.68}, {"text": "uh in general this is how uh all these", "start": 1031.959, "duration": 6.84}, {"text": "sections will look uh there is a OMP", "start": 1035.4, "duration": 9.2}, {"text": "parallel uh section uh and uh", "start": 1038.799, "duration": 8.681}, {"text": "um I I shouldn't call call it basically", "start": 1044.6, "duration": 5.319}, {"text": "these directives will uh uh decide how", "start": 1047.48, "duration": 7.319}, {"text": "the parallelism happens and uh and then", "start": 1049.919, "duration": 10.76}, {"text": "uh uh you can also do uh uh Loops uh in", "start": 1054.799, "duration": 8.721}, {"text": "parallel and basically uh sections of", "start": 1060.679, "duration": 5.601}, {"text": "the code can be in parallel and so", "start": 1063.52, "duration": 6.159}, {"text": "on now uh the first thing I want to talk", "start": 1066.28, "duration": 6.639}, {"text": "about is the scope of variables so these", "start": 1069.679, "duration": 5.24}, {"text": "Clauses determine the scope of the", "start": 1072.919, "duration": 3.961}, {"text": "variable so there are different uh", "start": 1074.919, "duration": 5.361}, {"text": "Clauses you can uh set like uh like a", "start": 1076.88, "duration": 6.0}, {"text": "default clause which basically means if", "start": 1080.28, "duration": 4.519}, {"text": "you don't explicitly say some variable", "start": 1082.88, "duration": 6.56}, {"text": "is shared then uh uh or not like it'll", "start": 1084.799, "duration": 5.76}, {"text": "assume this", "start": 1089.44, "duration": 3.56}, {"text": "default uh then there's private first", "start": 1090.559, "duration": 5.281}, {"text": "private uh uh shared last private and", "start": 1093.0, "duration": 5.32}, {"text": "and so on and I'm going to look at uh", "start": 1095.84, "duration": 5.12}, {"text": "some of these Clauses so private means", "start": 1098.32, "duration": 4.2}, {"text": "that the variables in the list are", "start": 1100.96, "duration": 3.719}, {"text": "private to each thread and you might", "start": 1102.52, "duration": 4.32}, {"text": "need this right like say you're uh you", "start": 1104.679, "duration": 4.401}, {"text": "broke up your problem into multiple", "start": 1106.84, "duration": 4.56}, {"text": "pieces uh but maybe you're doing the", "start": 1109.08, "duration": 5.28}, {"text": "same uh summation or something like that", "start": 1111.4, "duration": 5.08}, {"text": "in each uh thread and then you want to", "start": 1114.36, "duration": 4.48}, {"text": "add it later if you don't make it", "start": 1116.48, "duration": 4.52}, {"text": "private remember it's shared memory so", "start": 1118.84, "duration": 6.0}, {"text": "you'll step on uh uh uh the work from", "start": 1121.0, "duration": 5.76}, {"text": "the other thread so if you don't want", "start": 1124.84, "duration": 4.36}, {"text": "that to happen you can make some some of", "start": 1126.76, "duration": 4.88}, {"text": "those variables private so that they", "start": 1129.2, "duration": 5.68}, {"text": "can't be changed by another", "start": 1131.64, "duration": 5.96}, {"text": "thread uh if you make the but then on", "start": 1134.88, "duration": 4.44}, {"text": "the flip side you might want some", "start": 1137.6, "duration": 3.559}, {"text": "variables to be shared right like for", "start": 1139.32, "duration": 4.44}, {"text": "example if you're doing advancing some", "start": 1141.159, "duration": 6.281}, {"text": "kind of a problem in uh uh at a", "start": 1143.76, "duration": 7.039}, {"text": "particular uh time step or you know it", "start": 1147.44, "duration": 8.08}, {"text": "needs like some particular uh um uh", "start": 1150.799, "duration": 5.681}, {"text": "common", "start": 1155.52, "duration": 4.519}, {"text": "variable you don't want to be uh initi", "start": 1156.48, "duration": 5.199}, {"text": "initializing that in each thread right", "start": 1160.039, "duration": 3.441}, {"text": "so you can make it shared and just use", "start": 1161.679, "duration": 4.281}, {"text": "it as shared just need to be careful", "start": 1163.48, "duration": 5.439}, {"text": "that you're not uh doing some race", "start": 1165.96, "duration": 4.56}, {"text": "condition when you're now modifying the", "start": 1168.919, "duration": 3.401}, {"text": "shared", "start": 1170.52, "duration": 4.0}, {"text": "variables default as I mentioned is the", "start": 1172.32, "duration": 5.68}, {"text": "default scope for the variables uh first", "start": 1174.52, "duration": 5.8}, {"text": "private basically says the variables are", "start": 1178.0, "duration": 3.919}, {"text": "private but they're initialized", "start": 1180.32, "duration": 3.4}, {"text": "according to the value just before the", "start": 1181.919, "duration": 3.921}, {"text": "entry into the parallel or working share", "start": 1183.72, "duration": 4.28}, {"text": "construct and last private is the other", "start": 1185.84, "duration": 4.0}, {"text": "way around basically they're private and", "start": 1188.0, "duration": 3.44}, {"text": "then the value from the last iteration", "start": 1189.84, "duration": 3.56}, {"text": "is copied to the original variable", "start": 1191.44, "duration": 4.04}, {"text": "object and there are all kinds of other", "start": 1193.4, "duration": 5.72}, {"text": "things so uh you can look at that", "start": 1195.48, "duration": 7.8}, {"text": "and uh last thing is uh the reduction", "start": 1199.12, "duration": 8.439}, {"text": "basically lets you do reduction on those", "start": 1203.28, "duration": 4.279}, {"text": "variables uh so this we already kind of", "start": 1207.6, "duration": 4.64}, {"text": "looked at the code block so the number", "start": 1210.0, "duration": 8.28}, {"text": "of threads uh uh is another thing uh", "start": 1212.24, "duration": 9.28}, {"text": "this is an important one because uh by", "start": 1218.28, "duration": 5.44}, {"text": "default if you don't specify it it might", "start": 1221.52, "duration": 3.92}, {"text": "pick up the number of cores on the Node", "start": 1223.72, "duration": 3.72}, {"text": "and say oh yeah I have F 128 cores on", "start": 1225.44, "duration": 3.44}, {"text": "this node and I I'm going to use them", "start": 1227.44, "duration": 4.4}, {"text": "all as threads uh the problem with that", "start": 1228.88, "duration": 5.799}, {"text": "is say you are trying to do a hybrid", "start": 1231.84, "duration": 6.839}, {"text": "case uh like where you want 8 MPI Tas", "start": 1234.679, "duration": 6.0}, {"text": "and maybe you only want 16 threads per", "start": 1238.679, "duration": 4.48}, {"text": "Tas so that you have a total of 128 but", "start": 1240.679, "duration": 4.641}, {"text": "if you don't specify anything and it", "start": 1243.159, "duration": 6.601}, {"text": "picks up 128 now you have like 16 * 128", "start": 1245.32, "duration": 6.92}, {"text": "threads running on the Node which uh", "start": 1249.76, "duration": 4.6}, {"text": "could be a massive over subscription and", "start": 1252.24, "duration": 3.04}, {"text": "cause", "start": 1254.36, "duration": 3.96}, {"text": "problems so the way it's determined is", "start": 1255.28, "duration": 7.44}, {"text": "uh you can uh you can set the uh number", "start": 1258.32, "duration": 8.96}, {"text": "of threads uh uh there's an OM set num", "start": 1262.72, "duration": 6.52}, {"text": "threads Library function there's an OM", "start": 1267.28, "duration": 4.2}, {"text": "num threads environment variable you can", "start": 1269.24, "duration": 5.08}, {"text": "use either one of them to kind of set", "start": 1271.48, "duration": 5.84}, {"text": "those", "start": 1274.32, "duration": 3.0}, {"text": "uh then there's the part about the work", "start": 1277.48, "duration": 4.96}, {"text": "sharing right so I told you you could uh", "start": 1280.12, "duration": 7.72}, {"text": "split up the work uh in the loop or uh", "start": 1282.44, "duration": 6.239}, {"text": "uh", "start": 1287.84, "duration": 5.48}, {"text": "uh basically in in a section and the way", "start": 1288.679, "duration": 7.521}, {"text": "you can do that is uh you can do it", "start": 1293.32, "duration": 5.12}, {"text": "statically so you take the number of", "start": 1296.2, "duration": 4.839}, {"text": "Loop iterations and just divide it uh", "start": 1298.44, "duration": 5.119}, {"text": "chunk it as equal as", "start": 1301.039, "duration": 6.88}, {"text": "possible uh but uh as I mentioned that", "start": 1303.559, "duration": 7.24}, {"text": "might not be the best thing to do if uh", "start": 1307.919, "duration": 6.841}, {"text": "different Loop uh uh iterations are", "start": 1310.799, "duration": 7.521}, {"text": "taking different amount of time then uh", "start": 1314.76, "duration": 4.56}, {"text": "uh then you're going to get an", "start": 1318.32, "duration": 2.839}, {"text": "unbalanced situation where a lot of", "start": 1319.32, "duration": 3.479}, {"text": "cores will be sitting idle waiting for", "start": 1321.159, "duration": 4.12}, {"text": "the other to finish so in such a case", "start": 1322.799, "duration": 6.921}, {"text": "you might want a dynamic one so where uh", "start": 1325.279, "duration": 6.161}, {"text": "when a thread finishes a chunk it gets", "start": 1329.72, "duration": 2.92}, {"text": "another", "start": 1331.44, "duration": 5.359}, {"text": "chunk guided is similar to the uh uh", "start": 1332.64, "duration": 6.08}, {"text": "Dynamic but the chunk size also is", "start": 1336.799, "duration": 5.041}, {"text": "reduced as the work remaining uh kind of", "start": 1338.72, "duration": 4.16}, {"text": "uh", "start": 1341.84, "duration": 4.76}, {"text": "reduces uh and then at runtime you could", "start": 1342.88, "duration": 5.88}, {"text": "set this uh use using environment", "start": 1346.6, "duration": 4.319}, {"text": "variables or you can just let the", "start": 1348.76, "duration": 5.44}, {"text": "compiler uh set or or compiler or", "start": 1350.919, "duration": 5.801}, {"text": "runtime set it", "start": 1354.2, "duration": 5.719}, {"text": "automatically so uh so we kind of looked", "start": 1356.72, "duration": 7.6}, {"text": "at a lot of things uh uh that are parts", "start": 1359.919, "duration": 6.88}, {"text": "of uh an openmp program so let's start", "start": 1364.32, "duration": 5.64}, {"text": "by looking at a a simple program that", "start": 1366.799, "duration": 7.201}, {"text": "computes Pi uh it finds the number of", "start": 1369.96, "duration": 7.079}, {"text": "tasks and task IDs so it gets the OM num", "start": 1374.0, "duration": 8.799}, {"text": "get num threads an OM uh uh uh uh thread", "start": 1377.039, "duration": 10.041}, {"text": "number um and uh", "start": 1382.799, "duration": 7.441}, {"text": "uh uh and then the pi is actually just", "start": 1387.08, "duration": 4.92}, {"text": "being calculated using an integral and", "start": 1390.24, "duration": 4.4}, {"text": "we just break up the integration to kind", "start": 1392.0, "duration": 6.32}, {"text": "of uh do the uh", "start": 1394.64, "duration": 7.279}, {"text": "calculation so uh and we did a simple", "start": 1398.32, "duration": 6.56}, {"text": "openmp Loop parallelization in this code", "start": 1401.919, "duration": 4.64}, {"text": "and he just kind of introduces the", "start": 1404.88, "duration": 3.919}, {"text": "concept of private and shared", "start": 1406.559, "duration": 4.961}, {"text": "variables uh and then in the end there's", "start": 1408.799, "duration": 4.841}, {"text": "a reduction to kind of compute the sum", "start": 1411.52, "duration": 5.2}, {"text": "for the final integral so all of today's", "start": 1413.64, "duration": 5.76}, {"text": "examples are basically in this parallel", "start": 1416.72, "duration": 4.52}, {"text": "directory that I already copied to all", "start": 1419.4, "duration": 5.2}, {"text": "your accounts uh so you should have it", "start": 1421.24, "duration": 5.039}, {"text": "if you don't have the parallel directory", "start": 1424.6, "duration": 3.64}, {"text": "you can copy it from this location but I", "start": 1426.279, "duration": 3.76}, {"text": "think all the training accounts should", "start": 1428.24, "duration": 2.88}, {"text": "have it", "start": 1430.039, "duration": 4.561}, {"text": "already uh and we're going to submit a", "start": 1431.12, "duration": 5.52}, {"text": "few jobs and see how they", "start": 1434.6, "duration": 4.76}, {"text": "go so so let's look at the code so you", "start": 1436.64, "duration": 6.039}, {"text": "can see uh it's a pretty uh simple C", "start": 1439.36, "duration": 6.48}, {"text": "code and then uh there's some variables", "start": 1442.679, "duration": 5.161}, {"text": "being defined uh the number of intervals", "start": 1445.84, "duration": 5.04}, {"text": "and so on and then there's a pragma", "start": 1447.84, "duration": 9.0}, {"text": "parallel uh num threads come out T is uh", "start": 1450.88, "duration": 8.64}, {"text": "we make both of them uh private you", "start": 1456.84, "duration": 4.48}, {"text": "technically don't you can make the N", "start": 1459.52, "duration": 5.279}, {"text": "threads uh shared but uh the thread ID", "start": 1461.32, "duration": 6.64}, {"text": "needs to be private so so I'm setting", "start": 1464.799, "duration": 7.281}, {"text": "that to the thread number and uh if it's", "start": 1467.96, "duration": 8.36}, {"text": "uh thread number zero I also run uh uh", "start": 1472.08, "duration": 7.12}, {"text": "this n threads equals om get num", "start": 1476.32, "duration": 5.52}, {"text": "threads and print it out so we just get", "start": 1479.2, "duration": 4.44}, {"text": "the number of threads and the num the", "start": 1481.84, "duration": 3.92}, {"text": "thread", "start": 1483.64, "duration": 4.84}, {"text": "ID uh so that's a simple part of just", "start": 1485.76, "duration": 4.84}, {"text": "identifying how many threads we have but", "start": 1488.48, "duration": 5.48}, {"text": "then there is the uh piece that", "start": 1490.6, "duration": 5.799}, {"text": "basically does the integral so it's 4 1", "start": 1493.96, "duration": 5.88}, {"text": "+ x\u00b2 that we are integrating in and uh", "start": 1496.399, "duration": 6.721}, {"text": "uh basically there is a private I comma", "start": 1499.84, "duration": 5.319}, {"text": "X because remember now you're taking", "start": 1503.12, "duration": 5.48}, {"text": "this Loop and parallelizing it so if you", "start": 1505.159, "duration": 5.081}, {"text": "don't make it private then you're going", "start": 1508.6, "duration": 4.76}, {"text": "to have things stepping on each other so", "start": 1510.24, "duration": 5.6}, {"text": "uh because this x variable is going to", "start": 1513.36, "duration": 6.319}, {"text": "be updated on each of the threads right", "start": 1515.84, "duration": 6.16}, {"text": "and uh if it was a shared variable you", "start": 1519.679, "duration": 4.961}, {"text": "would end up uh maybe thread 2 does part", "start": 1522.0, "duration": 4.96}, {"text": "of the calculation and updates it and", "start": 1524.64, "duration": 4.08}, {"text": "then something else overwrite that then", "start": 1526.96, "duration": 4.16}, {"text": "you going to basically have a mess with", "start": 1528.72, "duration": 4.24}, {"text": "the uh", "start": 1531.12, "duration": 4.48}, {"text": "integration so we make that", "start": 1532.96, "duration": 5.599}, {"text": "private uh and the number of intervals", "start": 1535.6, "duration": 6.199}, {"text": "we make it uh shared because that's uh", "start": 1538.559, "duration": 5.84}, {"text": "the same across all of them and we are", "start": 1541.799, "duration": 4.321}, {"text": "saying we're going to R do a reduction", "start": 1544.399, "duration": 4.681}, {"text": "operation on this pi", "start": 1546.12, "duration": 7.279}, {"text": "value right uh so", "start": 1549.08, "duration": 9.959}, {"text": "uh so we are uh basically uh", "start": 1553.399, "duration": 9.601}, {"text": "uh uh calculating uh by this", "start": 1559.039, "duration": 9.481}, {"text": "way so uh you can run this job by uh", "start": 1563.0, "duration": 10.039}, {"text": "just submitting s b-- res equals SI 2022", "start": 1568.52, "duration": 6.84}, {"text": "day5 uh which is our reservation for", "start": 1573.039, "duration": 6.64}, {"text": "today and piore openmp dosp so let me", "start": 1575.36, "duration": 7.319}, {"text": "see if I actually showed you the script", "start": 1579.679, "duration": 6.12}, {"text": "no so let me actually look uh look at", "start": 1582.679, "duration": 6.24}, {"text": "the script and see uh uh uh you can see", "start": 1585.799, "duration": 5.36}, {"text": "my terminal window okay", "start": 1588.919, "duration": 5.801}, {"text": "right let me just zoom we do see your", "start": 1591.159, "duration": 6.12}, {"text": "window May okay great", "start": 1594.72, "duration": 5.0}, {"text": "thanks so I'm going to go to the", "start": 1597.279, "duration": 3.64}, {"text": "parallel", "start": 1599.72, "duration": 5.28}, {"text": "directory UHS uh all of you should have", "start": 1600.919, "duration": 5.441}, {"text": "this in your home directory and there's", "start": 1605.0, "duration": 6.2}, {"text": "a uh uh runor commands. text there and I", "start": 1606.36, "duration": 6.96}, {"text": "uploaded this to the GitHub side too", "start": 1611.2, "duration": 3.88}, {"text": "which basically has all the commands you", "start": 1613.32, "duration": 3.28}, {"text": "can cut it", "start": 1615.08, "duration": 4.479}, {"text": "P so I'm going to just do the first part", "start": 1616.6, "duration": 4.0}, {"text": "now", "start": 1619.559, "duration": 4.041}, {"text": "so uh go do", "start": 1620.6, "duration": 7.319}, {"text": "that and I'm going to submit this", "start": 1623.6, "duration": 4.319}, {"text": "job so let's uh look at the script so", "start": 1628.32, "duration": 7.92}, {"text": "that uh I can explain what's going on so", "start": 1632.52, "duration": 6.24}, {"text": "uh these are all very small tasks so I'm", "start": 1636.24, "duration": 4.6}, {"text": "just doing a shared partition because we", "start": 1638.76, "duration": 3.919}, {"text": "don't need all 128 cores I'm just", "start": 1640.84, "duration": 4.559}, {"text": "running with 16 cores in this case the", "start": 1642.679, "duration": 4.201}, {"text": "other thing you'll notice is that I'm", "start": 1645.399, "duration": 3.76}, {"text": "doing no equal 1 and task per node", "start": 1646.88, "duration": 5.399}, {"text": "equals 1 and then CPUs per task equals", "start": 1649.159, "duration": 5.481}, {"text": "16 this is the way to do it when you're", "start": 1652.279, "duration": 7.921}, {"text": "doing threads is the number of task uh", "start": 1654.64, "duration": 7.639}, {"text": "is one because there's only one pro main", "start": 1660.2, "duration": 4.0}, {"text": "process that gets launched and", "start": 1662.279, "duration": 3.841}, {"text": "everything else is threads so which are", "start": 1664.2, "duration": 4.719}, {"text": "like the task CPUs per task so that's", "start": 1666.12, "duration": 6.2}, {"text": "what you should be doing uh this is not", "start": 1668.919, "duration": 6.721}, {"text": "so important if you compiled it with uh", "start": 1672.32, "duration": 8.12}, {"text": "uh just uh straight open MP but uh flag", "start": 1675.64, "duration": 7.24}, {"text": "but if you had a hybrid compilation", "start": 1680.44, "duration": 4.359}, {"text": "where you used an MPI compiler with an", "start": 1682.88, "duration": 6.679}, {"text": "open MP flag then it's actually uh uh", "start": 1684.799, "duration": 7.961}, {"text": "bad if you do uh anasp node equals 16", "start": 1689.559, "duration": 5.0}, {"text": "because it's going to launch 16 MPI", "start": 1692.76, "duration": 3.279}, {"text": "tasks and then the threads are going to", "start": 1694.559, "duration": 3.561}, {"text": "be all over subscribed like each of the", "start": 1696.039, "duration": 4.0}, {"text": "task will be bound to One Core and then", "start": 1698.12, "duration": 4.08}, {"text": "you're going to have 16 threads on that", "start": 1700.039, "duration": 4.681}, {"text": "core which is going to be a problem so", "start": 1702.2, "duration": 4.359}, {"text": "you should always match the CPUs per", "start": 1704.72, "duration": 3.959}, {"text": "task to the number of open", "start": 1706.559, "duration": 5.6}, {"text": "ands and once it's run you should see uh", "start": 1708.679, "duration": 7.961}, {"text": "something like this uh basically hello", "start": 1712.159, "duration": 7.801}, {"text": "from each of the threads and then the uh", "start": 1716.64, "duration": 5.44}, {"text": "just the value of", "start": 1719.96, "duration": 6.959}, {"text": "pi uh let's go back", "start": 1722.08, "duration": 4.839}, {"text": "yes so that was a uh a simple thing uh", "start": 1727.519, "duration": 6.361}, {"text": "oh I think I have a wrong title here", "start": 1731.559, "duration": 7.84}, {"text": "this is just a pi uh uh uh", "start": 1733.88, "duration": 5.519}, {"text": "output but there are like more workshare", "start": 1740.159, "duration": 4.12}, {"text": "constructs as I said the sections", "start": 1742.679, "duration": 3.561}, {"text": "directive basically the entire section", "start": 1744.279, "duration": 4.721}, {"text": "is divided among the threads there's a", "start": 1746.24, "duration": 5.4}, {"text": "work uh work share basically that", "start": 1749.0, "duration": 5.039}, {"text": "divides execution into units of work", "start": 1751.64, "duration": 5.519}, {"text": "Each of which is executed once there's a", "start": 1754.039, "duration": 5.52}, {"text": "single directive which basically says", "start": 1757.159, "duration": 4.961}, {"text": "execute this with only one", "start": 1759.559, "duration": 5.801}, {"text": "thread uh you can also make it a master", "start": 1762.12, "duration": 5.799}, {"text": "directive which says that the region is", "start": 1765.36, "duration": 4.679}, {"text": "executed only by a master", "start": 1767.919, "duration": 6.201}, {"text": "thread uh there's critical that says uh", "start": 1770.039, "duration": 6.76}, {"text": "you need to take the piece of code that", "start": 1774.12, "duration": 5.52}, {"text": "is critical and executed one thread at a", "start": 1776.799, "duration": 6.961}, {"text": "time uh then there are barriers uh and", "start": 1779.64, "duration": 5.84}, {"text": "then there are weight directives for all", "start": 1783.76, "duration": 4.24}, {"text": "the child task to finish and there's an", "start": 1785.48, "duration": 5.4}, {"text": "atomic directive which basically says a", "start": 1788.0, "duration": 4.72}, {"text": "specific memory location should be", "start": 1790.88, "duration": 3.799}, {"text": "updated automatically that is not all", "start": 1792.72, "duration": 3.36}, {"text": "threads should be able to write it at", "start": 1794.679, "duration": 4.641}, {"text": "the same time so", "start": 1796.08, "duration": 3.24}, {"text": "uh now let's look at a more uh slightly", "start": 1800.519, "duration": 6.04}, {"text": "more complicated problem uh where we are", "start": 1803.76, "duration": 6.919}, {"text": "trying to solve uh uh uh the heat", "start": 1806.559, "duration": 7.081}, {"text": "equation so the just the evolution of of", "start": 1810.679, "duration": 5.801}, {"text": "a temperature profile uh in one", "start": 1813.64, "duration": 7.68}, {"text": "1D uh so there's uh basically a partial", "start": 1816.48, "duration": 6.84}, {"text": "derivative in time and a second", "start": 1821.32, "duration": 4.04}, {"text": "derivative in X and you're basically", "start": 1823.32, "duration": 4.839}, {"text": "integrating this numerically so we just", "start": 1825.36, "duration": 6.799}, {"text": "discretize it uh in a very simple way uh", "start": 1828.159, "duration": 6.721}, {"text": "just approximating the derivative at the", "start": 1832.159, "duration": 4.52}, {"text": "first order on the time side and then", "start": 1834.88, "duration": 5.36}, {"text": "second order on the spatial", "start": 1836.679, "duration": 7.441}, {"text": "side and uh uh I reason I picked this", "start": 1840.24, "duration": 6.64}, {"text": "problem is uh I'm going to show you this", "start": 1844.12, "duration": 5.439}, {"text": "problem in open MP right now but then", "start": 1846.88, "duration": 4.76}, {"text": "we'll go and do the same thing in MPI", "start": 1849.559, "duration": 5.521}, {"text": "and you'll see why it's easier in openmp", "start": 1851.64, "duration": 6.12}, {"text": "to do the thing and then how", "start": 1855.08, "duration": 4.079}, {"text": "how you'll have to separate things out", "start": 1857.76, "duration": 3.399}, {"text": "in", "start": 1859.159, "duration": 5.921}, {"text": "MPI so if you look at the equation uh", "start": 1861.159, "duration": 7.321}, {"text": "it's again uh there is the initial part", "start": 1865.08, "duration": 5.68}, {"text": "which is run only by the master so this", "start": 1868.48, "duration": 5.52}, {"text": "is where I'm uh doing the M uh Master", "start": 1870.76, "duration": 5.2}, {"text": "directive that I was talking", "start": 1874.0, "duration": 4.399}, {"text": "about and I'm using exactly three", "start": 1875.96, "duration": 5.839}, {"text": "threads here not for any reason that uh", "start": 1878.399, "duration": 6.041}, {"text": "is uh tied to open m or anything it's", "start": 1881.799, "duration": 4.801}, {"text": "just I'm going to do the same three", "start": 1884.44, "duration": 5.76}, {"text": "threads on MPI and uh and I did three", "start": 1886.6, "duration": 6.079}, {"text": "threads three tasks there because it's a", "start": 1890.2, "duration": 4.56}, {"text": "very easy to explain like the domain", "start": 1892.679, "duration": 5.321}, {"text": "decomposition with a visual uh layout of", "start": 1894.76, "duration": 5.12}, {"text": "the grid that's that's what I was trying", "start": 1898.0, "duration": 4.559}, {"text": "to do uh this is not something that you", "start": 1899.88, "duration": 4.799}, {"text": "should do normally that is like fix the", "start": 1902.559, "duration": 4.12}, {"text": "number of threads in code like it needs", "start": 1904.679, "duration": 5.441}, {"text": "to be kind of a variable that you can uh", "start": 1906.679, "duration": 6.281}, {"text": "Set uh", "start": 1910.12, "duration": 5.559}, {"text": "explicitly uh uh outside of the Corde", "start": 1912.96, "duration": 4.719}, {"text": "domain basically", "start": 1915.679, "duration": 4.401}, {"text": "so the code we just initialize the", "start": 1917.679, "duration": 4.401}, {"text": "temperature it's a sign curve that we", "start": 1920.08, "duration": 4.439}, {"text": "are initializing it with uh and then we", "start": 1922.08, "duration": 4.24}, {"text": "are iterating for three", "start": 1924.519, "duration": 4.081}, {"text": "steps so you do a", "start": 1926.32, "duration": 6.8}, {"text": "dup basically parallelize the loop uh", "start": 1928.6, "duration": 9.679}, {"text": "the private part is the global uh uh uh", "start": 1933.12, "duration": 8.559}, {"text": "variable there and uh actually that", "start": 1938.279, "duration": 6.481}, {"text": "wouldn't have mattered I think but uh", "start": 1941.679, "duration": 6.561}, {"text": "anyway we are uh uh and then the shared", "start": 1944.76, "duration": 7.24}, {"text": "part is basically all the uh", "start": 1948.24, "duration": 7.159}, {"text": "temperature uh the alpha the Delta X", "start": 1952.0, "duration": 5.039}, {"text": "delta T and", "start": 1955.399, "duration": 4.24}, {"text": "time so it just takes this Loop and", "start": 1957.039, "duration": 4.201}, {"text": "parallelize", "start": 1959.639, "duration": 3.321}, {"text": "essentially and then we write the", "start": 1961.24, "duration": 5.399}, {"text": "solution out so um there's another", "start": 1962.96, "duration": 8.24}, {"text": "script uh heator openmp dosb you can run", "start": 1966.639, "duration": 8.201}, {"text": "this but uh it's simple enough to submit", "start": 1971.2, "duration": 6.68}, {"text": "the job and look at it uh but but uh I'm", "start": 1974.84, "duration": 6.24}, {"text": "going to skip submitting that from my", "start": 1977.88, "duration": 6.919}, {"text": "account uh so you see the sample output", "start": 1981.08, "duration": 5.68}, {"text": "you just get three iterations and then", "start": 1984.799, "duration": 4.401}, {"text": "the solution that gets printed out just", "start": 1986.76, "duration": 4.279}, {"text": "remember this when we get to the NPI", "start": 1989.2, "duration": 4.24}, {"text": "part so remember here it was a very", "start": 1991.039, "duration": 5.081}, {"text": "simple thing right uh this is really the", "start": 1993.44, "duration": 5.52}, {"text": "only uh thing that's different from the", "start": 1996.12, "duration": 5.32}, {"text": "C code that would have been serial like", "start": 1998.96, "duration": 3.8}, {"text": "the serial code would have done this", "start": 2001.44, "duration": 4.44}, {"text": "Loop without these uh without these uh", "start": 2002.76, "duration": 5.039}, {"text": "pragmas that's it", "start": 2005.88, "duration": 3.44}, {"text": "right so you just added this and it", "start": 2007.799, "duration": 4.321}, {"text": "became parallel now we'll look at it on", "start": 2009.32, "duration": 5.0}, {"text": "the MPI side", "start": 2012.12, "duration": 5.12}, {"text": "later so there are uh some runtime", "start": 2014.32, "duration": 6.28}, {"text": "libraries in openmp uh that let you set", "start": 2017.24, "duration": 6.76}, {"text": "and query the number of threads uh oh I", "start": 2020.6, "duration": 5.72}, {"text": "heard something things usually that", "start": 2024.0, "duration": 5.72}, {"text": "is a question let's", "start": 2026.32, "duration": 7.239}, {"text": "see oh there's a question about why", "start": 2029.72, "duration": 5.679}, {"text": "there is an openmp barrier it's to just", "start": 2033.559, "duration": 3.801}, {"text": "synchronize across all the task if you", "start": 2035.399, "duration": 4.76}, {"text": "want all of them to kind of wait for uh", "start": 2037.36, "duration": 3.96}, {"text": "everything to", "start": 2040.159, "duration": 4.441}, {"text": "finish uh this is kind of needed if", "start": 2041.32, "duration": 7.599}, {"text": "you're doing Loops uh because you like", "start": 2044.6, "duration": 7.039}, {"text": "like here for example you had the time", "start": 2048.919, "duration": 8.321}, {"text": "steps uh uh uh you don't want to end up", "start": 2051.639, "duration": 7.96}, {"text": "on different uh time steps on different", "start": 2057.24, "duration": 4.159}, {"text": "threads right so you want to have a", "start": 2059.599, "duration": 5.0}, {"text": "barrier to kind of make synchronize", "start": 2061.399, "duration": 7.48}, {"text": "everything so let me go back here", "start": 2064.599, "duration": 4.28}, {"text": "so the runtime Library routines uh uh", "start": 2075.48, "duration": 4.56}, {"text": "setting and querying the number of", "start": 2078.56, "duration": 3.88}, {"text": "threads uh there are routines for that", "start": 2080.04, "duration": 4.68}, {"text": "uh you can do the thread identifier we", "start": 2082.44, "duration": 3.199}, {"text": "saw", "start": 2084.72, "duration": 4.08}, {"text": "that uh we can also set like the dynamic", "start": 2085.639, "duration": 5.0}, {"text": "threads feature using a", "start": 2088.8, "duration": 5.319}, {"text": "library uh you can do nested parallelism", "start": 2090.639, "duration": 6.361}, {"text": "you can uh do Locks and also you can", "start": 2094.119, "duration": 4.841}, {"text": "basically query the wall clock time and", "start": 2097.0, "duration": 5.079}, {"text": "so on so there are some routines for uh", "start": 2098.96, "duration": 5.119}, {"text": "uh doing some these tasks and some of", "start": 2102.079, "duration": 3.52}, {"text": "these can be done using environment", "start": 2104.079, "duration": 3.841}, {"text": "variables which is what is on the next", "start": 2105.599, "duration": 5.801}, {"text": "slide so you can do the OMP schedule OMP", "start": 2107.92, "duration": 8.159}, {"text": "num threads OMP Dynamic true or false", "start": 2111.4, "duration": 8.04}, {"text": "OMP proc bind uh this is an important", "start": 2116.079, "duration": 6.161}, {"text": "one because uh it binds the", "start": 2119.44, "duration": 7.48}, {"text": "threads uh uh this may not look", "start": 2122.24, "duration": 7.56}, {"text": "important in in terms of oh how does it", "start": 2126.92, "duration": 5.04}, {"text": "matter if the thread is moving around", "start": 2129.8, "duration": 5.76}, {"text": "but remember uh all our memory layouts", "start": 2131.96, "duration": 7.2}, {"text": "are kind of non-uniform AIS right so", "start": 2135.56, "duration": 6.2}, {"text": "imagine on expanse if you had the whole", "start": 2139.16, "duration": 5.64}, {"text": "node uh but you were using say 18", "start": 2141.76, "duration": 5.72}, {"text": "threads uh sorry 16 threads and eight", "start": 2144.8, "duration": 6.6}, {"text": "TSS and you let the 16 threads B then", "start": 2147.48, "duration": 6.879}, {"text": "you could end up in a situation where uh", "start": 2151.4, "duration": 4.6}, {"text": "some of the threads end up on the other", "start": 2154.359, "duration": 3.121}, {"text": "socket and then", "start": 2156.0, "duration": 3.52}, {"text": "your memory latencies and your memory", "start": 2157.48, "duration": 5.08}, {"text": "access is going to be a lot slower and", "start": 2159.52, "duration": 6.0}, {"text": "you'll lose performance so uh you want", "start": 2162.56, "duration": 6.72}, {"text": "to bind the task to the uh threads as", "start": 2165.52, "duration": 6.319}, {"text": "much to each location as much as", "start": 2169.28, "duration": 6.52}, {"text": "possible so that uh so that they don't", "start": 2171.839, "duration": 6.961}, {"text": "move around during the Run basically so", "start": 2175.8, "duration": 6.24}, {"text": "if it uh allocates memory locally then", "start": 2178.8, "duration": 6.319}, {"text": "it will stay local and uh uh scale", "start": 2182.04, "duration": 5.279}, {"text": "better basically", "start": 2185.119, "duration": 4.561}, {"text": "there's also the OMP stack size this is", "start": 2187.319, "duration": 5.321}, {"text": "the size of the stack for the threads uh", "start": 2189.68, "duration": 5.2}, {"text": "that becomes an issue if", "start": 2192.64, "duration": 4.52}, {"text": "you're basically initializing a lot of", "start": 2194.88, "duration": 5.08}, {"text": "variables on the stack and uh it's not", "start": 2197.16, "duration": 4.72}, {"text": "enough the default is not enough so you", "start": 2199.96, "duration": 3.76}, {"text": "can change", "start": 2201.88, "duration": 3.88}, {"text": "that", "start": 2203.72, "duration": 7.92}, {"text": "uh some general considerations of uh uh", "start": 2205.76, "duration": 7.68}, {"text": "openmp", "start": 2211.64, "duration": 4.679}, {"text": "performance one thing is minimize the", "start": 2213.44, "duration": 5.32}, {"text": "use of of barrier critical and ordered", "start": 2216.319, "duration": 5.8}, {"text": "regions basically all of these mean that", "start": 2218.76, "duration": 4.88}, {"text": "uh threads will wait for the other", "start": 2222.119, "duration": 4.641}, {"text": "threads like they won't run in parallel", "start": 2223.64, "duration": 5.679}, {"text": "so if you have a big section that is", "start": 2226.76, "duration": 4.64}, {"text": "doing this sort of stuff you might end", "start": 2229.319, "duration": 5.201}, {"text": "up with a poorly scaling", "start": 2231.4, "duration": 6.08}, {"text": "code and parallelize at a high level", "start": 2234.52, "duration": 4.839}, {"text": "maximize the work in the parallel region", "start": 2237.48, "duration": 4.52}, {"text": "to reduce the", "start": 2239.359, "duration": 6.321}, {"text": "overheads uh uh use the right Loop", "start": 2242.0, "duration": 5.76}, {"text": "scheduling like as a mentioned depending", "start": 2245.68, "duration": 5.12}, {"text": "on how your workload is like say the the", "start": 2247.76, "duration": 4.92}, {"text": "one that we just did where the loop is", "start": 2250.8, "duration": 4.68}, {"text": "kind of doing the same amount of work at", "start": 2252.68, "duration": 6.8}, {"text": "every step you can just do a static uh", "start": 2255.48, "duration": 7.72}, {"text": "decomposition but uh but if you had uh a", "start": 2259.48, "duration": 6.24}, {"text": "situation where you know some parts of", "start": 2263.2, "duration": 4.6}, {"text": "it take longer than other parts because", "start": 2265.72, "duration": 5.359}, {"text": "you have some random component that uh", "start": 2267.8, "duration": 5.92}, {"text": "decides uh how much time you might end", "start": 2271.079, "duration": 5.361}, {"text": "up spending in in a particular region", "start": 2273.72, "duration": 4.68}, {"text": "then then uh you can have an very", "start": 2276.44, "duration": 3.919}, {"text": "unbalanced situation you want a dynamic", "start": 2278.4, "duration": 5.16}, {"text": "or guided kind of uh", "start": 2280.359, "duration": 5.801}, {"text": "scheduling the last line there is avoid", "start": 2283.56, "duration": 4.08}, {"text": "false sharing and then I'm going to talk", "start": 2286.16, "duration": 4.24}, {"text": "about that in little bit", "start": 2287.64, "duration": 6.16}, {"text": "detail so what is false sharing uh a lot", "start": 2290.4, "duration": 6.08}, {"text": "of the modern processors have cash", "start": 2293.8, "duration": 6.12}, {"text": "buffers between the slow memory and the", "start": 2296.48, "duration": 6.92}, {"text": "highspeed uh uh registers of the CPU you", "start": 2299.92, "duration": 7.24}, {"text": "saw that uh in the architecture for the", "start": 2303.4, "duration": 8.199}, {"text": "CPU right uh now when you uh access a", "start": 2307.16, "duration": 7.84}, {"text": "memory location it doesn't just load the", "start": 2311.599, "duration": 5.76}, {"text": "one memory location it causes a cach", "start": 2315.0, "duration": 4.28}, {"text": "line to be copied into the", "start": 2317.359, "duration": 4.841}, {"text": "cache now in an openmp code two", "start": 2319.28, "duration": 5.88}, {"text": "processors might end up uh accessing two", "start": 2322.2, "duration": 6.2}, {"text": "different elements in the same cach line", "start": 2325.16, "duration": 5.4}, {"text": "now this is fine if you're reading the", "start": 2328.4, "duration": 4.88}, {"text": "data but if you write to the data what", "start": 2330.56, "duration": 6.32}, {"text": "will happen is uh this will like one of", "start": 2333.28, "duration": 5.24}, {"text": "them will write and The Cash Line will", "start": 2336.88, "duration": 3.959}, {"text": "get marked invalid because you have to", "start": 2338.52, "duration": 4.24}, {"text": "be coherent across all of them so then", "start": 2340.839, "duration": 4.961}, {"text": "the whole Cash Line will go out to M", "start": 2342.76, "duration": 5.72}, {"text": "main memory and you have to reread it", "start": 2345.8, "duration": 4.799}, {"text": "and that can lead to a huge amount of", "start": 2348.48, "duration": 4.08}, {"text": "memory traffic even though the right is", "start": 2350.599, "duration": 5.0}, {"text": "not to the same element it's to", "start": 2352.56, "duration": 5.0}, {"text": "different elements but it's basically in", "start": 2355.599, "duration": 3.48}, {"text": "the same cach", "start": 2357.56, "duration": 3.92}, {"text": "line which is why it's called FAL", "start": 2359.079, "duration": 4.24}, {"text": "sharing because it's not actually doing", "start": 2361.48, "duration": 5.16}, {"text": "to the same element uh but what it does", "start": 2363.319, "duration": 6.201}, {"text": "is increases uh a lot of traffic out of", "start": 2366.64, "duration": 5.0}, {"text": "your cash to the main memory and that", "start": 2369.52, "duration": 4.2}, {"text": "can have a huge performance", "start": 2371.64, "duration": 4.56}, {"text": "impact especially if this is in a loop", "start": 2373.72, "duration": 6.28}, {"text": "and there's a lot of info on uh on this", "start": 2376.2, "duration": 6.8}, {"text": "in the uh in this link on the Intel site", "start": 2380.0, "duration": 4.76}, {"text": "and also this YouTube video you can take", "start": 2383.0, "duration": 3.2}, {"text": "a look at", "start": 2384.76, "duration": 5.0}, {"text": "it uh and it's quite easy to do because", "start": 2386.2, "duration": 4.879}, {"text": "uh", "start": 2389.76, "duration": 5.319}, {"text": "uh uh because if you have uh like an", "start": 2391.079, "duration": 7.481}, {"text": "array and then you're updating it uh if", "start": 2395.079, "duration": 7.04}, {"text": "that is uh if the array is like larger", "start": 2398.56, "duration": 8.24}, {"text": "than a uh I mean is basically uh being", "start": 2402.119, "duration": 7.041}, {"text": "split up uh into multiple threads you", "start": 2406.8, "duration": 6.0}, {"text": "could end up with parts of uh it on on", "start": 2409.16, "duration": 5.919}, {"text": "the same cach line and you end up with a", "start": 2412.8, "duration": 4.48}, {"text": "false sharing so there are lots of", "start": 2415.079, "duration": 4.601}, {"text": "options of avoiding this there are", "start": 2417.28, "duration": 4.6}, {"text": "compiler D directives which basically", "start": 2419.68, "duration": 4.399}, {"text": "align the variables on a cach line", "start": 2421.88, "duration": 5.0}, {"text": "boundary you can pad these array so that", "start": 2424.079, "duration": 5.641}, {"text": "the AR elements begin on the cach line", "start": 2426.88, "duration": 5.68}, {"text": "boundary uh or you can just do thread", "start": 2429.72, "duration": 6.08}, {"text": "local copies of data uh assuming that", "start": 2432.56, "duration": 5.44}, {"text": "the copy overhead is small compared to", "start": 2435.8, "duration": 4.92}, {"text": "the overall run", "start": 2438.0, "duration": 6.48}, {"text": "time uh I just have this homework slide", "start": 2440.72, "duration": 6.28}, {"text": "you don't have to do it but you can uh", "start": 2444.48, "duration": 4.599}, {"text": "go poke around the one thing I want to", "start": 2447.0, "duration": 4.0}, {"text": "mention is that the liore tutorial that", "start": 2449.079, "duration": 4.121}, {"text": "I have linked here and I have the link", "start": 2451.0, "duration": 5.839}, {"text": "at the end too uh", "start": 2453.2, "duration": 10.52}, {"text": "uh you can go there because uh uh uh uh", "start": 2456.839, "duration": 8.48}, {"text": "basically", "start": 2463.72, "duration": 4.76}, {"text": "um uh they have a lot more detail on", "start": 2465.319, "duration": 5.601}, {"text": "both open MP and MPI these are really", "start": 2468.48, "duration": 5.359}, {"text": "nice tutorials with a lot of lot of", "start": 2470.92, "duration": 5.399}, {"text": "information like they are full day", "start": 2473.839, "duration": 5.041}, {"text": "tutorials uh we are doing the what we", "start": 2476.319, "duration": 4.201}, {"text": "are doing the content in like half an", "start": 2478.88, "duration": 3.92}, {"text": "hour I mean one and a half hour what it", "start": 2480.52, "duration": 4.68}, {"text": "should be like uh at a full full day", "start": 2482.8, "duration": 5.24}, {"text": "level so you can go take a look for all", "start": 2485.2, "duration": 4.32}, {"text": "the", "start": 2488.04, "duration": 4.76}, {"text": "details uh and you can you can take this", "start": 2489.52, "duration": 6.28}, {"text": "particular example and uh try to uh", "start": 2492.8, "duration": 5.36}, {"text": "figure out how to do a", "start": 2495.8, "duration": 4.799}, {"text": "uh you know the various scheduling and", "start": 2498.16, "duration": 4.159}, {"text": "environment variables and see how much", "start": 2500.599, "duration": 2.72}, {"text": "is going", "start": 2502.319, "duration": 5.841}, {"text": "on so um that's basically the openmp", "start": 2503.319, "duration": 7.561}, {"text": "part of it uh I'll do a little bit of", "start": 2508.16, "duration": 4.64}, {"text": "MPI and then we can take maybe a 10", "start": 2510.88, "duration": 5.92}, {"text": "minute break I think um", "start": 2512.8, "duration": 8.12}, {"text": "so uh all of what we looked at so far is", "start": 2516.8, "duration": 6.48}, {"text": "shared memory on a single node right but", "start": 2520.92, "duration": 4.32}, {"text": "if you need to go multiple node you you", "start": 2523.28, "duration": 4.92}, {"text": "have to do MPI now you can do MPI within", "start": 2525.24, "duration": 6.119}, {"text": "a node too there's no no issue doing", "start": 2528.2, "duration": 6.48}, {"text": "that in fact a lot of codes uh might do", "start": 2531.359, "duration": 7.361}, {"text": "better with MPI even on a single node uh", "start": 2534.68, "duration": 6.96}, {"text": "uh just because of uh the overheads and", "start": 2538.72, "duration": 5.839}, {"text": "all the all the issues that we were", "start": 2541.64, "duration": 4.919}, {"text": "seeing with the fault sharing and those", "start": 2544.559, "duration": 4.921}, {"text": "sort of things uh you can sort of avoid", "start": 2546.559, "duration": 4.8}, {"text": "some of those issues with", "start": 2549.48, "duration": 5.44}, {"text": "MPI um", "start": 2551.359, "duration": 7.681}, {"text": "so uh it's a low-level message passing", "start": 2554.92, "duration": 7.08}, {"text": "abstraction so basically uh the same", "start": 2559.04, "duration": 5.88}, {"text": "code runs everywhere but uh depending on", "start": 2562.0, "duration": 6.0}, {"text": "which task it is you can uh use uh work", "start": 2564.92, "duration": 5.36}, {"text": "on different parts of the", "start": 2568.0, "duration": 4.92}, {"text": "data uh it's designed for distributed", "start": 2570.28, "duration": 6.16}, {"text": "memory uh but you can uh as I said you", "start": 2572.92, "duration": 6.24}, {"text": "can do it on a single node also you can", "start": 2576.44, "duration": 5.159}, {"text": "um combine MPI with open", "start": 2579.16, "duration": 7.08}, {"text": "mp uh it's a specification it's portable", "start": 2581.599, "duration": 6.601}, {"text": "uh so it's kind of a def facto standard", "start": 2586.24, "duration": 3.44}, {"text": "for parallel", "start": 2588.2, "duration": 3.0}, {"text": "Computing", "start": 2589.68, "duration": 4.56}, {"text": "um there are lots of implementations of", "start": 2591.2, "duration": 6.08}, {"text": "this uh so there's mvap 2 which used to", "start": 2594.24, "duration": 5.56}, {"text": "be the default on Comet uh on expans we", "start": 2597.28, "duration": 4.24}, {"text": "didn't set a default because we figured", "start": 2599.8, "duration": 4.24}, {"text": "out that a lot of", "start": 2601.52, "duration": 5.36}, {"text": "applications uh we there wasn't one", "start": 2604.04, "duration": 4.799}, {"text": "single MPI that was doing well on all of", "start": 2606.88, "duration": 3.92}, {"text": "them like we kind of have to use", "start": 2608.839, "duration": 3.841}, {"text": "different ones for different codes so we", "start": 2610.8, "duration": 5.08}, {"text": "didn't put a default in uh there's uh", "start": 2612.68, "duration": 7.56}, {"text": "Intel MPI and there's open MPI uh pretty", "start": 2615.88, "duration": 6.08}, {"text": "much high performance implementations", "start": 2620.24, "duration": 4.8}, {"text": "are available on any interconnect and", "start": 2621.96, "duration": 6.08}, {"text": "system uh even the specialized machines", "start": 2625.04, "duration": 5.079}, {"text": "like The Craze will have a MPI", "start": 2628.04, "duration": 4.24}, {"text": "implementation that's specific to their", "start": 2630.119, "duration": 4.681}, {"text": "machine that is very", "start": 2632.28, "duration": 4.6}, {"text": "performant uh", "start": 2634.8, "duration": 3.88}, {"text": "and there's a lot of different types of", "start": 2636.88, "duration": 3.239}, {"text": "communication you can do you can do", "start": 2638.68, "duration": 4.2}, {"text": "point to point that is one task tasking", "start": 2640.119, "duration": 5.561}, {"text": "uh talking to one other task or you can", "start": 2642.88, "duration": 4.8}, {"text": "do Collective where all the tasks are", "start": 2645.68, "duration": 4.32}, {"text": "talking to each other uh basically", "start": 2647.68, "duration": 5.0}, {"text": "sending data to each other and you can", "start": 2650.0, "duration": 5.92}, {"text": "also have uh various data", "start": 2652.68, "duration": 6.6}, {"text": "types and there's parallel IO there's", "start": 2655.92, "duration": 5.72}, {"text": "tools to basically uh look at the", "start": 2659.28, "duration": 4.799}, {"text": "performance and there's also one-sided", "start": 2661.64, "duration": 4.0}, {"text": "communication lots of different things", "start": 2664.079, "duration": 3.921}, {"text": "you can do", "start": 2665.64, "duration": 2.36}, {"text": "so what are the typical things in an MPI", "start": 2668.48, "duration": 6.72}, {"text": "code so you have um usually you start", "start": 2671.24, "duration": 6.599}, {"text": "with an MPI include file which has uh", "start": 2675.2, "duration": 5.32}, {"text": "some of the definitions of uh all these", "start": 2677.839, "duration": 6.441}, {"text": "uh uh uh functions and", "start": 2680.52, "duration": 8.319}, {"text": "variables uh and after the include file", "start": 2684.28, "duration": 8.839}, {"text": "you can basically do uh your normal", "start": 2688.839, "duration": 6.361}, {"text": "declarations and then do an NPI", "start": 2693.119, "duration": 4.161}, {"text": "initialization", "start": 2695.2, "duration": 5.639}, {"text": "uh once the MPI in it happens it's the", "start": 2697.28, "duration": 5.64}, {"text": "basically the parallel code from there", "start": 2700.839, "duration": 6.76}, {"text": "on now remember uh uh in MPI what will", "start": 2702.92, "duration": 7.679}, {"text": "happen so in open MP you had one process", "start": 2707.599, "duration": 4.801}, {"text": "and then a bunch of threads being spawn", "start": 2710.599, "duration": 2.841}, {"text": "right an", "start": 2712.4, "duration": 5.24}, {"text": "MPI uh when you start launch an MPI job", "start": 2713.44, "duration": 8.44}, {"text": "it will just launch uh like if you", "start": 2717.64, "duration": 5.959}, {"text": "different number of tasks so say if you", "start": 2721.88, "duration": 4.679}, {"text": "say I want 16 tasks it's going to launch", "start": 2723.599, "duration": 5.441}, {"text": "16 different processes even if it's on", "start": 2726.559, "duration": 5.361}, {"text": "the same node and each process will have", "start": 2729.04, "duration": 5.96}, {"text": "its own memory it's which the other", "start": 2731.92, "duration": 6.8}, {"text": "tasks don't see uh it it's uh going to", "start": 2735.0, "duration": 6.92}, {"text": "have the same uh variables and", "start": 2738.72, "duration": 5.72}, {"text": "definitions all private to that task", "start": 2741.92, "duration": 5.84}, {"text": "right so the other task has no idea that", "start": 2744.44, "duration": 6.96}, {"text": "uh what's on the uh remaining", "start": 2747.76, "duration": 7.799}, {"text": "tasks so uh so the same code runs every", "start": 2751.4, "duration": 7.36}, {"text": "on within each task uh is just that you", "start": 2755.559, "duration": 5.52}, {"text": "do know the MPI rank so you'll know", "start": 2758.76, "duration": 5.48}, {"text": "which process you're on right in each", "start": 2761.079, "duration": 6.641}, {"text": "task so it's your job to basically write", "start": 2764.24, "duration": 6.16}, {"text": "code that does different things based on", "start": 2767.72, "duration": 6.119}, {"text": "this rank so basically say if you launch", "start": 2770.4, "duration": 5.76}, {"text": "16 task you will have an task ID that", "start": 2773.839, "duration": 4.441}, {"text": "goes from 0 to 15 and then you have to", "start": 2776.16, "duration": 5.32}, {"text": "divide up uh say oh task zero should be", "start": 2778.28, "duration": 5.48}, {"text": "doing this piece of the work task one", "start": 2781.48, "duration": 3.72}, {"text": "should be doing this piece of the work", "start": 2783.76, "duration": 3.44}, {"text": "and so on you have to explicitly do that", "start": 2785.2, "duration": 4.32}, {"text": "there's no automatic thing that can do", "start": 2787.2, "duration": 4.159}, {"text": "it like whereas on the open MP side", "start": 2789.52, "duration": 3.839}, {"text": "remember the you could take a do Loop", "start": 2791.359, "duration": 3.96}, {"text": "and say parize this and it's going to", "start": 2793.359, "duration": 5.48}, {"text": "just do that piece right uh but here", "start": 2795.319, "duration": 5.841}, {"text": "you're explicitly going to write code", "start": 2798.839, "duration": 5.041}, {"text": "that does different things uh based on", "start": 2801.16, "duration": 5.36}, {"text": "what the ID is and then you can", "start": 2803.88, "duration": 5.479}, {"text": "communicate between the processes uh", "start": 2806.52, "duration": 6.2}, {"text": "during the parallel section and you can", "start": 2809.359, "duration": 6.641}, {"text": "uh do some uh communication Exchange", "start": 2812.72, "duration": 5.359}, {"text": "information and then continue the", "start": 2816.0, "duration": 4.28}, {"text": "parallel code and then communicate again", "start": 2818.079, "duration": 4.961}, {"text": "and so on and then explain this with the", "start": 2820.28, "duration": 5.16}, {"text": "heat equation uh a little bit later", "start": 2823.04, "duration": 4.72}, {"text": "you'll kind of understand what I mean by", "start": 2825.44, "duration": 3.96}, {"text": "this", "start": 2827.76, "duration": 5.16}, {"text": "um so we'll start again with a simple", "start": 2829.4, "duration": 6.959}, {"text": "program that compiles spy uh same thing", "start": 2832.92, "duration": 5.56}, {"text": "we were doing before", "start": 2836.359, "duration": 6.281}, {"text": "uh and uh", "start": 2838.48, "duration": 7.839}, {"text": "uh uh find the number of uh", "start": 2842.64, "duration": 5.0}, {"text": "task and task", "start": 2846.319, "duration": 4.76}, {"text": "IDs uh calculate the pi using the", "start": 2847.64, "duration": 6.8}, {"text": "integral and uh then the end of the uh", "start": 2851.079, "duration": 5.24}, {"text": "code you're basically summing all of it", "start": 2854.44, "duration": 3.48}, {"text": "and using a collective reduction", "start": 2856.319, "duration": 3.121}, {"text": "operation so basically the same thing we", "start": 2857.92, "duration": 5.12}, {"text": "were doing before in this openmp", "start": 2859.44, "duration": 5.84}, {"text": "code but you'll see it's a little", "start": 2863.04, "duration": 5.2}, {"text": "different in terms of uh how the code", "start": 2865.28, "duration": 8.16}, {"text": "looks so you have uh include statements", "start": 2868.24, "duration": 8.48}, {"text": "like I was saying the MPI Doh uh you", "start": 2873.44, "duration": 5.8}, {"text": "have the initialization uh I mean the", "start": 2876.72, "duration": 4.68}, {"text": "variable definitions and then you have", "start": 2879.24, "duration": 5.72}, {"text": "the MPI in it which says okay this is an", "start": 2881.4, "duration": 4.6}, {"text": "MPI", "start": 2884.96, "duration": 5.24}, {"text": "code uh the MPI com size actually tells", "start": 2886.0, "duration": 5.52}, {"text": "you the number of", "start": 2890.2, "duration": 4.52}, {"text": "processes and the NPI com rank tells you", "start": 2891.52, "duration": 7.24}, {"text": "the rank of the particular task right", "start": 2894.72, "duration": 7.839}, {"text": "and then uh uh there are barriers in MPI", "start": 2898.76, "duration": 5.68}, {"text": "to where you can basically wait for all", "start": 2902.559, "duration": 4.321}, {"text": "the tasks but anyway in this case we", "start": 2904.44, "duration": 6.0}, {"text": "write it out now you can already see", "start": 2906.88, "duration": 5.4}, {"text": "there's a difference", "start": 2910.44, "duration": 4.24}, {"text": "right", "start": 2912.28, "duration": 5.079}, {"text": "uh basically if you look at the", "start": 2914.68, "duration": 7.52}, {"text": "initialization piece on on the open mpk", "start": 2917.359, "duration": 7.801}, {"text": "we just initialized it uh with a loop", "start": 2922.2, "duration": 5.72}, {"text": "right because uh basically the shared", "start": 2925.16, "duration": 7.639}, {"text": "memory here the thing is uh every P", "start": 2927.92, "duration": 6.879}, {"text": "every every processor will run the same", "start": 2932.799, "duration": 4.76}, {"text": "code right right so if you start the", "start": 2934.799, "duration": 6.401}, {"text": "loop from zero to some uh number of", "start": 2937.559, "duration": 6.201}, {"text": "intervals divided by the number of", "start": 2941.2, "duration": 5.28}, {"text": "processors uh you're going to run the", "start": 2943.76, "duration": 6.039}, {"text": "same uh loop variable on all of them so", "start": 2946.48, "duration": 5.28}, {"text": "say you had", "start": 2949.799, "duration": 5.961}, {"text": "128,000 uh uh as the number of intervals", "start": 2951.76, "duration": 5.96}, {"text": "and you're running with say four", "start": 2955.76, "duration": 4.48}, {"text": "processes your Loop will go from 0 to", "start": 2957.72, "duration": 5.52}, {"text": "32,000 on all four tasks so it's your", "start": 2960.24, "duration": 4.76}, {"text": "job to figure out hey if I'm on", "start": 2963.24, "duration": 3.92}, {"text": "processor Z I should be looking at this", "start": 2965.0, "duration": 4.16}, {"text": "range and if it's on processor one it's", "start": 2967.16, "duration": 4.399}, {"text": "a different range the way we are doing", "start": 2969.16, "duration": 5.8}, {"text": "that is we are defining a global", "start": 2971.559, "duration": 6.361}, {"text": "variable which is based on the rank uh", "start": 2974.96, "duration": 5.2}, {"text": "of the process so that you're doing", "start": 2977.92, "duration": 3.84}, {"text": "different parts of the integral on", "start": 2980.16, "duration": 3.24}, {"text": "different nodes and even the", "start": 2981.76, "duration": 3.96}, {"text": "initialization is different on so for", "start": 2983.4, "duration": 5.52}, {"text": "example if you're on the second task the", "start": 2985.72, "duration": 5.32}, {"text": "rank will be one because the rank is", "start": 2988.92, "duration": 4.04}, {"text": "starts from zero so the second task will", "start": 2991.04, "duration": 3.2}, {"text": "have a rank of", "start": 2992.96, "duration": 3.68}, {"text": "one and", "start": 2994.24, "duration": 5.64}, {"text": "uh notice I have this local interval", "start": 2996.64, "duration": 5.12}, {"text": "which is as I mentioned like if you", "start": 2999.88, "duration": 3.76}, {"text": "divide by four if it was four Tas you", "start": 3001.76, "duration": 3.88}, {"text": "would have 32,000 so then this would be", "start": 3003.64, "duration": 5.36}, {"text": "like 32,000 plus I right so the I is", "start": 3005.64, "duration": 6.8}, {"text": "still going from zero but then on rank", "start": 3009.0, "duration": 7.48}, {"text": "one uh you're going to go from 32,000 to", "start": 3012.44, "duration": 7.359}, {"text": "64,000 and rank two it will be 64 to 96", "start": 3016.48, "duration": 5.639}, {"text": "and so on So This Global variable is", "start": 3019.799, "duration": 4.961}, {"text": "telling you you know which piece of the", "start": 3022.119, "duration": 4.2}, {"text": "integral you're doing", "start": 3024.76, "duration": 3.76}, {"text": "so the x value that I'm calculating is", "start": 3026.319, "duration": 4.721}, {"text": "now based on This Global so that I'm", "start": 3028.52, "duration": 4.799}, {"text": "basically picking out uh the right part", "start": 3031.04, "duration": 5.48}, {"text": "of the integral to do on this task so", "start": 3033.319, "duration": 8.161}, {"text": "you calculate the 4/ 1 + x\u00b2 again now", "start": 3036.52, "duration": 7.079}, {"text": "this local Pi is going to be local to", "start": 3041.48, "duration": 5.319}, {"text": "each uh task so then you have to", "start": 3043.599, "duration": 5.321}, {"text": "explicitly do a reduction operation this", "start": 3046.799, "duration": 4.8}, {"text": "is another function called uh which", "start": 3048.92, "duration": 4.48}, {"text": "basically takes the local", "start": 3051.599, "duration": 8.2}, {"text": "Pi uh and uh does basically an MPI sum", "start": 3053.4, "duration": 8.64}, {"text": "on all the tasks and then puts it in", "start": 3059.799, "duration": 3.401}, {"text": "this P", "start": 3062.04, "duration": 3.48}, {"text": "Vari and that's what we output in the", "start": 3063.2, "duration": 6.24}, {"text": "end so it's a little different uh from", "start": 3065.52, "duration": 6.52}, {"text": "uh open MP in the sense you have to", "start": 3069.44, "duration": 6.72}, {"text": "explicitly break up the work uh by uh", "start": 3072.04, "duration": 6.799}, {"text": "telling telling it exactly what piece of", "start": 3076.16, "duration": 6.159}, {"text": "the work is being done in each", "start": 3078.839, "duration": 3.48}, {"text": "task so some of the", "start": 3083.119, "duration": 5.161}, {"text": "main parts of the code the initial MPI", "start": 3085.88, "duration": 4.84}, {"text": "in it this has to be called once in", "start": 3088.28, "duration": 4.44}, {"text": "every MPI program before you do any", "start": 3090.72, "duration": 6.32}, {"text": "other MPI functions NPI com size uh uh", "start": 3092.72, "duration": 7.28}, {"text": "Returns the total number of tasks in in", "start": 3097.04, "duration": 4.039}, {"text": "a", "start": 3100.0, "duration": 3.359}, {"text": "communicator uh MPI uses the", "start": 3101.079, "duration": 4.841}, {"text": "communicator to Define which collections", "start": 3103.359, "duration": 5.161}, {"text": "of processes can communicate with each", "start": 3105.92, "duration": 6.159}, {"text": "other and then the default MPI com World", "start": 3108.52, "duration": 6.24}, {"text": "includes all the processes the user", "start": 3112.079, "duration": 5.561}, {"text": "defined communicators are kind of uh", "start": 3114.76, "duration": 6.079}, {"text": "also an option but by default most codes", "start": 3117.64, "duration": 5.439}, {"text": "will be using NPI com World unless you", "start": 3120.839, "duration": 4.161}, {"text": "have some really fancy thing you want to", "start": 3123.079, "duration": 3.24}, {"text": "do with the", "start": 3125.0, "duration": 4.24}, {"text": "communicators uh one one situation", "start": 3126.319, "duration": 5.681}, {"text": "scenario in which this happens is uh", "start": 3129.24, "duration": 5.64}, {"text": "sometimes codes will like if you have a", "start": 3132.0, "duration": 4.64}, {"text": "lot of tasks like say you're running", "start": 3134.88, "duration": 5.16}, {"text": "with uh 64,000 tasks which some codes do", "start": 3136.64, "duration": 5.679}, {"text": "some codes are scalable enough that you", "start": 3140.04, "duration": 6.079}, {"text": "can go to huge core counts", "start": 3142.319, "duration": 6.121}, {"text": "you don't want to be writing from 64,000", "start": 3146.119, "duration": 4.68}, {"text": "cores that could be a huge problem", "start": 3148.44, "duration": 4.48}, {"text": "because it might uh overwhelm your", "start": 3150.799, "duration": 4.601}, {"text": "parallel file system if that many rights", "start": 3152.92, "duration": 4.24}, {"text": "are going out", "start": 3155.4, "duration": 4.28}, {"text": "simultaneously so you might write uh you", "start": 3157.16, "duration": 6.12}, {"text": "might have some tasks that are dedicated", "start": 3159.68, "duration": 6.28}, {"text": "to just doing the io and you might have", "start": 3163.28, "duration": 4.2}, {"text": "them in a different Communicator for", "start": 3165.96, "duration": 4.639}, {"text": "example so there are cases where this is", "start": 3167.48, "duration": 5.879}, {"text": "needed but most codes you'll be doing", "start": 3170.599, "duration": 5.2}, {"text": "one communicator and then the the Comm", "start": 3173.359, "duration": 4.48}, {"text": "com rank just Returns the ID of the", "start": 3175.799, "duration": 4.441}, {"text": "process within the", "start": 3177.839, "duration": 6.201}, {"text": "communicator and once you do finalize uh", "start": 3180.24, "duration": 9.44}, {"text": "uh the uh basically the MPI ends the", "start": 3184.04, "duration": 7.759}, {"text": "other routine in this code was the MPI", "start": 3189.68, "duration": 4.24}, {"text": "reduce which is a collective and we'll", "start": 3191.799, "duration": 5.32}, {"text": "have some examples of this later in the", "start": 3193.92, "duration": 8.12}, {"text": "talk so uh let's uh go and do this uh", "start": 3197.119, "duration": 8.761}, {"text": "piece uh uh of uh compiling and running", "start": 3202.04, "duration": 7.519}, {"text": "the MPI code and so I'm going to go", "start": 3205.88, "duration": 7.199}, {"text": "to the I think it is the simple", "start": 3209.559, "duration": 7.121}, {"text": "directory and the Run commands are there", "start": 3213.079, "duration": 7.321}, {"text": "so you can basically do module reset", "start": 3216.68, "duration": 8.76}, {"text": "module Lo GCC and module load uh GCC and", "start": 3220.4, "duration": 8.199}, {"text": "mvap H2 so mvap H2 is one of the MPI", "start": 3225.44, "duration": 7.6}, {"text": "flavors that's available on uh uh on", "start": 3228.599, "duration": 9.96}, {"text": "expans so uh let's compile the code", "start": 3233.04, "duration": 8.519}, {"text": "now", "start": 3238.559, "duration": 3.0}, {"text": "uh and I'm going to submit the job and", "start": 3245.839, "duration": 6.72}, {"text": "then look at the", "start": 3249.799, "duration": 2.76}, {"text": "script so in this case now you see that", "start": 3252.72, "duration": 5.0}, {"text": "I'm doing nodes equals 1 and task for", "start": 3255.72, "duration": 4.32}, {"text": "node is 16 because now it's 16 different", "start": 3257.72, "duration": 4.839}, {"text": "tasks right so that's that's what that", "start": 3260.04, "duration": 6.079}, {"text": "is and then uh for MPI launching we are", "start": 3262.559, "duration": 6.841}, {"text": "using srun uh there are other mechanisms", "start": 3266.119, "duration": 6.281}, {"text": "to launch this but uh srun is integrated", "start": 3269.4, "duration": 6.8}, {"text": "with slum so that kind of uh works well", "start": 3272.4, "duration": 7.199}, {"text": "uh so s run-- NPI equals pmi2 there are", "start": 3276.2, "duration": 7.0}, {"text": "so slum has different PMI interfaces uh", "start": 3279.599, "duration": 7.48}, {"text": "we just use pmi2 uh you can use PMI X if", "start": 3283.2, "duration": 6.04}, {"text": "your MPI is enabled with that and so on", "start": 3287.079, "duration": 3.841}, {"text": "but there are different", "start": 3289.24, "duration": 3.96}, {"text": "options but anyway what this will do is", "start": 3290.92, "duration": 6.639}, {"text": "launch 16 tasks uh and uh again you get", "start": 3293.2, "duration": 8.32}, {"text": "a hello from each task and the value of", "start": 3297.559, "duration": 3.961}, {"text": "P so uh now I'm going to kind of go a", "start": 3311.319, "duration": 6.641}, {"text": "little bit deeper into each of the", "start": 3315.76, "duration": 4.2}, {"text": "communication types and like you know", "start": 3317.96, "duration": 5.96}, {"text": "how you can pass data and so on uh so", "start": 3319.96, "duration": 5.44}, {"text": "starting off with point Point", "start": 3323.92, "duration": 3.119}, {"text": "communication this is basically if", "start": 3325.4, "duration": 3.679}, {"text": "you're passing data between two and only", "start": 3327.039, "duration": 5.681}, {"text": "two different mpas so like say you're", "start": 3329.079, "duration": 5.801}, {"text": "right going from task two to task four", "start": 3332.72, "duration": 4.96}, {"text": "for example so typically one task will", "start": 3334.88, "duration": 4.919}, {"text": "do a send and the other will perform a", "start": 3337.68, "duration": 3.2}, {"text": "matching", "start": 3339.799, "duration": 3.481}, {"text": "receive uh the send operations have", "start": 3340.88, "duration": 4.679}, {"text": "choices with different uh", "start": 3343.28, "duration": 5.079}, {"text": "synchronization and buffering options", "start": 3345.559, "duration": 4.961}, {"text": "basically when does a send when is a", "start": 3348.359, "duration": 4.121}, {"text": "send considered to be complete and when", "start": 3350.52, "duration": 4.519}, {"text": "is a send or where does a data sit when", "start": 3352.48, "duration": 6.0}, {"text": "when it uh till it's received and so on", "start": 3355.039, "duration": 5.641}, {"text": "and any type of send routine can be", "start": 3358.48, "duration": 4.28}, {"text": "paired with any type of receive", "start": 3360.68, "duration": 4.76}, {"text": "routines uh MPI also has some routines", "start": 3362.76, "duration": 4.279}, {"text": "to kind of probe the status of the", "start": 3365.44, "duration": 4.2}, {"text": "messages and some weight routines uh", "start": 3367.039, "duration": 4.721}, {"text": "that are associated with that so let's", "start": 3369.64, "duration": 5.679}, {"text": "look at some of the example", "start": 3371.76, "duration": 3.559}, {"text": "so uh basically if uh uh buffer space is", "start": 3376.0, "duration": 7.839}, {"text": "MPI buffer space is used for data that's", "start": 3381.76, "duration": 3.88}, {"text": "in transit whether it's waiting for a", "start": 3383.839, "duration": 3.641}, {"text": "receive to be ready or if there are lots", "start": 3385.64, "duration": 4.679}, {"text": "of sends and uh going at the to the same", "start": 3387.48, "duration": 5.92}, {"text": "task uh receive task and so on the", "start": 3390.319, "duration": 5.201}, {"text": "system buffer area is managed by the MPI", "start": 3393.4, "duration": 3.919}, {"text": "Library so the user really doesn't need", "start": 3395.52, "duration": 4.319}, {"text": "to know about this uh I'm just showing", "start": 3397.319, "duration": 5.28}, {"text": "you how it works that's all and it can", "start": 3399.839, "duration": 4.681}, {"text": "ex exist on both the sending and", "start": 3402.599, "duration": 2.841}, {"text": "receiving", "start": 3404.52, "duration": 4.599}, {"text": "side uh there is an option for user", "start": 3405.44, "duration": 7.08}, {"text": "manage send buffer also if if needed but", "start": 3409.119, "duration": 5.2}, {"text": "uh most of the time you don't need to", "start": 3412.52, "duration": 5.88}, {"text": "worry about this and it's done by the", "start": 3414.319, "duration": 4.081}, {"text": "NPI so there are different uh uh send", "start": 3418.44, "duration": 7.08}, {"text": "and receive options as I was mentioning", "start": 3422.96, "duration": 4.92}, {"text": "I'll start with the blocking send and", "start": 3425.52, "duration": 5.2}, {"text": "receive routine so the blocking send", "start": 3427.88, "duration": 5.719}, {"text": "call will return when it's safe if safe", "start": 3430.72, "duration": 5.76}, {"text": "for the application send data to be", "start": 3433.599, "duration": 5.52}, {"text": "reused so this can happen as soon as the", "start": 3436.48, "duration": 5.0}, {"text": "data is copied into the system buffer on", "start": 3439.119, "duration": 6.361}, {"text": "the receive process right so", "start": 3441.48, "duration": 7.319}, {"text": "basically what this means is uh like say", "start": 3445.48, "duration": 8.04}, {"text": "you're uh doing a uh lot of uh updates", "start": 3448.799, "duration": 8.401}, {"text": "on the um I mean you will obviously be", "start": 3453.52, "duration": 6.24}, {"text": "doing a lot of these codes will be doing", "start": 3457.2, "duration": 4.96}, {"text": "uh iterative things and you might send", "start": 3459.76, "duration": 4.24}, {"text": "something and then want to do more", "start": 3462.16, "duration": 5.28}, {"text": "computations right so the send call will", "start": 3464.0, "duration": 6.079}, {"text": "return as soon as uh the data is copying", "start": 3467.44, "duration": 5.72}, {"text": "to the system buffer on the receive", "start": 3470.079, "duration": 6.401}, {"text": "process uh and it's synchronized if it's", "start": 3473.16, "duration": 6.32}, {"text": "if there's confirmation of the safe", "start": 3476.48, "duration": 6.599}, {"text": "s now the blocking uh receive returns", "start": 3479.48, "duration": 5.68}, {"text": "once the data is in the application", "start": 3483.079, "duration": 4.72}, {"text": "buffer uh and can be used by the", "start": 3485.16, "duration": 4.959}, {"text": "application so it needs to be out of the", "start": 3487.799, "duration": 4.601}, {"text": "system buffer", "start": 3490.119, "duration": 6.161}, {"text": "basically so uh the blocking send", "start": 3492.4, "duration": 7.48}, {"text": "receive example is out", "start": 3496.28, "duration": 3.6}, {"text": "here so here basically I'm saying if the", "start": 3501.599, "duration": 5.561}, {"text": "task ID is zero send something and if", "start": 3504.48, "duration": 5.92}, {"text": "the task ID is one you receive something", "start": 3507.16, "duration": 6.159}, {"text": "so uh I put a break here let's see yeah", "start": 3510.4, "duration": 4.84}, {"text": "I think we can take a break now for like", "start": 3513.319, "duration": 5.441}, {"text": "maybe 15 minutes and then come", "start": 3515.24, "duration": 5.839}, {"text": "back", "start": 3518.76, "duration": 6.559}, {"text": "uh it's a good time to stop I", "start": 3521.079, "duration": 6.801}, {"text": "think so Susan you want to pause the", "start": 3525.319, "duration": 5.081}, {"text": "recording", "start": 3527.88, "duration": 2.52}, {"text": "or you're on thanks so let's Let's uh", "start": 3531.039, "duration": 6.921}, {"text": "continue on so basically if you submit", "start": 3535.44, "duration": 8.679}, {"text": "this uh blocking. uh exe file uh using", "start": 3537.96, "duration": 9.359}, {"text": "uh the submit script uh you'll see that", "start": 3544.119, "duration": 7.0}, {"text": "basically the buffer gets sent and uh uh", "start": 3547.319, "duration": 6.841}, {"text": "you see what uh gets", "start": 3551.119, "duration": 6.881}, {"text": "received uh now one thing that can", "start": 3554.16, "duration": 5.72}, {"text": "happen if you have these blocking sends", "start": 3558.0, "duration": 3.72}, {"text": "and receives that it's pretty easy to", "start": 3559.88, "duration": 3.719}, {"text": "deadlock processes that are just waiting", "start": 3561.72, "duration": 4.119}, {"text": "on each other", "start": 3563.599, "duration": 6.321}, {"text": "uh uh for example if you basically do a", "start": 3565.839, "duration": 7.041}, {"text": "synchronous send which waits for the", "start": 3569.92, "duration": 4.72}, {"text": "confirmation of the", "start": 3572.88, "duration": 5.32}, {"text": "receipt uh uh from process", "start": 3574.64, "duration": 7.12}, {"text": "zero uh and then have another send from", "start": 3578.2, "duration": 6.599}, {"text": "processor one and the both the receives", "start": 3581.76, "duration": 6.12}, {"text": "are after the sends they'll not complete", "start": 3584.799, "duration": 4.481}, {"text": "because they'll be just waiting for the", "start": 3587.88, "duration": 4.199}, {"text": "receed to post for both of them and uh", "start": 3589.28, "duration": 4.759}, {"text": "it'll never get to those because the", "start": 3592.079, "duration": 4.72}, {"text": "send uh is blocking", "start": 3594.039, "duration": 6.841}, {"text": "that uh I mean this is a very simplified", "start": 3596.799, "duration": 7.04}, {"text": "uh example but this can happen in a", "start": 3600.88, "duration": 4.76}, {"text": "certain way if you're writing some big", "start": 3603.839, "duration": 5.081}, {"text": "code and uh don't realize that this uh", "start": 3605.64, "duration": 7.24}, {"text": "is this is the case so like I have an", "start": 3608.92, "duration": 7.199}, {"text": "example uh called deadlock doc so you", "start": 3612.88, "duration": 7.439}, {"text": "can take a look at that let", "start": 3616.119, "duration": 4.2}, {"text": "me", "start": 3621.24, "duration": 4.24}, {"text": "uh", "start": 3623.559, "duration": 4.881}, {"text": "so uh all it's doing is has a send", "start": 3625.48, "duration": 7.96}, {"text": "buffer a receive buffer 10 elements uh", "start": 3628.44, "duration": 10.919}, {"text": "and we are uh uh sending uh synchronous", "start": 3633.44, "duration": 8.24}, {"text": "sending", "start": 3639.359, "duration": 6.0}, {"text": "uh data from task zero and task one and", "start": 3641.68, "duration": 6.32}, {"text": "then the receives are after that so to", "start": 3645.359, "duration": 6.521}, {"text": "compile uh any MPI code just use the MPI", "start": 3648.0, "duration": 7.28}, {"text": "wrapper so one one thing I want to say", "start": 3651.88, "duration": 7.04}, {"text": "is uh uh so right now we are doing it", "start": 3655.28, "duration": 8.92}, {"text": "the GCC right so if you do mpicc Dash", "start": 3658.92, "duration": 9.6}, {"text": "help uh or uh I", "start": 3664.2, "duration": 6.879}, {"text": "think or or sorry Dash", "start": 3668.52, "duration": 6.64}, {"text": "version uh or dash dash version you can", "start": 3671.079, "duration": 6.641}, {"text": "see that the underlying uh compiler is a", "start": 3675.16, "duration": 5.159}, {"text": "GCC compiler because that's what we", "start": 3677.72, "duration": 5.56}, {"text": "compiled this with but you so all of the", "start": 3680.319, "duration": 5.121}, {"text": "GCC uh", "start": 3683.28, "duration": 3.799}, {"text": "uh", "start": 3685.44, "duration": 8.48}, {"text": "um uh uh options will be uh basically uh", "start": 3687.079, "duration": 9.161}, {"text": "present uh so if you have an Intel", "start": 3693.92, "duration": 3.8}, {"text": "compiler underlying it you'll see the", "start": 3696.24, "duration": 3.68}, {"text": "Intel compiler options but any case so", "start": 3697.72, "duration": 6.28}, {"text": "let's uh compile it uh", "start": 3699.92, "duration": 4.08}, {"text": "oops uh compile the code uh using uh", "start": 3704.119, "duration": 5.44}, {"text": "this", "start": 3708.48, "duration": 4.24}, {"text": "one uh so that's done uh there's a", "start": 3709.559, "duration": 9.441}, {"text": "warning you can ignore and uh submit", "start": 3712.72, "duration": 6.28}, {"text": "it and you'll see that it'll just sit", "start": 3719.799, "duration": 3.961}, {"text": "there and not", "start": 3722.2, "duration": 4.76}, {"text": "finished uh and I", "start": 3723.76, "duration": 5.44}, {"text": "deliberately uh if you look at the bat", "start": 3726.96, "duration": 5.44}, {"text": "script I I I made it quite short uh in", "start": 3729.2, "duration": 5.119}, {"text": "terms of the", "start": 3732.4, "duration": 3.679}, {"text": "request", "start": 3734.319, "duration": 4.321}, {"text": "uh basically asked for only one minute", "start": 3736.079, "duration": 4.641}, {"text": "so that it you know doesn't sit there", "start": 3738.64, "duration": 4.32}, {"text": "for a long time so if you had put 48", "start": 3740.72, "duration": 4.599}, {"text": "hours there it would just sit there for", "start": 3742.96, "duration": 4.48}, {"text": "do so you'll", "start": 3745.319, "duration": 5.8}, {"text": "see uh it's about 27 seconds in it's uh", "start": 3747.44, "duration": 5.599}, {"text": "in a little bit it should time out and", "start": 3751.119, "duration": 3.281}, {"text": "then", "start": 3753.039, "duration": 5.721}, {"text": "um uh you'll you'll see an error like", "start": 3754.4, "duration": 7.36}, {"text": "this", "start": 3758.76, "duration": 3.0}, {"text": "uh it it slum will basically kill the", "start": 3763.44, "duration": 6.399}, {"text": "job because I had the time limit set to", "start": 3767.039, "duration": 6.361}, {"text": "1 minute right so sron will get killed", "start": 3769.839, "duration": 6.24}, {"text": "and then uh slum will basically have the", "start": 3773.4, "duration": 4.56}, {"text": "message saying it's cancelled at this", "start": 3776.079, "duration": 4.561}, {"text": "due to time", "start": 3777.96, "duration": 4.879}, {"text": "limit but remember this is not being", "start": 3780.64, "duration": 4.24}, {"text": "killed by MPI it's being killed by slum", "start": 3782.839, "duration": 4.24}, {"text": "that's outside of", "start": 3784.88, "duration": 6.04}, {"text": "MPI so uh I mean there are lots of ways", "start": 3787.079, "duration": 6.921}, {"text": "to fix it uh one simple thing is to just", "start": 3790.92, "duration": 5.439}, {"text": "reverse the order on one of these things", "start": 3794.0, "duration": 4.599}, {"text": "right like if you put on the second", "start": 3796.359, "duration": 5.361}, {"text": "process if you put the receive first and", "start": 3798.599, "duration": 5.121}, {"text": "then put the synchronous send then what", "start": 3801.72, "duration": 3.879}, {"text": "will happen is the first process will do", "start": 3803.72, "duration": 4.24}, {"text": "the send this receive will post and go", "start": 3805.599, "duration": 4.041}, {"text": "to the send and then the other receive", "start": 3807.96, "duration": 6.839}, {"text": "will post so so then it'll be uh uh not", "start": 3809.64, "duration": 8.04}, {"text": "deadlocking anymore and we can just do a", "start": 3814.799, "duration": 7.161}, {"text": "quick uh so this one finished uh", "start": 3817.68, "duration": 6.32}, {"text": "finished in the sense it got killed so", "start": 3821.96, "duration": 4.56}, {"text": "you'll see cancel due to time limit like", "start": 3824.0, "duration": 5.839}, {"text": "I was saying uh now if you look at the", "start": 3826.52, "duration": 6.759}, {"text": "Run commands let's go down to the first", "start": 3829.839, "duration": 6.44}, {"text": "fix", "start": 3833.279, "duration": 3.0}, {"text": "so do", "start": 3838.2, "duration": 6.32}, {"text": "that and", "start": 3840.64, "duration": 3.88}, {"text": "uh basically submit the B", "start": 3845.96, "duration": 4.48}, {"text": "job and since we are in a reservation", "start": 3852.44, "duration": 5.73}, {"text": "this will finish instantly uh", "start": 3854.96, "duration": 4.52}, {"text": "[Music]", "start": 3858.17, "duration": 5.189}, {"text": "and and you see the 10 elements that got", "start": 3859.48, "duration": 6.72}, {"text": "sent so that", "start": 3863.359, "duration": 2.841}, {"text": "so that's one fix but there are other", "start": 3866.64, "duration": 4.84}, {"text": "things you can do actually uh uh there", "start": 3868.88, "duration": 5.12}, {"text": "are lots of nonblocking options uh in", "start": 3871.48, "duration": 5.24}, {"text": "the send receives uh and there are other", "start": 3874.0, "duration": 4.48}, {"text": "reasons for doing non-blocking and I'll", "start": 3876.72, "duration": 3.72}, {"text": "talk about that", "start": 3878.48, "duration": 5.639}, {"text": "uh so the non-blocking uh MPI send", "start": 3880.44, "duration": 6.32}, {"text": "receive routines the receive routines", "start": 3884.119, "duration": 4.081}, {"text": "will return before there's any", "start": 3886.76, "duration": 3.359}, {"text": "confirmation of receives or completion", "start": 3888.2, "duration": 4.96}, {"text": "or anything like uh so the routines will", "start": 3890.119, "duration": 4.561}, {"text": "just put in the request", "start": 3893.16, "duration": 5.48}, {"text": "and return right now uh obviously there", "start": 3894.68, "duration": 5.84}, {"text": "has to be some corresponding thing that", "start": 3898.64, "duration": 3.719}, {"text": "checks on these so there is an MPI", "start": 3900.52, "duration": 3.68}, {"text": "weight routine that can be used to check", "start": 3902.359, "duration": 2.521}, {"text": "the", "start": 3904.2, "duration": 3.159}, {"text": "status and it block till the operation", "start": 3904.88, "duration": 4.76}, {"text": "is complete now you might be thinking", "start": 3907.359, "duration": 5.2}, {"text": "okay if I'm putting a check routine", "start": 3909.64, "duration": 5.199}, {"text": "after that won't it just sit there but", "start": 3912.559, "duration": 5.921}, {"text": "the trick is that uh if you do the send", "start": 3914.839, "duration": 5.161}, {"text": "and you can do other work in the", "start": 3918.48, "duration": 4.0}, {"text": "meantime you can then overlap the", "start": 3920.0, "duration": 4.319}, {"text": "computations and communication this", "start": 3922.48, "duration": 5.48}, {"text": "allows you to scale to really large uh", "start": 3924.319, "duration": 5.52}, {"text": "uh core counts because your", "start": 3927.96, "duration": 5.319}, {"text": "communication is essentially hidden and", "start": 3929.839, "duration": 7.321}, {"text": "uh the simplest uh example of this would", "start": 3933.279, "duration": 6.721}, {"text": "be like if you had a uh", "start": 3937.16, "duration": 6.04}, {"text": "say a domain that you're solving the", "start": 3940.0, "duration": 5.319}, {"text": "parallel I mean like remember the heat", "start": 3943.2, "duration": 4.24}, {"text": "equation we were breaking it up into", "start": 3945.319, "duration": 4.04}, {"text": "different domains and solving pieces of", "start": 3947.44, "duration": 5.08}, {"text": "it on different tasks so what you could", "start": 3949.359, "duration": 6.081}, {"text": "do is do the boundary point points first", "start": 3952.52, "duration": 7.079}, {"text": "and do a non blocking send receive uh", "start": 3955.44, "duration": 7.0}, {"text": "and then continue on and do the rest of", "start": 3959.599, "duration": 6.68}, {"text": "the uh points uh in the domain that", "start": 3962.44, "duration": 6.119}, {"text": "don't need any information from the", "start": 3966.279, "duration": 4.721}, {"text": "neighboring task", "start": 3968.559, "duration": 5.361}, {"text": "next and then go back and check if the", "start": 3971.0, "duration": 4.839}, {"text": "uh original send receive got finished", "start": 3973.92, "duration": 3.639}, {"text": "and then go to the next time step what", "start": 3975.839, "duration": 4.561}, {"text": "that does is basically if your domain is", "start": 3977.559, "duration": 5.48}, {"text": "large and your boundary is small like", "start": 3980.4, "duration": 4.159}, {"text": "usually that's the case right like if", "start": 3983.039, "duration": 4.441}, {"text": "you have a three-dimensional grid uh", "start": 3984.559, "duration": 6.28}, {"text": "your boundary is going to be a plane 2D", "start": 3987.48, "duration": 5.359}, {"text": "plane but your grid is going to be a", "start": 3990.839, "duration": 5.081}, {"text": "three-dimensional grid so uh if you have", "start": 3992.839, "duration": 6.601}, {"text": "a lot of points in the 3D grid you will", "start": 3995.92, "duration": 5.119}, {"text": "have a lot of work to do while the", "start": 3999.44, "duration": 3.839}, {"text": "boundary is being transferred so you can", "start": 4001.039, "duration": 4.601}, {"text": "overlap it beautifully and basically", "start": 4003.279, "duration": 4.52}, {"text": "scale out as long as your problem is big", "start": 4005.64, "duration": 3.919}, {"text": "enough you can scale out to a huge", "start": 4007.799, "duration": 4.04}, {"text": "number of codes and this is true of a", "start": 4009.559, "duration": 5.56}, {"text": "lot of weather codes for example or", "start": 4011.839, "duration": 5.921}, {"text": "the earthquake codes all of them have", "start": 4015.119, "duration": 5.68}, {"text": "this sort of situation where they big", "start": 4017.76, "duration": 6.0}, {"text": "domains you can do a lot of work and the", "start": 4020.799, "duration": 4.881}, {"text": "send receive can be completely hidden", "start": 4023.76, "duration": 4.319}, {"text": "behind uh the", "start": 4025.68, "duration": 5.08}, {"text": "compute uh and you'll get near perfect", "start": 4028.079, "duration": 5.121}, {"text": "scaling in those sort of codes and these", "start": 4030.76, "duration": 4.64}, {"text": "are the codes that run at like 64,000", "start": 4033.2, "duration": 4.639}, {"text": "CES or whatever huge numbers because", "start": 4035.4, "duration": 4.919}, {"text": "you're hi essentially hiding the", "start": 4037.839, "duration": 5.321}, {"text": "communication so how does that look uh", "start": 4040.319, "duration": 4.601}, {"text": "on a", "start": 4043.16, "duration": 3.439}, {"text": "um", "start": 4044.92, "duration": 5.08}, {"text": "uh on the call itself right so here I", "start": 4046.599, "duration": 6.2}, {"text": "have an example of an MPI iend and anpi", "start": 4050.0, "duration": 4.079}, {"text": "I receive which are basically the", "start": 4052.799, "duration": 2.601}, {"text": "non-blocking", "start": 4054.079, "duration": 7.72}, {"text": "ones uh so you have uh a send buffer uh", "start": 4055.4, "duration": 8.48}, {"text": "and you have the destination and you", "start": 4061.799, "duration": 4.0}, {"text": "have a tag the tag is actually now", "start": 4063.88, "duration": 4.6}, {"text": "important because that is what uh I mean", "start": 4065.799, "duration": 7.28}, {"text": "and there is a uh status right so uh", "start": 4068.48, "duration": 6.359}, {"text": "basically the status", "start": 4073.079, "duration": 5.921}, {"text": "uh uh is B based on that request there", "start": 4074.839, "duration": 6.44}, {"text": "so you can basically check on the", "start": 4079.0, "duration": 5.799}, {"text": "status so uh and that weight is not", "start": 4081.279, "duration": 6.121}, {"text": "going to return till uh till till the", "start": 4084.799, "duration": 3.921}, {"text": "receive is", "start": 4087.4, "duration": 3.879}, {"text": "done so", "start": 4088.72, "duration": 5.44}, {"text": "so that's basically the change in the", "start": 4091.279, "duration": 6.121}, {"text": "call and uh now going back to our", "start": 4094.16, "duration": 5.199}, {"text": "deadlock example now you actually don't", "start": 4097.4, "duration": 3.799}, {"text": "need to do anything you can make one of", "start": 4099.359, "duration": 5.96}, {"text": "these calls uh uh uh remember uh I", "start": 4101.199, "duration": 7.281}, {"text": "mentioned that you can use any send with", "start": 4105.319, "duration": 6.201}, {"text": "an any receive uh function like you", "start": 4108.48, "duration": 4.56}, {"text": "don't have to match the blocking with", "start": 4111.52, "duration": 3.639}, {"text": "blocking you can have one non-blocking", "start": 4113.04, "duration": 4.56}, {"text": "and the other one blocking so in this", "start": 4115.159, "duration": 5.401}, {"text": "case I just made one of the sends uh", "start": 4117.6, "duration": 5.48}, {"text": "from synchronous send to a non-blocking", "start": 4120.56, "duration": 4.96}, {"text": "send so then what happens is that the", "start": 4123.08, "duration": 4.199}, {"text": "iend will return", "start": 4125.52, "duration": 4.08}, {"text": "immediately and go to the receive line", "start": 4127.279, "duration": 4.321}, {"text": "in the in the first process and then the", "start": 4129.6, "duration": 5.079}, {"text": "second task did a synchronous", "start": 4131.6, "duration": 5.44}, {"text": "send but since the receive from the", "start": 4134.679, "duration": 5.881}, {"text": "first task will post because now that uh", "start": 4137.04, "duration": 6.159}, {"text": "it went to that line that will pass and", "start": 4140.56, "duration": 4.199}, {"text": "then the receive will also pass so", "start": 4143.199, "duration": 4.96}, {"text": "that's uh uh kind of one way of fixing", "start": 4144.759, "duration": 7.161}, {"text": "the deadlock too in in the code so", "start": 4148.159, "duration": 5.881}, {"text": "that's the second fix that I have and", "start": 4151.92, "duration": 4.2}, {"text": "you can run it and check it for yourself", "start": 4154.04, "duration": 5.799}, {"text": "but we don't need to do that right", "start": 4156.12, "duration": 6.8}, {"text": "now so those were all the point too", "start": 4159.839, "duration": 5.201}, {"text": "routines I didn't uh go into the", "start": 4162.92, "duration": 7.08}, {"text": "one-sided uh routines uh and uh", "start": 4165.04, "duration": 7.88}, {"text": "basically there are mechanisms uh that", "start": 4170.0, "duration": 5.279}, {"text": "let you write directly into memory on", "start": 4172.92, "duration": 5.6}, {"text": "the remote node which lowers the rate", "start": 4175.279, "duration": 5.92}, {"text": "latency uh and basically it's a", "start": 4178.52, "duration": 7.04}, {"text": "one-sided WR uh that gives you uh", "start": 4181.199, "duration": 6.64}, {"text": "benefit on performance uh but I haven't", "start": 4185.56, "duration": 3.599}, {"text": "gotten into all those things so there", "start": 4187.839, "duration": 4.84}, {"text": "are lots of there are uh a few hundred", "start": 4189.159, "duration": 6.281}, {"text": "MPI routines so we are we're going to B", "start": 4192.679, "duration": 4.441}, {"text": "barely scratch the surface today we're", "start": 4195.44, "duration": 4.4}, {"text": "probably going to look at 20 of them so", "start": 4197.12, "duration": 5.44}, {"text": "there's uh there's a lot and if you go", "start": 4199.84, "duration": 5.92}, {"text": "uh go to the MPI uh standard or actually", "start": 4202.56, "duration": 5.639}, {"text": "go to the liore tutorial you'll see a", "start": 4205.76, "duration": 3.919}, {"text": "lot of", "start": 4208.199, "duration": 3.841}, {"text": "options so let's look at the collective", "start": 4209.679, "duration": 4.48}, {"text": "routines next so there there are lots of", "start": 4212.04, "duration": 3.88}, {"text": "different types uh there's the", "start": 4214.159, "duration": 3.921}, {"text": "synchronization uh types where all the", "start": 4215.92, "duration": 3.799}, {"text": "processes wait till they get", "start": 4218.08, "duration": 4.32}, {"text": "synchronized there are data movement", "start": 4219.719, "duration": 5.201}, {"text": "collectives like receive data from all", "start": 4222.4, "duration": 4.64}, {"text": "processes like you for example you might", "start": 4224.92, "duration": 3.92}, {"text": "read something in one process and you", "start": 4227.04, "duration": 5.4}, {"text": "want to broadcast it to all of them or", "start": 4228.84, "duration": 7.08}, {"text": "uh there are scatter gather uh routines", "start": 4232.44, "duration": 6.12}, {"text": "and there are all to all routines where", "start": 4235.92, "duration": 5.64}, {"text": "basically you might want to send data to", "start": 4238.56, "duration": 4.96}, {"text": "all processes from all processes this", "start": 4241.56, "duration": 3.639}, {"text": "usually happens when you're say doing a", "start": 4243.52, "duration": 4.28}, {"text": "transpose for example of a metrix you", "start": 4245.199, "duration": 5.161}, {"text": "might have to send the entire thing", "start": 4247.8, "duration": 7.84}, {"text": "everywhere so uh the collection uh there", "start": 4250.36, "duration": 7.24}, {"text": "are also Collective computations like", "start": 4255.64, "duration": 5.24}, {"text": "reduction operations like we saw uh the", "start": 4257.6, "duration": 8.28}, {"text": "NPI sum reduction uh in the pi example", "start": 4260.88, "duration": 7.88}, {"text": "uh but there are all kinds of different", "start": 4265.88, "duration": 3.92}, {"text": "options", "start": 4268.76, "duration": 3.08}, {"text": "there and then there are things that", "start": 4269.8, "duration": 3.879}, {"text": "will do both the collective computation", "start": 4271.84, "duration": 3.72}, {"text": "and data movement", "start": 4273.679, "duration": 4.841}, {"text": "combined uh now in this context I want", "start": 4275.56, "duration": 6.24}, {"text": "to say that uh some of the new networks", "start": 4278.52, "duration": 6.12}, {"text": "architectures basically do have options", "start": 4281.8, "duration": 4.52}, {"text": "to do compute on the", "start": 4284.64, "duration": 5.4}, {"text": "network uh so some some MPI uh", "start": 4286.32, "duration": 6.64}, {"text": "implementations now take advantage of", "start": 4290.04, "duration": 7.24}, {"text": "that so so that uh uh like you know some", "start": 4292.96, "duration": 5.96}, {"text": "of these reduction operations might", "start": 4297.28, "duration": 3.6}, {"text": "never hit the CPU they might get done in", "start": 4298.92, "duration": 4.88}, {"text": "the network and uh show up with the", "start": 4300.88, "duration": 6.08}, {"text": "result so all of these things basically", "start": 4303.8, "duration": 6.72}, {"text": "are just in going to enhance", "start": 4306.96, "duration": 6.0}, {"text": "performance so as I I mentioned", "start": 4310.52, "duration": 4.04}, {"text": "basically on the the simple Pi program", "start": 4312.96, "duration": 3.08}, {"text": "we had some already we had a", "start": 4314.56, "duration": 3.56}, {"text": "synchronization example where I was", "start": 4316.04, "duration": 3.04}, {"text": "doing the", "start": 4318.12, "duration": 3.4}, {"text": "barrier uh so here the task will wait", "start": 4319.08, "duration": 6.48}, {"text": "till they all get to this uh now let's", "start": 4321.52, "duration": 6.56}, {"text": "look at some other collectives so we'll", "start": 4325.56, "duration": 6.56}, {"text": "start with um uh so all the examples are", "start": 4328.08, "duration": 6.559}, {"text": "in the home parallel collectives", "start": 4332.12, "duration": 5.079}, {"text": "directory uh so we can run some of these", "start": 4334.639, "duration": 5.241}, {"text": "so basically uh the first one we'll look", "start": 4337.199, "duration": 6.601}, {"text": "at is the broadcast which is uh uh it's", "start": 4339.88, "duration": 7.4}, {"text": "going to have some buffer array uh that", "start": 4343.8, "duration": 6.2}, {"text": "is initialized uh in One processor like", "start": 4347.28, "duration": 4.439}, {"text": "say", "start": 4350.0, "duration": 4.44}, {"text": "uh processor zero wherever you want to", "start": 4351.719, "duration": 4.881}, {"text": "do this and you want to broadcast it to", "start": 4354.44, "duration": 5.279}, {"text": "the rest of the uh processes so uh the", "start": 4356.6, "duration": 5.68}, {"text": "call basically has uh the", "start": 4359.719, "duration": 4.841}, {"text": "buffer uh the", "start": 4362.28, "duration": 6.28}, {"text": "count uh and then uh the type of uh", "start": 4364.56, "duration": 5.72}, {"text": "variable so in this case these are", "start": 4368.56, "duration": 4.52}, {"text": "integers so we are basically using NPI", "start": 4370.28, "duration": 4.399}, {"text": "integer", "start": 4373.08, "duration": 4.24}, {"text": "source of the broadcast so this doesn't", "start": 4374.679, "duration": 4.48}, {"text": "necessarily have to be task zero it can", "start": 4377.32, "duration": 5.879}, {"text": "be some other task and then uh the scope", "start": 4379.159, "duration": 6.441}, {"text": "is basically the NPI com World which is", "start": 4383.199, "duration": 6.801}, {"text": "the communication uh uh", "start": 4385.6, "duration": 8.68}, {"text": "uh Communicator sorry so and then uh I", "start": 4390.0, "duration": 6.08}, {"text": "error is basically the error code in", "start": 4394.28, "duration": 4.2}, {"text": "case this fails you'll get a nonzero", "start": 4396.08, "duration": 5.8}, {"text": "error uh and then you have the usual", "start": 4398.48, "duration": 6.6}, {"text": "compilation uh and Mission so let's uh", "start": 4401.88, "duration": 4.52}, {"text": "go", "start": 4405.08, "duration": 6.2}, {"text": "here go to the collectives", "start": 4406.4, "duration": 4.88}, {"text": "directory and we", "start": 4411.92, "duration": 3.799}, {"text": "will I should make sure I didn't change", "start": 4416.96, "duration": 4.92}, {"text": "the", "start": 4420.6, "duration": 5.039}, {"text": "compilers uh go go to the instructions", "start": 4421.88, "duration": 5.68}, {"text": "and make sure you use the compilers that", "start": 4425.639, "duration": 5.201}, {"text": "are there because the script compil so", "start": 4427.56, "duration": 5.159}, {"text": "let me do that you didn't change it in", "start": 4430.84, "duration": 3.68}, {"text": "this case", "start": 4432.719, "duration": 4.96}, {"text": "and go to the collectives", "start": 4434.52, "duration": 6.199}, {"text": "directory and I'm going to compile the", "start": 4437.679, "duration": 5.281}, {"text": "broadcast", "start": 4440.719, "duration": 6.281}, {"text": "code and submit", "start": 4442.96, "duration": 4.04}, {"text": "it and it's already done", "start": 4451.84, "duration": 6.319}, {"text": "so and you can see each processor is", "start": 4455.52, "duration": 5.639}, {"text": "saying that it got the broadcast", "start": 4458.159, "duration": 6.241}, {"text": "variable because I just put a print in", "start": 4461.159, "duration": 7.52}, {"text": "uh every task I mean yeah I just I I", "start": 4464.4, "duration": 6.759}, {"text": "just put a print statement so remember", "start": 4468.679, "duration": 4.201}, {"text": "the same code is running everywhere so", "start": 4471.159, "duration": 5.841}, {"text": "unless you uh explicitly say Don't run", "start": 4472.88, "duration": 6.839}, {"text": "this on all the tasks or on a particular", "start": 4477.0, "duration": 5.08}, {"text": "task any code you write is going to be", "start": 4479.719, "duration": 5.081}, {"text": "written uh you run by everything so so", "start": 4482.08, "duration": 6.079}, {"text": "in this case I if I say processor X got", "start": 4484.8, "duration": 7.16}, {"text": "uh uh uh the value then it's just going", "start": 4488.159, "duration": 6.08}, {"text": "to print out from every process", "start": 4491.96, "duration": 4.12}, {"text": "and it's not in sequence by the way so", "start": 4494.239, "duration": 4.0}, {"text": "the output can come from processor one", "start": 4496.08, "duration": 4.8}, {"text": "first and then zero and so on so don't", "start": 4498.239, "duration": 5.96}, {"text": "depend on the output being sequential in", "start": 4500.88, "duration": 4.92}, {"text": "terms of the task it's going to all be", "start": 4504.199, "duration": 3.921}, {"text": "mixed", "start": 4505.8, "duration": 2.32}, {"text": "in uh so uh that was the example of a uh", "start": 4508.719, "duration": 8.281}, {"text": "a collective broadcast but there are", "start": 4515.159, "duration": 4.04}, {"text": "other routines like I mentioned you have", "start": 4517.0, "duration": 4.679}, {"text": "uh reduction uh", "start": 4519.199, "duration": 6.841}, {"text": "routines uh so so in this case uh I did", "start": 4521.679, "duration": 6.52}, {"text": "a trick trick here to just find the", "start": 4526.04, "duration": 6.08}, {"text": "factorial what I as you remember the ID", "start": 4528.199, "duration": 7.161}, {"text": "uh MPI ID starts from zero and goes to", "start": 4532.12, "duration": 6.519}, {"text": "the number of task minus one so I just", "start": 4535.36, "duration": 6.6}, {"text": "add one to that uh and then uh do this", "start": 4538.639, "duration": 4.481}, {"text": "reduction", "start": 4541.96, "duration": 5.08}, {"text": "operation uh so again uh this is the", "start": 4543.12, "duration": 7.88}, {"text": "local variable then the I factorial is", "start": 4547.04, "duration": 8.96}, {"text": "the um uh is where uh is where the", "start": 4551.0, "duration": 6.239}, {"text": "output will", "start": 4556.0, "duration": 4.8}, {"text": "go and you can also specify uh which", "start": 4557.239, "duration": 5.841}, {"text": "process that output should be on so in", "start": 4560.8, "duration": 4.32}, {"text": "this case I'm saying the root is", "start": 4563.08, "duration": 5.76}, {"text": "one uh oh sorry this is the size uh root", "start": 4565.12, "duration": 5.28}, {"text": "is defined somewhere else in the code", "start": 4568.84, "duration": 3.6}, {"text": "but basically the size is one and", "start": 4570.4, "duration": 4.279}, {"text": "because we just sending one integer and", "start": 4572.44, "duration": 5.12}, {"text": "then uh instead of MPI sum like we did", "start": 4574.679, "duration": 5.361}, {"text": "for pi we going to do MPI _ prod which", "start": 4577.56, "duration": 5.079}, {"text": "is the product and then we are uh", "start": 4580.04, "duration": 3.76}, {"text": "sending it", "start": 4582.639, "duration": 5.04}, {"text": "uh the output to this root process right", "start": 4583.8, "duration": 9.68}, {"text": "and when the uh Pro uh call is done uh", "start": 4587.679, "duration": 7.321}, {"text": "we're checking if we on the route and", "start": 4593.48, "duration": 3.759}, {"text": "basically printing out the factorial so", "start": 4595.0, "duration": 6.679}, {"text": "it's quite simple uh so if you submit", "start": 4597.239, "duration": 6.561}, {"text": "this job you will see", "start": 4601.679, "duration": 5.161}, {"text": "uh uh the", "start": 4603.8, "duration": 7.2}, {"text": "output so um the next one is an all", "start": 4606.84, "duration": 5.879}, {"text": "reduce so remember there in in the", "start": 4611.0, "duration": 2.76}, {"text": "previous", "start": 4612.719, "duration": 3.241}, {"text": "uh reduced call there was a root process", "start": 4613.76, "duration": 5.68}, {"text": "that it went to but sometimes you want", "start": 4615.96, "duration": 6.0}, {"text": "uh the result to be sent to all the", "start": 4619.44, "duration": 5.92}, {"text": "processes uh good example is uh a lot of", "start": 4621.96, "duration": 7.279}, {"text": "the fluids codes uh will uh calculate", "start": 4625.36, "duration": 7.76}, {"text": "the time step based on the current uh uh", "start": 4629.239, "duration": 7.44}, {"text": "solution field uh because uh the", "start": 4633.12, "duration": 5.4}, {"text": "stability of the numerical method might", "start": 4636.679, "duration": 5.841}, {"text": "depend on the time step uh based on the", "start": 4638.52, "duration": 7.4}, {"text": "uh solution at a given time so you're", "start": 4642.52, "duration": 5.24}, {"text": "always calculating that time step and", "start": 4645.92, "duration": 4.52}, {"text": "then uh sending it to all the processes", "start": 4647.76, "duration": 5.04}, {"text": "and uh sometimes you might be uh that", "start": 4650.44, "duration": 6.68}, {"text": "time step might be um uh calculated at", "start": 4652.8, "duration": 6.839}, {"text": "all grid points and then you find some", "start": 4657.12, "duration": 4.559}, {"text": "minimum or maximum of that so you and", "start": 4659.639, "duration": 3.761}, {"text": "you want it to go to all the processes", "start": 4661.679, "duration": 3.841}, {"text": "so these alled uses are kind of useful", "start": 4663.4, "duration": 5.239}, {"text": "for that so here we just do a random", "start": 4665.52, "duration": 5.28}, {"text": "number and then", "start": 4668.639, "duration": 6.721}, {"text": "uh uh uh basic basically uh send that", "start": 4670.8, "duration": 8.52}, {"text": "out uh to do an all reduce and find the", "start": 4675.36, "duration": 5.279}, {"text": "maximum", "start": 4679.32, "duration": 3.52}, {"text": "overall and there is actually a function", "start": 4680.639, "duration": 5.161}, {"text": "that even lets you uh find out which uh", "start": 4682.84, "duration": 4.52}, {"text": "task it's on but in this case I'm", "start": 4685.8, "duration": 3.879}, {"text": "finding that explicitly but uh but you", "start": 4687.36, "duration": 4.92}, {"text": "can actually find that out and then you", "start": 4689.679, "duration": 5.201}, {"text": "compile uh the code normally and submit", "start": 4692.28, "duration": 5.84}, {"text": "it so let me see I heard a noise like oh", "start": 4694.88, "duration": 8.64}, {"text": "some other okay uh let's see uh and", "start": 4698.12, "duration": 8.0}, {"text": "output the maxim maximum", "start": 4703.52, "duration": 6.119}, {"text": "now so you can do all radios so the next", "start": 4706.12, "duration": 6.32}, {"text": "thing to look at is the data types so", "start": 4709.639, "duration": 4.641}, {"text": "there are a lot of data types already", "start": 4712.44, "duration": 6.0}, {"text": "supported uh uh in MPI so we looked at", "start": 4714.28, "duration": 6.439}, {"text": "uh integer but they integer and Float", "start": 4718.44, "duration": 5.32}, {"text": "but there's you know characters long", "start": 4720.719, "duration": 7.96}, {"text": "inss long long ends uh unsigned uh", "start": 4723.76, "duration": 8.04}, {"text": "characters uh float long Doubles Doubles", "start": 4728.679, "duration": 5.081}, {"text": "complex uh num", "start": 4731.8, "duration": 5.16}, {"text": "and so on uh and both C and Photon", "start": 4733.76, "duration": 5.8}, {"text": "basically and you can also actually", "start": 4736.96, "duration": 6.52}, {"text": "Define do user defined ones um but", "start": 4739.56, "duration": 6.52}, {"text": "remember that lot of operations are I", "start": 4743.48, "duration": 4.96}, {"text": "mean lot of variables are already data", "start": 4746.08, "duration": 3.72}, {"text": "types are already", "start": 4748.44, "duration": 5.16}, {"text": "defined um there's also dot of operators", "start": 4749.8, "duration": 6.32}, {"text": "in the reduction call that that we had", "start": 4753.6, "duration": 4.639}, {"text": "uh we looked at prod and sum but there", "start": 4756.12, "duration": 5.24}, {"text": "are uh there's the maximum there's a Min", "start": 4758.239, "duration": 5.44}, {"text": "there's the sum there's fraud there", "start": 4761.36, "duration": 4.96}, {"text": "logical operators uh there's also the", "start": 4763.679, "duration": 4.56}, {"text": "max lock and the Min lock this is what I", "start": 4766.32, "duration": 4.8}, {"text": "meant by the location", "start": 4768.239, "duration": 5.881}, {"text": "call", "start": 4771.12, "duration": 3.0}, {"text": "uh so now we know kind of all the basic", "start": 4774.719, "duration": 7.801}, {"text": "routines that are needed uh to do an MPI", "start": 4779.159, "duration": 9.241}, {"text": "code like to actually use it uh uh uh to", "start": 4782.52, "duration": 7.88}, {"text": "do parallel work we kind of looked at", "start": 4788.4, "duration": 4.08}, {"text": "the pi program but uh now I'm going to", "start": 4790.4, "duration": 4.56}, {"text": "go to the the next level of showing how", "start": 4792.48, "duration": 6.28}, {"text": "you might have to uh break up the code", "start": 4794.96, "duration": 7.679}, {"text": "uh uh partition it uh uh to different", "start": 4798.76, "duration": 10.479}, {"text": "processes and uh uh uh uh basically map", "start": 4802.639, "duration": 9.641}, {"text": "them to the uh different based on the", "start": 4809.239, "duration": 6.44}, {"text": "ranks and then uh we're going to see how", "start": 4812.28, "duration": 5.879}, {"text": "you exchange data we know the routines", "start": 4815.679, "duration": 4.681}, {"text": "now we have to see where that comes into", "start": 4818.159, "duration": 4.961}, {"text": "play and then uh some of the things that", "start": 4820.36, "duration": 5.279}, {"text": "come into play are also like how what if", "start": 4823.12, "duration": 4.599}, {"text": "the workload is not balanced and so on", "start": 4825.639, "duration": 6.04}, {"text": "so there's all kinds of uh things uh uh", "start": 4827.719, "duration": 7.52}, {"text": "to consider so let's look at a simple", "start": 4831.679, "duration": 5.801}, {"text": "example we'll go back to the heat", "start": 4835.239, "duration": 5.881}, {"text": "equation that we looked before uh so uh", "start": 4837.48, "duration": 6.12}, {"text": "remember in the open MP case uh it was", "start": 4841.12, "duration": 5.32}, {"text": "quite simple we just said take this Loop", "start": 4843.6, "duration": 7.28}, {"text": "and parize it right uh here basically we", "start": 4846.44, "duration": 6.64}, {"text": "are discretizing uh for the numerical", "start": 4850.88, "duration": 4.48}, {"text": "solution and then", "start": 4853.08, "duration": 5.28}, {"text": "uh", "start": 4855.36, "duration": 3.0}, {"text": "uh running for three steps again", "start": 4858.96, "duration": 6.84}, {"text": "basically and uh I did exactly three uh", "start": 4861.96, "duration": 6.16}, {"text": "processes here because uh that", "start": 4865.8, "duration": 3.839}, {"text": "essentially covers all the different", "start": 4868.12, "duration": 3.24}, {"text": "types of things that might", "start": 4869.639, "duration": 4.681}, {"text": "happen uh for a 1ed de", "start": 4871.36, "duration": 6.879}, {"text": "composition so now processor Z is doing", "start": 4874.32, "duration": 8.16}, {"text": "0 1 2 3 4 uh I mean has values for 0 1 2", "start": 4878.239, "duration": 7.601}, {"text": "3 4 processor 1 has 3 4 5 6 7 and", "start": 4882.48, "duration": 6.64}, {"text": "processor 2 has 6 7 8 9 10 and you might", "start": 4885.84, "duration": 5.56}, {"text": "be wondering okay why why are there", "start": 4889.12, "duration": 4.84}, {"text": "these overlap points well if you look at", "start": 4891.4, "duration": 6.64}, {"text": "this uh discretization right on the time", "start": 4893.96, "duration": 6.679}, {"text": "side it's not a problem because uh the", "start": 4898.04, "duration": 5.199}, {"text": "value at I just depends on the uh", "start": 4900.639, "duration": 5.52}, {"text": "previous value at I but on the spatial", "start": 4903.239, "duration": 5.881}, {"text": "side you see that IUS one and an i + 1", "start": 4906.159, "duration": 5.961}, {"text": "right so if you are on task four and you", "start": 4909.12, "duration": 5.32}, {"text": "try to solve this equation you won't be", "start": 4912.12, "duration": 4.88}, {"text": "able to because uh your own processor", "start": 4914.44, "duration": 4.199}, {"text": "zero which doesn't know anything about", "start": 4917.0, "duration": 4.6}, {"text": "the rest of the data right remember in", "start": 4918.639, "duration": 7.201}, {"text": "MPI the memory is local to each task", "start": 4921.6, "duration": 7.16}, {"text": "so so if you try to solve task 4 it you", "start": 4925.84, "duration": 5.96}, {"text": "will need i+ one which is five which", "start": 4928.76, "duration": 5.16}, {"text": "won't exist and same way if you're on", "start": 4931.8, "duration": 5.32}, {"text": "processor one at three you need I minus", "start": 4933.92, "duration": 5.92}, {"text": "one which is two which you can't", "start": 4937.12, "duration": 6.88}, {"text": "do so what you do is you overlap", "start": 4939.84, "duration": 6.359}, {"text": "and you solve 1 2 and three on processor", "start": 4944.0, "duration": 6.239}, {"text": "0o 4 56 on processor 1 and 789 on", "start": 4946.199, "duration": 6.561}, {"text": "processor two so that way when you're at", "start": 4950.239, "duration": 5.48}, {"text": "four on processor one you can get the", "start": 4952.76, "duration": 7.08}, {"text": "three value it's in your array and so on", "start": 4955.719, "duration": 5.881}, {"text": "now that of course means that you have", "start": 4959.84, "duration": 5.96}, {"text": "to do some uh transfers right so the", "start": 4961.6, "duration": 6.52}, {"text": "initial condition is fine right every", "start": 4965.8, "duration": 4.839}, {"text": "every process can have its own initial", "start": 4968.12, "duration": 5.76}, {"text": "condition set up based on the global", "start": 4970.639, "duration": 7.761}, {"text": "index uh now remember uh each task will", "start": 4973.88, "duration": 6.359}, {"text": "have the same local indices so it will", "start": 4978.4, "duration": 4.799}, {"text": "go from 0 to four on each task uh the", "start": 4980.239, "duration": 5.241}, {"text": "only thing is the global index changes", "start": 4983.199, "duration": 4.841}, {"text": "so on processor zero the global index is", "start": 4985.48, "duration": 4.88}, {"text": "the same as the local index 0 to 4 but", "start": 4988.04, "duration": 4.4}, {"text": "then on processor one the global index", "start": 4990.36, "duration": 5.24}, {"text": "becomes 3 to 7 because remember we are", "start": 4992.44, "duration": 8.56}, {"text": "solving 3 to 7 right and so on so", "start": 4995.6, "duration": 7.119}, {"text": "initially you have the initial condition", "start": 5001.0, "duration": 4.28}, {"text": "at all the points so you can solve 1 2 3", "start": 5002.719, "duration": 8.401}, {"text": "on uh uh processor zero 456 on processor", "start": 5005.28, "duration": 11.919}, {"text": "one 789 on processor 2 right and then uh", "start": 5011.12, "duration": 8.8}, {"text": "uh and sorry these are task IDs", "start": 5017.199, "duration": 6.401}, {"text": "basically uh and then uh you can do the", "start": 5019.92, "duration": 7.92}, {"text": "data exchange uh from each task so uh", "start": 5023.6, "duration": 6.599}, {"text": "you send processor send the value at", "start": 5027.84, "duration": 4.319}, {"text": "three to processor one from processor", "start": 5030.199, "duration": 4.161}, {"text": "zero and then the get the value of four", "start": 5032.159, "duration": 4.48}, {"text": "from processor one back to processor", "start": 5034.36, "duration": 4.879}, {"text": "zero so basically you start with the", "start": 5036.639, "duration": 4.401}, {"text": "initial conditions compute all the", "start": 5039.239, "duration": 3.92}, {"text": "internal points and then exchange the", "start": 5041.04, "duration": 4.599}, {"text": "boundary Point overlap points and then", "start": 5043.159, "duration": 4.48}, {"text": "go to the next step and do it", "start": 5045.639, "duration": 5.641}, {"text": "again so this also shows you where you", "start": 5047.639, "duration": 6.56}, {"text": "can hide the compute I mean hide the", "start": 5051.28, "duration": 4.68}, {"text": "communication behind the compute so for", "start": 5054.199, "duration": 4.52}, {"text": "example you could start by saying oh I'm", "start": 5055.96, "duration": 5.84}, {"text": "going to compute three processor Z four", "start": 5058.719, "duration": 4.48}, {"text": "on processor or", "start": 5061.8, "duration": 6.2}, {"text": "one uh U and so on and then send those", "start": 5063.199, "duration": 6.881}, {"text": "and then do the rest of the computations", "start": 5068.0, "duration": 6.96}, {"text": "so that that way uh uh the communication", "start": 5070.08, "duration": 6.68}, {"text": "gets", "start": 5074.96, "duration": 5.0}, {"text": "hidden so how does this look on the code", "start": 5076.76, "duration": 6.6}, {"text": "uh now this is uh the same kind of uh", "start": 5079.96, "duration": 7.08}, {"text": "heat equation code that we had before", "start": 5083.36, "duration": 9.64}, {"text": "uh and uh basically we are doing uh", "start": 5087.04, "duration": 8.52}, {"text": "setting the Delta X setting the delta T", "start": 5093.0, "duration": 5.4}, {"text": "remember all these variables are local", "start": 5095.56, "duration": 4.76}, {"text": "to each task so they will be there on", "start": 5098.4, "duration": 6.319}, {"text": "each task and uh you're doing the in it", "start": 5100.32, "duration": 6.399}, {"text": "the com size you remember that was the", "start": 5104.719, "duration": 5.761}, {"text": "size of the uh number of task basically", "start": 5106.719, "duration": 6.761}, {"text": "and com rank is is the ID of the current", "start": 5110.48, "duration": 5.639}, {"text": "task and again this was set up to run", "start": 5113.48, "duration": 5.44}, {"text": "exactly with three uh in a normal MPI", "start": 5116.119, "duration": 4.361}, {"text": "program you wouldn't do this you would", "start": 5118.92, "duration": 4.279}, {"text": "basically do your own", "start": 5120.48, "duration": 7.92}, {"text": "uh uh uh uh decomposition that is kind", "start": 5123.199, "duration": 7.761}, {"text": "of dependent on the number of MP task", "start": 5128.4, "duration": 4.839}, {"text": "and the task can be anything you can you", "start": 5130.96, "duration": 5.56}, {"text": "should write it such that it's like like", "start": 5133.239, "duration": 5.201}, {"text": "basically scalable depending on what", "start": 5136.52, "duration": 3.32}, {"text": "input you", "start": 5138.44, "duration": 4.0}, {"text": "give uh", "start": 5139.84, "duration": 7.12}, {"text": "so now remember uh the local is going", "start": 5142.44, "duration": 6.84}, {"text": "from 0 to four but we are now creating", "start": 5146.96, "duration": 4.08}, {"text": "this uh Global", "start": 5149.28, "duration": 5.879}, {"text": "index uh and then setting the initial", "start": 5151.04, "duration": 9.0}, {"text": "condition based on this right and then", "start": 5155.159, "duration": 7.921}, {"text": "uh uh we basically do the", "start": 5160.04, "duration": 6.36}, {"text": "update uh on on the local one to three", "start": 5163.08, "duration": 5.92}, {"text": "so the local one to three is na to the", "start": 5166.4, "duration": 6.6}, {"text": "global on each uh processor differently", "start": 5169.0, "duration": 5.6}, {"text": "right", "start": 5173.0, "duration": 4.08}, {"text": "uh but remember the initial condition", "start": 5174.6, "duration": 4.68}, {"text": "already took care of that Global piece", "start": 5177.08, "duration": 4.039}, {"text": "so you just do local one 12 three", "start": 5179.28, "duration": 3.72}, {"text": "updates right", "start": 5181.119, "duration": 4.04}, {"text": "and then once the update is done uh", "start": 5183.0, "duration": 4.56}, {"text": "you'll have to do the send and receive", "start": 5185.159, "duration": 3.601}, {"text": "uh from each", "start": 5187.56, "duration": 3.559}, {"text": "task remember I'm I'm not doing a", "start": 5188.76, "duration": 4.28}, {"text": "synchronous send here so the send will", "start": 5191.119, "duration": 3.921}, {"text": "return it won't block but", "start": 5193.04, "duration": 8.8}, {"text": "basically uh you send from uh uh task", "start": 5195.04, "duration": 12.679}, {"text": "id0 uh uh uh the value at uh", "start": 5201.84, "duration": 9.839}, {"text": "three uh and basic I mean anyway you can", "start": 5207.719, "duration": 6.201}, {"text": "uh you can see all the transfers that", "start": 5211.679, "duration": 3.96}, {"text": "need to", "start": 5213.92, "duration": 5.08}, {"text": "happen one other thing I want to mention", "start": 5215.639, "duration": 5.401}, {"text": "uh is that after all this is done and", "start": 5219.0, "duration": 4.44}, {"text": "you want to write the solution out you", "start": 5221.04, "duration": 4.92}, {"text": "now have a problem basically you your", "start": 5223.44, "duration": 4.44}, {"text": "solution is actually also broken up", "start": 5225.96, "duration": 7.96}, {"text": "right like you you have uh uh Solutions", "start": 5227.88, "duration": 8.0}, {"text": "on three different processes that need", "start": 5233.92, "duration": 4.199}, {"text": "to be put together so there are two", "start": 5235.88, "duration": 6.04}, {"text": "options if it's a small enough data set", "start": 5238.119, "duration": 5.361}, {"text": "you you can send everything to one", "start": 5241.92, "duration": 3.08}, {"text": "process and write it", "start": 5243.48, "duration": 5.52}, {"text": "out if it's big uh and it doesn't it", "start": 5245.0, "duration": 5.88}, {"text": "causes a lot of problems for one thing", "start": 5249.0, "duration": 3.88}, {"text": "is it could be that it's so big that it", "start": 5250.88, "duration": 4.0}, {"text": "doesn't fit in the memory on one tasks", "start": 5252.88, "duration": 4.52}, {"text": "then then you're in trouble because uh", "start": 5254.88, "duration": 4.48}, {"text": "you can't send it to one One processor", "start": 5257.4, "duration": 4.88}, {"text": "to write it out uh so then the options", "start": 5259.36, "duration": 5.279}, {"text": "are you write one file per core which is", "start": 5262.28, "duration": 4.48}, {"text": "what I'm doing here basically I give a", "start": 5264.639, "duration": 5.281}, {"text": "file name based on the uh number the", "start": 5266.76, "duration": 4.08}, {"text": "task", "start": 5269.92, "duration": 4.52}, {"text": "ID uh this this function do uh just", "start": 5270.84, "duration": 6.92}, {"text": "converts it into a character so if your", "start": 5274.44, "duration": 5.36}, {"text": "my ID is zero this will become data", "start": 5277.76, "duration": 5.56}, {"text": "zero. that and so on so here I'm doing", "start": 5279.8, "duration": 5.319}, {"text": "the dumb thing of writing one task per", "start": 5283.32, "duration": 3.319}, {"text": "core because then I don't have to worry", "start": 5285.119, "duration": 4.401}, {"text": "about it uh it's just going to write", "start": 5286.639, "duration": 4.761}, {"text": "three", "start": 5289.52, "duration": 5.119}, {"text": "files uh there are of course other", "start": 5291.4, "duration": 5.759}, {"text": "options right if you use npio you could", "start": 5294.639, "duration": 4.52}, {"text": "still write a single file but then each", "start": 5297.159, "duration": 4.921}, {"text": "task will write a piece of that file uh", "start": 5299.159, "duration": 5.401}, {"text": "so so there are those options", "start": 5302.08, "duration": 5.72}, {"text": "too uh and if you look at uh most of the", "start": 5304.56, "duration": 6.599}, {"text": "codes uh most of the standard codes uh", "start": 5307.8, "duration": 6.0}, {"text": "they will do all kinds of uh options for", "start": 5311.159, "duration": 4.641}, {"text": "iio like if you look at the weather code", "start": 5313.8, "duration": 5.919}, {"text": "wrf for example uh it has the option of", "start": 5315.8, "duration": 6.04}, {"text": "sending everything to processor zero it", "start": 5319.719, "duration": 5.121}, {"text": "has the option of writing task per uh I", "start": 5321.84, "duration": 6.319}, {"text": "mean file per core it also has the", "start": 5324.84, "duration": 6.04}, {"text": "option of doing parallel iio to uh a", "start": 5328.159, "duration": 4.56}, {"text": "single file so", "start": 5330.88, "duration": 4.279}, {"text": "uh so if you want a real world example", "start": 5332.719, "duration": 4.681}, {"text": "you should look at wrf it has all all", "start": 5335.159, "duration": 3.841}, {"text": "those options and it actually is a cool", "start": 5337.4, "duration": 3.44}, {"text": "thing because it has it also has an", "start": 5339.0, "duration": 5.8}, {"text": "option called quilting which um uh lets", "start": 5340.84, "duration": 5.72}, {"text": "the iio happen from a subset of", "start": 5344.8, "duration": 4.16}, {"text": "processing instead of all the processes", "start": 5346.56, "duration": 5.04}, {"text": "writing and that code code scales to", "start": 5348.96, "duration": 5.159}, {"text": "thousands of processes", "start": 5351.6, "duration": 6.28}, {"text": "basically so going back to our code uh", "start": 5354.119, "duration": 9.52}, {"text": "uh let's uh compile it uh let me I think", "start": 5357.88, "duration": 8.68}, {"text": "it's uh", "start": 5363.639, "duration": 2.921}, {"text": "sorry so it's in this domain uh", "start": 5367.0, "duration": 8.159}, {"text": "directory uh and I'm going to go to the", "start": 5370.56, "duration": 8.8}, {"text": "particular uh compile", "start": 5375.159, "duration": 4.201}, {"text": "line and the mp90 you'll notice that I", "start": 5386.36, "duration": 9.56}, {"text": "have uh uh this Dash fixed form option", "start": 5390.0, "duration": 9.119}, {"text": "uh this is because the code is in a", "start": 5395.92, "duration": 6.92}, {"text": "different uh forr format uh the older", "start": 5399.119, "duration": 7.241}, {"text": "format so that's uh that's why this has", "start": 5402.84, "duration": 6.0}, {"text": "been compiled this", "start": 5406.36, "duration": 7.0}, {"text": "way and let's submit", "start": 5408.84, "duration": 8.08}, {"text": "it follow the", "start": 5413.36, "duration": 3.56}, {"text": "commands", "start": 5420.84, "duration": 3.0}, {"text": "and if you do that uh you will", "start": 5432.719, "duration": 4.881}, {"text": "see", "start": 5435.84, "duration": 4.279}, {"text": "uh oh I think I managed to do something", "start": 5437.6, "duration": 5.039}, {"text": "weird with", "start": 5440.119, "duration": 4.801}, {"text": "the I think the cut and paste did", "start": 5442.639, "duration": 4.121}, {"text": "something strange and created this weird", "start": 5444.92, "duration": 4.44}, {"text": "variable but uh uh anyway there's", "start": 5446.76, "duration": 6.28}, {"text": "already some uh uh executable there so", "start": 5449.36, "duration": 7.359}, {"text": "you should be fine", "start": 5453.04, "duration": 3.679}, {"text": "um so you'll see that the output is out", "start": 5458.239, "duration": 4.801}, {"text": "of sequence like I was saying like", "start": 5461.32, "duration": 4.399}, {"text": "processor one is writing out first and", "start": 5463.04, "duration": 5.639}, {"text": "then the others and so on so so there", "start": 5465.719, "duration": 4.92}, {"text": "that but anyway in the end there's this", "start": 5468.679, "duration": 5.121}, {"text": "uh solution set to file and you see this", "start": 5470.639, "duration": 6.761}, {"text": "data zero do do which is the value from", "start": 5473.8, "duration": 5.2}, {"text": "data the first", "start": 5477.4, "duration": 5.48}, {"text": "process process data 1 D is from the", "start": 5479.0, "duration": 6.96}, {"text": "second and data two. that is from the", "start": 5482.88, "duration": 7.68}, {"text": "third process so you see the output", "start": 5485.96, "duration": 8.32}, {"text": "basically oh something weird happened", "start": 5490.56, "duration": 6.36}, {"text": "here I think I might have messed", "start": 5494.28, "duration": 7.04}, {"text": "something up in comp some weird", "start": 5496.92, "duration": 4.4}, {"text": "happen I have to go back and look at", "start": 5502.92, "duration": 6.279}, {"text": "this that's very", "start": 5505.6, "duration": 3.599}, {"text": "hard", "start": 5510.76, "duration": 3.0}, {"text": "let me compile", "start": 5516.84, "duration": 2.839}, {"text": "this I need to write it", "start": 5532.0, "duration": 4.04}, {"text": "explicitly", "start": 5538.119, "duration": 5.56}, {"text": "okay uh", "start": 5540.32, "duration": 3.359}, {"text": "also want to make sure I have the same", "start": 5544.48, "duration": 4.08}, {"text": "modules", "start": 5546.84, "duration": 4.72}, {"text": "loaded", "start": 5548.56, "duration": 3.0}, {"text": "uh Ah that's odd okay something weird is", "start": 5562.679, "duration": 7.48}, {"text": "going on I'll have to go look at the", "start": 5566.639, "duration": 3.52}, {"text": "code", "start": 5570.639, "duration": 4.0}, {"text": "or use a different compiler and see what", "start": 5572.639, "duration": 4.721}, {"text": "happens but let me show you the solution", "start": 5574.639, "duration": 5.681}, {"text": "that's it's odd there's something uh", "start": 5577.36, "duration": 7.64}, {"text": "strange with that compile I think", "start": 5580.32, "duration": 7.04}, {"text": "um so if you look at the solution you", "start": 5585.0, "duration": 6.32}, {"text": "should see something like this uh I have", "start": 5587.36, "duration": 7.68}, {"text": "to debug this probably for some other", "start": 5591.32, "duration": 9.68}, {"text": "time but uh basically if uh uh uh you", "start": 5595.04, "duration": 9.639}, {"text": "should see processor zero with uh these", "start": 5601.0, "duration": 8.76}, {"text": "values so you have uh 0 1 2 3 uh", "start": 5604.679, "duration": 7.801}, {"text": "4 uh with these values you can see that", "start": 5609.76, "duration": 5.04}, {"text": "the overlap points are correct right you", "start": 5612.48, "duration": 6.0}, {"text": "have uh the fourth value here 0. 945", "start": 5614.8, "duration": 6.6}, {"text": "matches what you have on the other side", "start": 5618.48, "duration": 6.159}, {"text": "uh like the uh sorry here uh on this", "start": 5621.4, "duration": 6.0}, {"text": "side on processor one and then the third", "start": 5624.639, "duration": 4.961}, {"text": "is also matching the third here and so", "start": 5627.4, "duration": 4.64}, {"text": "on so that's what I would expect ECT but", "start": 5629.6, "duration": 3.76}, {"text": "for some reason", "start": 5632.04, "duration": 3.84}, {"text": "this last points were getting corrupted", "start": 5633.36, "duration": 5.56}, {"text": "on that one I'm not", "start": 5635.88, "duration": 3.04}, {"text": "sure I'm pretty sure I've run this uh", "start": 5639.239, "duration": 6.161}, {"text": "exact same code before that's where the", "start": 5643.04, "duration": 5.36}, {"text": "output came from but I'm not sure", "start": 5645.4, "duration": 6.92}, {"text": "what let's see if there was", "start": 5648.4, "duration": 3.92}, {"text": "something yeah this uh those numbers", "start": 5655.52, "duration": 4.88}, {"text": "kind of feel like there was a leak", "start": 5658.6, "duration": 3.72}, {"text": "somewhere so I'll have to go back and", "start": 5660.4, "duration": 3.0}, {"text": "deug", "start": 5662.32, "duration": 6.52}, {"text": "it but uh uh anyway that's um that's how", "start": 5663.4, "duration": 7.719}, {"text": "it should uh look the", "start": 5668.84, "duration": 4.879}, {"text": "solution uh let's go back to this thing", "start": 5671.119, "duration": 4.281}, {"text": "so in terms of performance", "start": 5673.719, "duration": 5.201}, {"text": "considerations when you do MPI job so we", "start": 5675.4, "duration": 5.16}, {"text": "already talked about overlapping", "start": 5678.92, "duration": 4.0}, {"text": "communication with computation so use", "start": 5680.56, "duration": 5.96}, {"text": "non-block a uh code uh then you can hide", "start": 5682.92, "duration": 8.64}, {"text": "the communication cost and uh uh you can", "start": 5686.52, "duration": 6.599}, {"text": "basically", "start": 5691.56, "duration": 4.559}, {"text": "uh", "start": 5693.119, "duration": 3.0}, {"text": "uh you can do different parts of the", "start": 5696.52, "duration": 6.76}, {"text": "code uh of the domain while the uh", "start": 5699.119, "duration": 7.681}, {"text": "communication is going on uh then the", "start": 5703.28, "duration": 5.8}, {"text": "other thing is uh remember the exchange", "start": 5706.8, "duration": 4.68}, {"text": "that you're doing on the boundary is is", "start": 5709.08, "duration": 5.44}, {"text": "a Surface exchange right uh so if you", "start": 5711.48, "duration": 5.32}, {"text": "minimize the surface to volume ratio you", "start": 5714.52, "duration": 5.48}, {"text": "the amount of communication will drop in", "start": 5716.8, "duration": 5.399}, {"text": "comparison to the", "start": 5720.0, "duration": 6.32}, {"text": "uh the compute so of course if you can", "start": 5722.199, "duration": 5.92}, {"text": "avoid Communication in some way that's", "start": 5726.32, "duration": 3.48}, {"text": "also fine", "start": 5728.119, "duration": 5.52}, {"text": "uh uh there are some algorithms that uh", "start": 5729.8, "duration": 5.28}, {"text": "let you do", "start": 5733.639, "duration": 3.121}, {"text": "that", "start": 5735.08, "duration": 6.0}, {"text": "uh so talking about the uh asynchronous", "start": 5736.76, "duration": 6.28}, {"text": "communication basically the overlapping", "start": 5741.08, "duration": 4.8}, {"text": "piece uh", "start": 5743.04, "duration": 5.56}, {"text": "uh there's there's actually also this", "start": 5745.88, "duration": 5.96}, {"text": "thing where uh uh the network can handle", "start": 5748.6, "duration": 4.84}, {"text": "all the communication piece like I was", "start": 5751.84, "duration": 3.16}, {"text": "saying so you can offload it to the", "start": 5753.44, "duration": 2.64}, {"text": "network", "start": 5755.0, "duration": 7.679}, {"text": "adapter uh so you can kind of uh do this", "start": 5756.08, "duration": 9.559}, {"text": "uh compute communicate and then uh", "start": 5762.679, "duration": 6.241}, {"text": "compute some more uh and then complete", "start": 5765.639, "duration": 6.121}, {"text": "the communication so that lets you do", "start": 5768.92, "duration": 6.88}, {"text": "some hiding now if you want to know uh", "start": 5771.76, "duration": 8.64}, {"text": "how uh your code is doing uh there are", "start": 5775.8, "duration": 7.76}, {"text": "profiling tools and tracing tools so", "start": 5780.4, "duration": 5.279}, {"text": "because you you know you run a code you", "start": 5783.56, "duration": 3.52}, {"text": "don't know where you're spending all the", "start": 5785.679, "duration": 3.081}, {"text": "time right so there's a lot of lot of", "start": 5787.08, "duration": 4.559}, {"text": "ways to figure this out so and they", "start": 5788.76, "duration": 5.439}, {"text": "range from really lightweight like mpip", "start": 5791.639, "duration": 5.48}, {"text": "which we look at today uh to like tow", "start": 5794.199, "duration": 5.081}, {"text": "which collects a lot of information and", "start": 5797.119, "duration": 4.241}, {"text": "gives you a lot of detail and there's", "start": 5799.28, "duration": 5.04}, {"text": "also the commercial tool DDT which uh", "start": 5801.36, "duration": 6.4}, {"text": "alinea tool which has uh a tool called", "start": 5804.32, "duration": 7.68}, {"text": "map that basically also uh does uh this", "start": 5807.76, "duration": 5.24}, {"text": "sort of", "start": 5812.0, "duration": 3.159}, {"text": "profiling uh these sort of tools are", "start": 5813.0, "duration": 3.679}, {"text": "useful if you're trying to find", "start": 5815.159, "duration": 2.96}, {"text": "performance", "start": 5816.679, "duration": 3.881}, {"text": "issues uh they can give you how much", "start": 5818.119, "duration": 4.321}, {"text": "time is being spent in communication and", "start": 5820.56, "duration": 4.48}, {"text": "the level of detail varies with each", "start": 5822.44, "duration": 6.32}, {"text": "Tool uh so the identif this basically", "start": 5825.04, "duration": 7.28}, {"text": "lets you identify bottlenecks and uh", "start": 5828.76, "duration": 5.959}, {"text": "lets you overlap communication with uh", "start": 5832.32, "duration": 5.799}, {"text": "computation wherever it's", "start": 5834.719, "duration": 3.4}, {"text": "possible uh", "start": 5838.92, "duration": 6.719}, {"text": "so if you want to uh uh look at the mpip", "start": 5841.84, "duration": 7.96}, {"text": "example let's go to the home", "start": 5845.639, "duration": 7.161}, {"text": "uh", "start": 5849.8, "duration": 3.0}, {"text": "uh parallel MK", "start": 5852.84, "duration": 7.96}, {"text": "directory and", "start": 5856.48, "duration": 4.32}, {"text": "uh there is a comp there is uh this", "start": 5861.32, "duration": 8.16}, {"text": "compile uh", "start": 5865.08, "duration": 4.4}, {"text": "oops compile profile readme uh file", "start": 5870.199, "duration": 6.841}, {"text": "which actually tells you how to compile", "start": 5875.32, "duration": 5.12}, {"text": "this code uh but I already did this and", "start": 5877.04, "duration": 6.24}, {"text": "uh as you can see uh we're doing the", "start": 5880.44, "duration": 5.64}, {"text": "usual uh MPI uh", "start": 5883.28, "duration": 7.319}, {"text": "compiler uh but then adding this Library", "start": 5886.08, "duration": 8.76}, {"text": "so dasl MPI home lib uh mpip home lib", "start": 5890.599, "duration": 6.161}, {"text": "and then this library and then some", "start": 5894.84, "duration": 4.16}, {"text": "other libraries that kind of are needed", "start": 5896.76, "duration": 3.359}, {"text": "for", "start": 5899.0, "duration": 3.84}, {"text": "mpip what npip does is basically", "start": 5900.119, "duration": 7.6}, {"text": "intercepts the NPI calls and then uh uh", "start": 5902.84, "duration": 6.48}, {"text": "does the profiling it's pretty light", "start": 5907.719, "duration": 5.52}, {"text": "weight in terms of overhead and uh and", "start": 5909.32, "duration": 8.0}, {"text": "then uh it gives you a profile so uh", "start": 5913.239, "duration": 5.761}, {"text": "this is already done so let's just", "start": 5917.32, "duration": 6.279}, {"text": "submit the uh", "start": 5919.0, "duration": 4.599}, {"text": "uh", "start": 5930.119, "duration": 5.0}, {"text": "oh use the", "start": 5932.96, "duration": 4.679}, {"text": "wrong actually I don't need to do this", "start": 5935.119, "duration": 4.441}, {"text": "right I just need to do reservation", "start": 5937.639, "duration": 5.401}, {"text": "equals SII", "start": 5939.56, "duration": 3.48}, {"text": "2022 okay so submitted that", "start": 5943.96, "duration": 8.0}, {"text": "and I'm curious if the data here okay", "start": 5948.239, "duration": 5.681}, {"text": "this is a different", "start": 5951.96, "duration": 4.96}, {"text": "compiler", "start": 5953.92, "duration": 3.0}, {"text": "uh yeah so you can see this is okay so", "start": 5958.199, "duration": 4.04}, {"text": "that there's something weird with that", "start": 5960.88, "duration": 3.2}, {"text": "compiler I need to go back and check", "start": 5962.239, "duration": 6.0}, {"text": "that but yeah so this uh uh if you're", "start": 5964.08, "duration": 7.32}, {"text": "wondering what I did here I'm I'm using", "start": 5968.239, "duration": 5.761}, {"text": "the for the profiler I'm using the open", "start": 5971.4, "duration": 8.48}, {"text": "MPI compiler and running so um so I uh", "start": 5974.0, "duration": 8.719}, {"text": "so you can see that the data zero uh", "start": 5979.88, "duration": 3.799}, {"text": "data", "start": 5982.719, "duration": 6.721}, {"text": "one uh uh and data 2 now are like what I", "start": 5983.679, "duration": 8.081}, {"text": "was uh showing you on the", "start": 5989.44, "duration": 5.32}, {"text": "slide basically you have uh these two", "start": 5991.76, "duration": 5.28}, {"text": "overlap points matching these two these", "start": 5994.76, "duration": 4.359}, {"text": "two overlap points matching these", "start": 5997.04, "duration": 8.04}, {"text": "two uh and then uh we have the profile", "start": 5999.119, "duration": 10.441}, {"text": "also so uh what mpip does is first thing", "start": 6005.08, "duration": 8.079}, {"text": "if you look at the output uh", "start": 6009.56, "duration": 8.44}, {"text": "it's uh it's going to uh have uh some", "start": 6013.159, "duration": 6.52}, {"text": "additional info telling you that it's", "start": 6018.0, "duration": 3.92}, {"text": "doing the profiling so there's this uh", "start": 6019.679, "duration": 4.881}, {"text": "piece of the output which is saying you", "start": 6021.92, "duration": 5.36}, {"text": "know this is mpip with version 341", "start": 6024.56, "duration": 6.32}, {"text": "whatever build uh and then it does the", "start": 6027.28, "duration": 5.48}, {"text": "execution and then at the end it says", "start": 6030.88, "duration": 6.52}, {"text": "I'm storing the mpip output uh uh in in", "start": 6032.76, "duration": 6.919}, {"text": "this", "start": 6037.4, "duration": 2.279}, {"text": "profile so if you look at the mpip uh", "start": 6040.199, "duration": 6.281}, {"text": "profile this is a nice tool because it", "start": 6048.32, "duration": 5.52}, {"text": "actually keeps track of when it was", "start": 6051.32, "duration": 5.799}, {"text": "built uh when this code was run so we we", "start": 6053.84, "duration": 7.44}, {"text": "just run it run it uh today so you see", "start": 6057.119, "duration": 6.241}, {"text": "the date basically", "start": 6061.28, "duration": 7.04}, {"text": "10:06 uh on on uh August 5th and it", "start": 6063.36, "duration": 7.56}, {"text": "tells you which nodes were used uh since", "start": 6068.32, "duration": 4.44}, {"text": "this was a single node you see the same", "start": 6070.92, "duration": 5.64}, {"text": "node twice uh um but if it was a multide", "start": 6072.76, "duration": 5.08}, {"text": "you would you would have the task", "start": 6076.56, "duration": 2.599}, {"text": "assignment so it's nice if you're", "start": 6077.84, "duration": 3.24}, {"text": "debugging a performance issue because", "start": 6079.159, "duration": 4.681}, {"text": "sometimes the issue is not with the", "start": 6081.08, "duration": 5.519}, {"text": "MPI I mean the are cord it could be", "start": 6083.84, "duration": 4.279}, {"text": "there's something wrong on the node", "start": 6086.599, "duration": 5.801}, {"text": "right so you want a node list uh and", "start": 6088.119, "duration": 7.321}, {"text": "then it tells you the MPI time on each", "start": 6092.4, "duration": 7.4}, {"text": "task uh so it's uh the MPI percentage", "start": 6095.44, "duration": 7.96}, {"text": "you can see is not much uh overall", "start": 6099.8, "duration": 9.12}, {"text": "15% uh and uh it tells it tells you uh", "start": 6103.4, "duration": 7.64}, {"text": "all the calls right like the send", "start": 6108.92, "duration": 5.12}, {"text": "receives uh and how much each of those", "start": 6111.04, "duration": 6.119}, {"text": "took uh and it actually has the size of", "start": 6114.04, "duration": 7.559}, {"text": "the messages that are being sent uh and", "start": 6117.159, "duration": 6.48}, {"text": "it also tells you the timing for each of", "start": 6121.599, "duration": 4.801}, {"text": "the call sites so decent amount of", "start": 6123.639, "duration": 4.281}, {"text": "information the only thing you don't", "start": 6126.4, "duration": 3.799}, {"text": "know is uh you're seeing all these in", "start": 6127.92, "duration": 4.759}, {"text": "aggregation you don't know like what", "start": 6130.199, "duration": 5.04}, {"text": "sequence all of this happened in right", "start": 6132.679, "duration": 3.96}, {"text": "so that's where you would need a", "start": 6135.239, "duration": 5.0}, {"text": "profiler uh like too that can give you a", "start": 6136.639, "duration": 5.56}, {"text": "lot more", "start": 6140.239, "duration": 6.241}, {"text": "information uh uh but uh as you can see", "start": 6142.199, "duration": 6.601}, {"text": "there's uh quite a bit of info here", "start": 6146.48, "duration": 7.04}, {"text": "right so uh so you you got the node list", "start": 6148.8, "duration": 7.439}, {"text": "you got the time when it run so if there", "start": 6153.52, "duration": 4.36}, {"text": "are system issues you can go back and", "start": 6156.239, "duration": 3.36}, {"text": "correlate oh you know luster was not", "start": 6157.88, "duration": 3.48}, {"text": "working that well that time or oh there", "start": 6159.599, "duration": 4.841}, {"text": "was a network issue so maybe that caused", "start": 6161.36, "duration": 5.12}, {"text": "the problem but you would know that from", "start": 6164.44, "duration": 5.32}, {"text": "your profile but it also gives you uh at", "start": 6166.48, "duration": 6.08}, {"text": "the code level like uh how many how much", "start": 6169.76, "duration": 5.56}, {"text": "percentage MPI is doing so one thing you", "start": 6172.56, "duration": 5.76}, {"text": "can also uh see is", "start": 6175.32, "duration": 6.0}, {"text": "uh uh it gives you the MPI percentage on", "start": 6178.32, "duration": 6.359}, {"text": "each task so sometimes if there is some", "start": 6181.32, "duration": 6.359}, {"text": "imbalance you'll see that uh like", "start": 6184.679, "duration": 6.361}, {"text": "there's a lot of uh uh like some tasks", "start": 6187.679, "duration": 5.721}, {"text": "are taking longer on MPI calls than", "start": 6191.04, "duration": 4.28}, {"text": "others and so on so you you will be able", "start": 6193.4, "duration": 6.04}, {"text": "to spot some immediate things or uh uh", "start": 6195.32, "duration": 7.16}, {"text": "you can run this with npip at different", "start": 6199.44, "duration": 5.92}, {"text": "sizes of your runs like say you have an", "start": 6202.48, "duration": 5.719}, {"text": "NPI code and you're running it with two", "start": 6205.36, "duration": 7.72}, {"text": "four 6 8 16 32 128 all kinds of", "start": 6208.199, "duration": 7.361}, {"text": "processor counts you want to see what's", "start": 6213.08, "duration": 4.8}, {"text": "happening with the MPI percentage like", "start": 6215.56, "duration": 4.24}, {"text": "if that starts growing then you know", "start": 6217.88, "duration": 3.92}, {"text": "that the problem either is too small or", "start": 6219.8, "duration": 3.96}, {"text": "your communication is not scaling in", "start": 6221.8, "duration": 4.16}, {"text": "some way and you have to go figure out", "start": 6223.76, "duration": 5.64}, {"text": "uh why that's happening because uh", "start": 6225.96, "duration": 5.04}, {"text": "because if that MPI person percentage", "start": 6229.4, "duration": 4.08}, {"text": "goes off to like say 50 60% then your", "start": 6231.0, "duration": 4.48}, {"text": "code is basically very inefficient right", "start": 6233.48, "duration": 5.04}, {"text": "because you're spending 60% of the time", "start": 6235.48, "duration": 6.08}, {"text": "communicating and only 40% of the time", "start": 6238.52, "duration": 5.56}, {"text": "uh uh doing the actual calculation", "start": 6241.56, "duration": 4.32}, {"text": "there's something", "start": 6244.08, "duration": 6.599}, {"text": "wrong so there's that", "start": 6245.88, "duration": 4.799}, {"text": "so as I mentioned uh uh we didn't look", "start": 6251.0, "duration": 6.679}, {"text": "at everything today uh there are lots of", "start": 6254.719, "duration": 6.96}, {"text": "complex routines uh that can use data", "start": 6257.679, "duration": 6.201}, {"text": "derived data types you can have user", "start": 6261.679, "duration": 3.92}, {"text": "defined reduction", "start": 6263.88, "duration": 4.12}, {"text": "functions uh you can have groups of", "start": 6265.599, "duration": 4.921}, {"text": "processes in different communicators uh", "start": 6268.0, "duration": 4.04}, {"text": "you don't necessarily have to put all", "start": 6270.52, "duration": 4.8}, {"text": "the task into all the the whole into the", "start": 6272.04, "duration": 5.48}, {"text": "communicator we didn't look at parallel", "start": 6275.32, "duration": 4.68}, {"text": "IO at all but there's parallel IO", "start": 6277.52, "duration": 5.159}, {"text": "routines that let you write out uh", "start": 6280.0, "duration": 5.48}, {"text": "single file but from all the processes", "start": 6282.679, "duration": 4.361}, {"text": "so you can basically write different", "start": 6285.48, "duration": 3.679}, {"text": "parts of the file from different", "start": 6287.04, "duration": 5.159}, {"text": "task we didn't look at the one-sided", "start": 6289.159, "duration": 4.881}, {"text": "Communications which which can do the", "start": 6292.199, "duration": 3.601}, {"text": "remote direct memory access that I was", "start": 6294.04, "duration": 4.559}, {"text": "talking about and this is what helps you", "start": 6295.8, "duration": 7.2}, {"text": "lower the uh latency even more uh in", "start": 6298.599, "duration": 6.04}, {"text": "terms of", "start": 6303.0, "duration": 4.48}, {"text": "network so the mpi3 standard has over", "start": 6304.639, "duration": 6.361}, {"text": "like 400 routines so you can uh look at", "start": 6307.48, "duration": 6.48}, {"text": "that I I threw one code in there which", "start": 6311.0, "duration": 5.08}, {"text": "has two bugs again this is not something", "start": 6313.96, "duration": 4.159}, {"text": "you have to do today but you can poke", "start": 6316.08, "duration": 3.44}, {"text": "around and see if you can find these", "start": 6318.119, "duration": 4.881}, {"text": "bugs but basically there is something", "start": 6319.52, "duration": 7.639}, {"text": "there so that kind of ends uh all the", "start": 6323.0, "duration": 7.08}, {"text": "info about uh you know MPI routines and", "start": 6327.159, "duration": 5.281}, {"text": "how you can decompose a problem and", "start": 6330.08, "duration": 4.72}, {"text": "solve things let me just quickly take a", "start": 6332.44, "duration": 4.239}, {"text": "look okay we don't have anything so let", "start": 6334.8, "duration": 5.319}, {"text": "me go back uh to this I'm going to", "start": 6336.679, "duration": 6.201}, {"text": "finish with a couple of things one A", "start": 6340.119, "duration": 4.881}, {"text": "specialized MPI", "start": 6342.88, "duration": 4.0}, {"text": "implementation uh for", "start": 6345.0, "duration": 4.0}, {"text": "gpus uh because we didn't even talk", "start": 6346.88, "duration": 4.4}, {"text": "about gpus today but uh uh there's", "start": 6349.0, "duration": 3.96}, {"text": "actually special implementations and", "start": 6351.28, "duration": 6.16}, {"text": "then I'll talk about some uh uh binding", "start": 6352.96, "duration": 6.679}, {"text": "and kind of task layout things that you", "start": 6357.44, "duration": 4.96}, {"text": "you have to keep in mind uh again that", "start": 6359.639, "duration": 5.401}, {"text": "becomes very important when you have uh", "start": 6362.4, "duration": 4.92}, {"text": "nodes like expans where you have 128", "start": 6365.04, "duration": 4.32}, {"text": "cores the most likely thing is you're", "start": 6367.32, "duration": 5.0}, {"text": "not going to be running with all 128", "start": 6369.36, "duration": 5.839}, {"text": "tasks on the Node you might run with", "start": 6372.32, "duration": 5.44}, {"text": "eight tasks or 16 tasks and do", "start": 6375.199, "duration": 5.0}, {"text": "threads uh for or like you know you", "start": 6377.76, "duration": 4.76}, {"text": "might do 32 tasks and four threads like", "start": 6380.199, "duration": 6.321}, {"text": "for example the high performance I mean", "start": 6382.52, "duration": 7.4}, {"text": "um uh implementation highest performance", "start": 6386.52, "duration": 5.96}, {"text": "of wrf implementation comes with a", "start": 6389.92, "duration": 6.52}, {"text": "hybrid run like once you start get to uh", "start": 6392.48, "duration": 7.44}, {"text": "large core counts so so there's always", "start": 6396.44, "duration": 7.4}, {"text": "uh uh hybrid runs that you can do and", "start": 6399.92, "duration": 5.6}, {"text": "but then there are considerations of how", "start": 6403.84, "duration": 3.359}, {"text": "you lay out those", "start": 6405.52, "duration": 3.48}, {"text": "STS", "start": 6407.199, "duration": 4.361}, {"text": "uh so but but before that I want to talk", "start": 6409.0, "duration": 7.08}, {"text": "about Mage to gdr and open MPI also has", "start": 6411.56, "duration": 8.28}, {"text": "implementation that does uh GPU direct", "start": 6416.08, "duration": 6.32}, {"text": "but um uh basically this is a", "start": 6419.84, "duration": 5.92}, {"text": "specialized MPI that uh works well on", "start": 6422.4, "duration": 5.88}, {"text": "the GPU nodes so I'm going to start off", "start": 6425.76, "duration": 4.879}, {"text": "by kind of showing how one of our older", "start": 6428.28, "duration": 6.08}, {"text": "systems Comet uh had a node layout like", "start": 6430.639, "duration": 8.0}, {"text": "this remember I was showing you the uh", "start": 6434.36, "duration": 7.0}, {"text": "um CPU architecture basically with two", "start": 6438.639, "duration": 6.0}, {"text": "sockets right now when you have gpus uh", "start": 6441.36, "duration": 7.0}, {"text": "the gpus can be all tied to one socket", "start": 6444.639, "duration": 6.401}, {"text": "or they could be split like on Comet", "start": 6448.36, "duration": 5.64}, {"text": "what what we had was two gpus on each", "start": 6451.04, "duration": 5.72}, {"text": "socket now there is not direct", "start": 6454.0, "duration": 5.48}, {"text": "connection on Comet between these gpus", "start": 6456.76, "duration": 6.0}, {"text": "uh uh the gpus on the same socket could", "start": 6459.48, "duration": 6.8}, {"text": "talk to each other directly or uh PCI", "start": 6462.76, "duration": 5.919}, {"text": "but they could gpus on the different", "start": 6466.28, "duration": 5.12}, {"text": "sockets if you want to talk to GPU 0", "start": 6468.679, "duration": 5.321}, {"text": "from two you have to go through the CPU", "start": 6471.4, "duration": 6.08}, {"text": "across the qpi and back down to gpu0 so", "start": 6474.0, "duration": 7.84}, {"text": "that can add a lot of uh um overhead on", "start": 6477.48, "duration": 6.639}, {"text": "a GPU Cod when you're going uh through", "start": 6481.84, "duration": 3.72}, {"text": "the CPU for", "start": 6484.119, "duration": 5.04}, {"text": "communication so what the gdr does is uh", "start": 6485.56, "duration": 5.32}, {"text": "there is something called GPU direct", "start": 6489.159, "duration": 5.44}, {"text": "RDMA which lets you basically", "start": 6490.88, "duration": 8.359}, {"text": "uh uh uh access the memory of of another", "start": 6494.599, "duration": 8.961}, {"text": "GPU now if your network card uh is on", "start": 6499.239, "duration": 7.281}, {"text": "the same PCI bus uh you actually don't", "start": 6503.56, "duration": 5.599}, {"text": "have to go through the CPU uh to use the", "start": 6506.52, "duration": 4.199}, {"text": "network you can go straight through the", "start": 6509.159, "duration": 3.48}, {"text": "net from the GPU to the network to", "start": 6510.719, "duration": 6.201}, {"text": "another node and to the GPU there so uh", "start": 6512.639, "duration": 7.121}, {"text": "of course that's possible uh uh at the", "start": 6516.92, "duration": 5.16}, {"text": "low level but then your MPI needs to be", "start": 6519.76, "duration": 4.2}, {"text": "aware of that right otherwise the MPI", "start": 6522.08, "duration": 3.72}, {"text": "will just say oh you know I need to", "start": 6523.96, "duration": 4.279}, {"text": "transfer from the memory buffer on this", "start": 6525.8, "duration": 4.919}, {"text": "CPU to the memory buffer on that CPU it", "start": 6528.239, "duration": 4.561}, {"text": "doesn't know about the gpus", "start": 6530.719, "duration": 7.641}, {"text": "so uh uh so basically uh that would", "start": 6532.8, "duration": 8.16}, {"text": "involve like a lot of overhead and", "start": 6538.36, "duration": 4.72}, {"text": "actually for GPU codes it was going to", "start": 6540.96, "duration": 5.96}, {"text": "affect the scaling quite a bit What GPU", "start": 6543.08, "duration": 7.079}, {"text": "embab to gdr and also the excuse me the", "start": 6546.92, "duration": 5.92}, {"text": "open MPI version that also has a gdr", "start": 6550.159, "duration": 6.401}, {"text": "version uh let you do is uh basically", "start": 6552.84, "duration": 6.56}, {"text": "bypass the CPU on on on the transfers", "start": 6556.56, "duration": 6.24}, {"text": "and the me and the MPI communication is", "start": 6559.4, "duration": 6.279}, {"text": "happening GPU to", "start": 6562.8, "duration": 2.879}, {"text": "GPU uh this is kind of the P1 100 uh", "start": 6566.08, "duration": 8.4}, {"text": "architecture of uh uh Comet uh basically", "start": 6569.199, "duration": 12.321}, {"text": "what I'm uh showing is uh uh uh uh uh", "start": 6574.48, "duration": 11.199}, {"text": "the topology output uh uh for each each", "start": 6581.52, "duration": 7.159}, {"text": "node so you can see that gpu0 can talk", "start": 6585.679, "duration": 6.321}, {"text": "to gpu0 it's itself right but then if", "start": 6588.679, "duration": 7.321}, {"text": "it's on the same socket uh uh it it can", "start": 6592.0, "duration": 8.4}, {"text": "basically go uh through the same pcix", "start": 6596.0, "duration": 5.88}, {"text": "but if it's on a different socket it", "start": 6600.4, "duration": 6.08}, {"text": "needs to go through uh uh the S SMP link", "start": 6601.88, "duration": 7.0}, {"text": "between the CPU sockets which is the qpi", "start": 6606.48, "duration": 4.4}, {"text": "in this", "start": 6608.88, "duration": 6.16}, {"text": "case so when you do uh uh latency checks", "start": 6610.88, "duration": 7.68}, {"text": "you'll see that if it's latency between", "start": 6615.04, "duration": 7.44}, {"text": "GPU 0 and one you have 2.73 microc but", "start": 6618.56, "duration": 6.4}, {"text": "if you go from GPU 1 to gpu2 which are", "start": 6622.48, "duration": 4.96}, {"text": "not on the same socket you get 3.13 so", "start": 6624.96, "duration": 5.639}, {"text": "there's quite a bit of uh latency", "start": 6627.44, "duration": 8.679}, {"text": "overhead uh same thing uh inod uh the", "start": 6630.599, "duration": 8.401}, {"text": "there's uh there's a difference between", "start": 6636.119, "duration": 6.56}, {"text": "which GPU you go to uh even with the GPU", "start": 6639.0, "duration": 6.159}, {"text": "direct", "start": 6642.679, "duration": 2.48}, {"text": "implementation now on expanse it's a", "start": 6645.48, "duration": 5.36}, {"text": "little different so we have four of", "start": 6648.52, "duration": 3.92}, {"text": "these v00", "start": 6650.84, "duration": 7.44}, {"text": "gpus uh uh uh they are all basically uh", "start": 6652.44, "duration": 10.52}, {"text": "connected with NV link so uh so you", "start": 6658.28, "duration": 7.0}, {"text": "don't actually have to go so if you look", "start": 6662.96, "duration": 7.0}, {"text": "at the topology of uh the uh expanse GPU", "start": 6665.28, "duration": 7.439}, {"text": "you don't actually have to go over the", "start": 6669.96, "duration": 6.48}, {"text": "CPU socket uh uh the link between the", "start": 6672.719, "duration": 6.041}, {"text": "CPU sockets you're basically just using", "start": 6676.44, "duration": 4.799}, {"text": "the NV link between all the gpus on a", "start": 6678.76, "duration": 4.6}, {"text": "not", "start": 6681.239, "duration": 4.321}, {"text": "so", "start": 6683.36, "duration": 5.6}, {"text": "uh so if you compare uh basically now", "start": 6685.56, "duration": 6.079}, {"text": "the latency on Comet and on expans you", "start": 6688.96, "duration": 5.52}, {"text": "can see on Comet there were different", "start": 6691.639, "duration": 4.721}, {"text": "curves depending on which gpus you are", "start": 6694.48, "duration": 5.119}, {"text": "using right uh but on", "start": 6696.36, "duration": 5.68}, {"text": "expanse uh all the curves are basically", "start": 6699.599, "duration": 5.961}, {"text": "the same and uh not only that the", "start": 6702.04, "duration": 6.199}, {"text": "latency is much lower too we can look at", "start": 6705.56, "duration": 7.039}, {"text": "uh it's like 1.5 micros so uh things are", "start": 6708.239, "duration": 7.761}, {"text": "a lot faster uh on expanse between the", "start": 6712.599, "duration": 6.801}, {"text": "gpus uh on the same node and even on the", "start": 6716.0, "duration": 7.32}, {"text": "remote right so if you do uh The", "start": 6719.4, "duration": 6.56}, {"text": "intranode Benchmark uh for the band", "start": 6723.32, "duration": 6.24}, {"text": "withd you'll see it like basically uh on", "start": 6725.96, "duration": 7.159}, {"text": "Comet if if the gpus were on the same uh", "start": 6729.56, "duration": 6.48}, {"text": "socket you get uh pretty good uh", "start": 6733.119, "duration": 5.761}, {"text": "bandwidth uh it goes up to", "start": 6736.04, "duration": 6.52}, {"text": "basically uh uh what's that like almost", "start": 6738.88, "duration": 8.52}, {"text": "13,000 so 13 GB per second but uh when", "start": 6742.56, "duration": 7.92}, {"text": "you get to do this between gpus that are", "start": 6747.4, "duration": 6.44}, {"text": "not on the same socket uh it it does", "start": 6750.48, "duration": 4.8}, {"text": "okay to some extent and then just", "start": 6753.84, "duration": 4.6}, {"text": "flattens out uh and this is the limit on", "start": 6755.28, "duration": 9.04}, {"text": "the uh uh uh on basically going through", "start": 6758.44, "duration": 9.36}, {"text": "the CPU that's that's the issue there", "start": 6764.32, "duration": 8.08}, {"text": "now whereas if you go to uh expands uh", "start": 6767.8, "duration": 6.319}, {"text": "you can see that doesn't matter which", "start": 6772.4, "duration": 3.56}, {"text": "combination you use you end up with", "start": 6774.119, "duration": 5.0}, {"text": "basically uh the nice clean bandwidth", "start": 6775.96, "duration": 7.32}, {"text": "curve and and it's all uh at a very high", "start": 6779.119, "duration": 7.08}, {"text": "bandwidth it's like 40 gigabytes per", "start": 6783.28, "duration": 6.359}, {"text": "second similar thing when you go", "start": 6786.199, "duration": 6.52}, {"text": "uh uh off node uh I don't have the", "start": 6789.639, "duration": 4.801}, {"text": "numbers but you can basically you you", "start": 6792.719, "duration": 4.36}, {"text": "can imagine it's the same", "start": 6794.44, "duration": 5.96}, {"text": "thing so okay the last part of the uh", "start": 6797.079, "duration": 6.401}, {"text": "talk is uh basically on the hybrid MPI", "start": 6800.4, "duration": 5.16}, {"text": "open MP jobs and like how you want to", "start": 6803.48, "duration": 7.28}, {"text": "run this on expense so uh uh uh I'm", "start": 6805.56, "duration": 7.2}, {"text": "going to be basically talking about the", "start": 6810.76, "duration": 4.879}, {"text": "IV run scripts which Manu developed at", "start": 6812.76, "duration": 6.359}, {"text": "sdsc uh and", "start": 6815.639, "duration": 5.921}, {"text": "uh this will be in your path if you do", "start": 6819.119, "duration": 4.841}, {"text": "mod mod load", "start": 6821.56, "duration": 6.519}, {"text": "uhfc so going back uh uh let's recall", "start": 6823.96, "duration": 7.719}, {"text": "that um processor architecture so you", "start": 6828.079, "duration": 6.321}, {"text": "have the eight cor complex dies and uh", "start": 6831.679, "duration": 4.841}, {"text": "the CCD is going through the IOD die and", "start": 6834.4, "duration": 3.279}, {"text": "so on", "start": 6836.52, "duration": 4.679}, {"text": "right uh and then uh in each core", "start": 6837.679, "duration": 6.761}, {"text": "complex there are two core I mean core", "start": 6841.199, "duration": 5.561}, {"text": "complex die there are two core complexes", "start": 6844.44, "duration": 4.199}, {"text": "each with fours and two cores which are", "start": 6846.76, "duration": 5.64}, {"text": "sharing uh uh an L3", "start": 6848.639, "duration": 9.0}, {"text": "cache right so um uh when you're laying", "start": 6852.4, "duration": 7.96}, {"text": "out like a hybrid job", "start": 6857.639, "duration": 6.281}, {"text": "uh like say you have an MPI uh uh like", "start": 6860.36, "duration": 6.6}, {"text": "six 32 MPI tasks on a ND and four", "start": 6863.92, "duration": 5.759}, {"text": "threads per uh", "start": 6866.96, "duration": 6.32}, {"text": "TS uh to get good performance on the", "start": 6869.679, "duration": 5.52}, {"text": "shared memory part it might be good if", "start": 6873.28, "duration": 4.439}, {"text": "you just put all of them on the same", "start": 6875.199, "duration": 7.04}, {"text": "cache uh so you put four threads uh um", "start": 6877.719, "duration": 8.161}, {"text": "on U the four cores that are sharing the", "start": 6882.239, "duration": 6.641}, {"text": "cash so this requires basically control", "start": 6885.88, "duration": 7.0}, {"text": "of where your your tasa Landing right", "start": 6888.88, "duration": 6.839}, {"text": "uh uh because this this is quite", "start": 6892.88, "duration": 4.48}, {"text": "important from a per performance", "start": 6895.719, "duration": 4.161}, {"text": "standpoint because uh remember the", "start": 6897.36, "duration": 4.2}, {"text": "memory also gets partitioned into", "start": 6899.88, "duration": 6.0}, {"text": "different NAD domains right so on uh uh", "start": 6901.56, "duration": 7.159}, {"text": "uh an expanse we have four Numa domains", "start": 6905.88, "duration": 5.839}, {"text": "per socket and you have two memory", "start": 6908.719, "duration": 5.52}, {"text": "channels uh associated with each of the", "start": 6911.719, "duration": 5.36}, {"text": "Numa domains so when you're laying out", "start": 6914.239, "duration": 4.561}, {"text": "the task you don't want to be going", "start": 6917.079, "duration": 5.321}, {"text": "across things and uh ending up having to", "start": 6918.8, "duration": 8.279}, {"text": "uh uh uh uh get the additional", "start": 6922.4, "duration": 9.679}, {"text": "latency um so like since we have four", "start": 6927.079, "duration": 7.12}, {"text": "num domains and each logical quadrant is", "start": 6932.079, "duration": 3.841}, {"text": "a numo domain and the memories inter", "start": 6934.199, "duration": 4.92}, {"text": "leaves on the two memory channels there", "start": 6935.92, "duration": 7.4}, {"text": "uh and also uh one of these uh Numa", "start": 6939.119, "duration": 6.721}, {"text": "domains is where your network card is by", "start": 6943.32, "duration": 5.279}, {"text": "the way", "start": 6945.84, "duration": 6.799}, {"text": "um so there are different ways of doing", "start": 6948.599, "duration": 7.361}, {"text": "this uh all the MPI implementations have", "start": 6952.639, "duration": 6.6}, {"text": "uh Affinity options so you can uh for", "start": 6955.96, "duration": 6.279}, {"text": "example in open MPI you can do MPI run", "start": 6959.239, "duration": 8.4}, {"text": "uh with 32 tasks and uh these uh MCA PML", "start": 6962.239, "duration": 7.36}, {"text": "options these are basically more to do", "start": 6967.639, "duration": 3.56}, {"text": "with the communication but there is this", "start": 6969.599, "duration": 4.761}, {"text": "dash dash map by L3 cache", "start": 6971.199, "duration": 8.801}, {"text": "option uh so uh it'll explicitly map it", "start": 6974.36, "duration": 9.879}, {"text": "so that uh uh the uh each of the MPI", "start": 6980.0, "duration": 8.679}, {"text": "task is on a different uh uh L3 cache", "start": 6984.239, "duration": 7.641}, {"text": "and then uh the threads will be basic so", "start": 6988.679, "duration": 4.601}, {"text": "if you have four threads they'll end up", "start": 6991.88, "duration": 3.08}, {"text": "on the same L3", "start": 6993.28, "duration": 5.76}, {"text": "cach uh in Intel MPI uh there are", "start": 6994.96, "duration": 7.8}, {"text": "options to kind of do MPI pin domains uh", "start": 6999.04, "duration": 5.48}, {"text": "I think with the newest versions of one", "start": 7002.76, "duration": 4.6}, {"text": "API this changed but uh with the older", "start": 7004.52, "duration": 4.719}, {"text": "Intel MPI versions they had these pin", "start": 7007.36, "duration": 3.08}, {"text": "domain", "start": 7009.239, "duration": 5.44}, {"text": "options uh where you do om col Compact", "start": 7010.44, "duration": 7.92}, {"text": "and Intel MPI is smart enough to say oh", "start": 7014.679, "duration": 6.48}, {"text": "you you have 16 threads and uh you have", "start": 7018.36, "duration": 4.799}, {"text": "eight Tas so then it's going to lay it", "start": 7021.159, "duration": 5.44}, {"text": "out uh in a fashion that is", "start": 7023.159, "duration": 8.08}, {"text": "sequential but giving room for the eight", "start": 7026.599, "duration": 4.64}, {"text": "threads sometimes the application itself", "start": 7031.92, "duration": 4.679}, {"text": "has pinning options like an example is", "start": 7034.28, "duration": 5.72}, {"text": "ND uh which is a molecular dynamic", "start": 7036.599, "duration": 10.281}, {"text": "apption uh it does uh uh very uh uh", "start": 7040.0, "duration": 11.48}, {"text": "specific layout options so uh here I'm", "start": 7046.88, "duration": 6.279}, {"text": "combining the two by the way what I'm", "start": 7051.48, "duration": 4.719}, {"text": "doing here is saying NPI run- np8 I'm", "start": 7053.159, "duration": 7.0}, {"text": "saying Mac ranks with four no four tasks", "start": 7056.199, "duration": 7.0}, {"text": "per node right so that's one thing so", "start": 7060.159, "duration": 6.56}, {"text": "you will have four namd tasks but then", "start": 7063.199, "duration": 6.361}, {"text": "the tasks themselves are laid out", "start": 7066.719, "duration": 6.841}, {"text": "according to uh uh this structure", "start": 7069.56, "duration": 7.24}, {"text": "basically uh uh namd has this option to", "start": 7073.56, "duration": 6.4}, {"text": "set CPU Affinity so it will pen things", "start": 7076.8, "duration": 5.68}, {"text": "uh then it also tells has the option of", "start": 7079.96, "duration": 4.4}, {"text": "saying hey how many threads do we have", "start": 7082.48, "duration": 5.0}, {"text": "on this uh each task so here we are", "start": 7084.36, "duration": 5.12}, {"text": "saying 31 and you might be wondering why", "start": 7087.48, "duration": 7.52}, {"text": "not 32 because uh you have 32 cores uh", "start": 7089.48, "duration": 9.119}, {"text": "per task available if you do four tasks", "start": 7095.0, "duration": 5.8}, {"text": "uh the reason is because namd has the", "start": 7098.599, "duration": 4.721}, {"text": "option of having dedicated communication", "start": 7100.8, "duration": 5.08}, {"text": "threads so all of these are to kind of", "start": 7103.32, "duration": 10.68}, {"text": "prevent uh um uh uh the the regular uh", "start": 7105.88, "duration": 10.6}, {"text": "compute task getting overloaded with", "start": 7114.0, "duration": 4.639}, {"text": "communication aspects so you have a", "start": 7116.48, "duration": 5.0}, {"text": "dedicated set of tasks for doing", "start": 7118.639, "duration": 5.321}, {"text": "communication and then last thing is an", "start": 7121.48, "duration": 4.84}, {"text": "MD lets you actually lay out the uh", "start": 7123.96, "duration": 5.759}, {"text": "tasks uh according to the core ID so", "start": 7126.32, "duration": 5.879}, {"text": "here what we're saying is hey use core 0", "start": 7129.719, "duration": 5.841}, {"text": "32 64 and 96 as communication", "start": 7132.199, "duration": 7.4}, {"text": "threads uh and then use the rest for uh", "start": 7135.56, "duration": 5.92}, {"text": "compute and we are also explicitly", "start": 7139.599, "duration": 3.52}, {"text": "saying the first compute task will have", "start": 7141.48, "duration": 4.679}, {"text": "1 to 31 second will have 33 to 63 and so", "start": 7143.119, "duration": 6.0}, {"text": "on so you're kind of laying out uh", "start": 7146.159, "duration": 6.08}, {"text": "explicitly what you", "start": 7149.119, "duration": 3.12}, {"text": "want now if you're writing your own code", "start": 7152.4, "duration": 6.0}, {"text": "you could be doing this yourself also uh", "start": 7155.36, "duration": 4.799}, {"text": "explicitly", "start": 7158.4, "duration": 7.16}, {"text": "because both MPI and uh uh openmp have", "start": 7160.159, "duration": 7.04}, {"text": "options to kind of do this from within", "start": 7165.56, "duration": 7.88}, {"text": "the code uh so then um uh but sometimes", "start": 7167.199, "duration": 8.44}, {"text": "that's not an option right uh you could", "start": 7173.44, "duration": 4.799}, {"text": "end up uh with a code that you didn't", "start": 7175.639, "duration": 5.241}, {"text": "write uh it's a hybrid code but you need", "start": 7178.239, "duration": 5.48}, {"text": "it to be set up correctly so that's", "start": 7180.88, "duration": 5.319}, {"text": "where IB run and Affinity come in", "start": 7183.719, "duration": 5.641}, {"text": "basically so uh we've tried to make make", "start": 7186.199, "duration": 5.321}, {"text": "it easy so that all you have to do is IB", "start": 7189.36, "duration": 4.799}, {"text": "run and the executable or like you know", "start": 7191.52, "duration": 4.639}, {"text": "with affinity just IB run affinity and", "start": 7194.159, "duration": 4.721}, {"text": "give it some hints and", "start": 7196.159, "duration": 5.48}, {"text": "executeable right and the Affinity", "start": 7198.88, "duration": 4.6}, {"text": "options there are lots right basically", "start": 7201.639, "duration": 4.6}, {"text": "you can scatter that will scatter uh the", "start": 7203.48, "duration": 4.8}, {"text": "ranks across all numo domains in a", "start": 7206.239, "duration": 5.4}, {"text": "cyclical manner you can do scatter CCD", "start": 7208.28, "duration": 5.839}, {"text": "that will scatter the ranks across all", "start": 7211.639, "duration": 6.04}, {"text": "the CCD domains in a cyclical manner you", "start": 7214.119, "duration": 6.12}, {"text": "can do scatter CCX which will scatter", "start": 7217.679, "duration": 4.881}, {"text": "across all the CCX domains in a cyclical", "start": 7220.239, "duration": 5.561}, {"text": "manner so remember the namd situation", "start": 7222.56, "duration": 8.559}, {"text": "where are not the ND but the uh uh the", "start": 7225.8, "duration": 7.799}, {"text": "first open MPI example where I did 32", "start": 7231.119, "duration": 5.761}, {"text": "tasks and then map3 cache you could", "start": 7233.599, "duration": 5.441}, {"text": "achieve the same thing by doing IB run", "start": 7236.88, "duration": 4.16}, {"text": "and saying scatter", "start": 7239.04, "duration": 6.8}, {"text": "CCX uh so", "start": 7241.04, "duration": 7.079}, {"text": "um", "start": 7245.84, "duration": 3.96}, {"text": "uh", "start": 7248.119, "duration": 8.321}, {"text": "uh so that is uh uh let me go back here", "start": 7249.8, "duration": 10.879}, {"text": "okay so that would be the equivalent of", "start": 7256.44, "duration": 6.52}, {"text": "uh what we did there with the MPI option", "start": 7260.679, "duration": 5.121}, {"text": "here you could just do IB run Affinity", "start": 7262.96, "duration": 6.56}, {"text": "scatter CCX and then run with 32 tasks", "start": 7265.8, "duration": 6.2}, {"text": "and it will put those 32 tasks on", "start": 7269.52, "duration": 5.36}, {"text": "different CCX because you have 32 CCX on", "start": 7272.0, "duration": 7.599}, {"text": "a single node uh you can also scatter", "start": 7274.88, "duration": 7.759}, {"text": "with a block size so you can kind of", "start": 7279.599, "duration": 5.12}, {"text": "achieve the same thing if you want with", "start": 7282.639, "duration": 5.161}, {"text": "setting a different block size uh and", "start": 7284.719, "duration": 6.161}, {"text": "then it'll just go in sequence on the", "start": 7287.8, "duration": 5.72}, {"text": "toas uh so there's so many different", "start": 7290.88, "duration": 5.04}, {"text": "options", "start": 7293.52, "duration": 5.32}, {"text": "basically so in terms of uh trying to", "start": 7295.92, "duration": 5.12}, {"text": "make sense of this from uh from the", "start": 7298.84, "duration": 3.879}, {"text": "diagrams", "start": 7301.04, "duration": 5.48}, {"text": "uh uh what I did is", "start": 7302.719, "duration": 7.721}, {"text": "uh uh had the new num domain uh because", "start": 7306.52, "duration": 6.96}, {"text": "remember we have 16 uh cores in each", "start": 7310.44, "duration": 6.48}, {"text": "Numa domain right remember two ccds in", "start": 7313.48, "duration": 8.599}, {"text": "uh one uh numer domain so uh so you have", "start": 7316.92, "duration": 9.04}, {"text": "basically 16 cores in each uh numer", "start": 7322.079, "duration": 6.281}, {"text": "domain which share like two of the", "start": 7325.96, "duration": 3.92}, {"text": "memory", "start": 7328.36, "duration": 4.839}, {"text": "channels and then uh uh what we are", "start": 7329.88, "duration": 5.52}, {"text": "doing is saying that four of these are", "start": 7333.199, "duration": 5.48}, {"text": "in one CCX so that's that's how it's", "start": 7335.4, "duration": 7.799}, {"text": "laid out um and this is uh this is not a", "start": 7338.679, "duration": 7.081}, {"text": "physical representation this is more for", "start": 7343.199, "duration": 5.44}, {"text": "uh you to kind of uh figure out how", "start": 7345.76, "duration": 5.319}, {"text": "things are being laid laid out let me", "start": 7348.639, "duration": 5.56}, {"text": "see if I heard", "start": 7351.079, "duration": 3.12}, {"text": "something so there was a question about", "start": 7360.199, "duration": 5.241}, {"text": "like the length of uh access on the", "start": 7362.48, "duration": 4.52}, {"text": "accounts I have to actually check on", "start": 7365.44, "duration": 5.52}, {"text": "when that ends um", "start": 7367.0, "duration": 3.96}, {"text": "so", "start": 7371.639, "duration": 7.281}, {"text": "uh the example IB run options and uh uh", "start": 7373.96, "duration": 7.0}, {"text": "layouts that we are going in right now", "start": 7378.92, "duration": 4.199}, {"text": "we will try different things so first", "start": 7380.96, "duration": 4.759}, {"text": "thing I'm doing is uh two", "start": 7383.119, "duration": 6.161}, {"text": "nods uh saying CPUs per task is one so", "start": 7385.719, "duration": 7.0}, {"text": "it's a very serial uh not serial but uh", "start": 7389.28, "duration": 7.76}, {"text": "single threaded MPI task and then uh", "start": 7392.719, "duration": 7.36}, {"text": "number of task per not is four", "start": 7397.04, "duration": 4.88}, {"text": "so you have a total of eight tasks in", "start": 7400.079, "duration": 4.201}, {"text": "this case so basically I'm doing srun", "start": 7401.92, "duration": 4.64}, {"text": "right if I do srun it would have been", "start": 7404.28, "duration": 5.52}, {"text": "eight so here I'm just saying IB run and", "start": 7406.56, "duration": 5.4}, {"text": "this executable that's it giving it no", "start": 7409.8, "duration": 4.12}, {"text": "option so by default it's going to", "start": 7411.96, "duration": 4.88}, {"text": "scatter cyclically across all of them so", "start": 7413.92, "duration": 4.199}, {"text": "that's why you will", "start": 7416.84, "duration": 7.12}, {"text": "see um the first numer domain one task", "start": 7418.119, "duration": 7.56}, {"text": "and then goes to the next new domain", "start": 7423.96, "duration": 4.08}, {"text": "another task and so on so that's how", "start": 7425.679, "duration": 4.761}, {"text": "it'll do it over four nodes so that it's", "start": 7428.04, "duration": 6.679}, {"text": "kind of evenly spread out across the two", "start": 7430.44, "duration": 6.52}, {"text": "nodes this will basically give you the", "start": 7434.719, "duration": 5.241}, {"text": "maximum memory bandwidth for each task", "start": 7436.96, "duration": 4.8}, {"text": "right because each task is getting two", "start": 7439.96, "duration": 2.92}, {"text": "channels", "start": 7441.76, "duration": 2.959}, {"text": "here", "start": 7442.88, "duration": 4.319}, {"text": "uh and then", "start": 7444.719, "duration": 6.36}, {"text": "uh say you have six tars for node and", "start": 7447.199, "duration": 7.04}, {"text": "you say scatter in block three so then", "start": 7451.079, "duration": 6.401}, {"text": "it's doing this per Numa domain but it's", "start": 7454.239, "duration": 5.721}, {"text": "scattering with three Tas on each block", "start": 7457.48, "duration": 5.56}, {"text": "right so then it'll do T1 2 2 3 T3 on", "start": 7459.96, "duration": 4.4}, {"text": "the First new", "start": 7463.04, "duration": 5.24}, {"text": "domain uh uh T4 T5 T6 in the second and", "start": 7464.36, "duration": 7.08}, {"text": "so on so so then it's kind of laid out", "start": 7468.28, "duration": 5.359}, {"text": "that", "start": 7471.44, "duration": 2.199}, {"text": "way uh the uh third uh option I'm", "start": 7474.04, "duration": 9.0}, {"text": "showing you is", "start": 7481.199, "duration": 6.761}, {"text": "basically uh CPUs per task is two and", "start": 7483.04, "duration": 7.92}, {"text": "end task per node is six so now you have", "start": 7487.96, "duration": 5.8}, {"text": "threads uh you're doing six tasks and", "start": 7490.96, "duration": 4.92}, {"text": "then you do a scatter with the block of", "start": 7493.76, "duration": 5.439}, {"text": "three then what's happening is now it", "start": 7495.88, "duration": 8.239}, {"text": "puts two of the threads on the same uh", "start": 7499.199, "duration": 10.121}, {"text": "CCX uh and uh basically Cycles through", "start": 7504.119, "duration": 10.721}, {"text": "again uh so now you have uh T1 T2 33 are", "start": 7509.32, "duration": 8.359}, {"text": "three different CC AES", "start": 7514.84, "duration": 5.839}, {"text": "right", "start": 7517.679, "duration": 3.0}, {"text": "uh and and and so so on so uh so there's", "start": 7522.599, "duration": 8.48}, {"text": "that uh and then uh you could do a", "start": 7527.159, "duration": 7.801}, {"text": "scatter at a CCD level uh with a block", "start": 7531.079, "duration": 5.881}, {"text": "of two then it'll put two tasks on each", "start": 7534.96, "duration": 6.279}, {"text": "CCD and go on right so so you have a lot", "start": 7536.96, "duration": 6.159}, {"text": "of control on how the tasks are being", "start": 7541.239, "duration": 3.681}, {"text": "laid out", "start": 7543.119, "duration": 5.161}, {"text": "basically and if you do a scatter CCX", "start": 7544.92, "duration": 5.639}, {"text": "then it'll put one task in each", "start": 7548.28, "duration": 9.279}, {"text": "CCX and uh cycle over the uh num", "start": 7550.559, "duration": 7.0}, {"text": "domains so now uh what we are doing here", "start": 7560.0, "duration": 9.599}, {"text": "is uh uh doing one node uh and N task", "start": 7563.679, "duration": 10.321}, {"text": "per node is 32 and CPUs per task is four", "start": 7569.599, "duration": 7.761}, {"text": "so if you notice here basically it's so", "start": 7574.0, "duration": 5.159}, {"text": "it's this is a", "start": 7577.36, "duration": 5.56}, {"text": "linac Ron uh which uh which is used", "start": 7579.159, "duration": 6.201}, {"text": "basically to Benchmark the systems", "start": 7582.92, "duration": 4.88}, {"text": "usually this is a number that's used to", "start": 7585.36, "duration": 5.319}, {"text": "calculate the top 500 ranking of a", "start": 7587.8, "duration": 6.48}, {"text": "machine uh so I'm doing ibr run affini", "start": 7590.679, "duration": 6.641}, {"text": "scatter CCX and xhl which is the", "start": 7594.28, "duration": 6.68}, {"text": "executable name uh a variable that has", "start": 7597.32, "duration": 7.239}, {"text": "executable name so I just said scatter", "start": 7600.96, "duration": 8.36}, {"text": "CCX and uh basically now it's put one", "start": 7604.559, "duration": 8.761}, {"text": "MPI task on each uh CCX and then the", "start": 7609.32, "duration": 7.239}, {"text": "threads uh are on four threads on each", "start": 7613.32, "duration": 6.68}, {"text": "CCX so you can see that the master task", "start": 7616.559, "duration": 6.12}, {"text": "is kind of 100% And then the threads are", "start": 7620.0, "duration": 5.04}, {"text": "basically little bit below because I", "start": 7622.679, "duration": 4.0}, {"text": "caught it at a time when it was not", "start": 7625.04, "duration": 5.119}, {"text": "fully utilizing all the thread", "start": 7626.679, "duration": 6.161}, {"text": "uh but you can kind of see the lay out", "start": 7630.159, "duration": 7.681}, {"text": "now right and all 128 cores are busy uh", "start": 7632.84, "duration": 7.44}, {"text": "and they're done correctly now if you", "start": 7637.84, "duration": 6.64}, {"text": "had not used Affinity or scatter CCX and", "start": 7640.28, "duration": 7.359}, {"text": "then said uh say you if you just said n", "start": 7644.48, "duration": 5.4}, {"text": "task for node is 32 and didn't do this", "start": 7647.639, "duration": 6.641}, {"text": "CPU per task what you would end up is is", "start": 7649.88, "duration": 9.88}, {"text": "uh this uh uh task here would end up", "start": 7654.28, "duration": 8.0}, {"text": "with all four threads on it so you would", "start": 7659.76, "duration": 5.799}, {"text": "see this in red like one one would be in", "start": 7662.28, "duration": 7.2}, {"text": "red five would be in red and so on uh uh", "start": 7665.559, "duration": 6.761}, {"text": "um so uh you would basically end up over", "start": 7669.48, "duration": 4.28}, {"text": "subscribing that core and your", "start": 7672.32, "duration": 4.16}, {"text": "performance will be pretty bad so you", "start": 7673.76, "duration": 4.839}, {"text": "might not see the Improvement due to", "start": 7676.48, "duration": 4.04}, {"text": "threads because not might not you will", "start": 7678.599, "duration": 3.321}, {"text": "not see the Improvement due to the", "start": 7680.52, "duration": 3.039}, {"text": "threads because the threads got pinned", "start": 7681.92, "duration": 4.319}, {"text": "to the wrong course so it's quite", "start": 7683.559, "duration": 5.281}, {"text": "important to lay it out", "start": 7686.239, "duration": 5.601}, {"text": "correctly so again this uh is a", "start": 7688.84, "duration": 5.2}, {"text": "different way of looking at it", "start": 7691.84, "duration": 8.44}, {"text": "basically uh what I'm uh doing is uh", "start": 7694.04, "duration": 10.76}, {"text": "uh uh uh looking at the processes and uh", "start": 7700.28, "duration": 7.76}, {"text": "also looking at the threads uh with", "start": 7704.8, "duration": 6.359}, {"text": "associated with that so you can see that", "start": 7708.04, "duration": 6.96}, {"text": "the task I ID uh the process task ID is", "start": 7711.159, "duration": 5.841}, {"text": "the same for all of these threads right", "start": 7715.0, "duration": 4.04}, {"text": "it's because that's uh these are all", "start": 7717.0, "duration": 5.119}, {"text": "spawned from this master process", "start": 7719.04, "duration": 5.96}, {"text": "82667 and then there they threads right", "start": 7722.119, "duration": 5.801}, {"text": "so the four threads 0 1 2 three you can", "start": 7725.0, "duration": 4.239}, {"text": "see", "start": 7727.92, "duration": 2.88}, {"text": "uh", "start": 7729.239, "duration": 5.801}, {"text": "there uh with basically uh associated", "start": 7730.8, "duration": 6.08}, {"text": "with one task and then the next task is", "start": 7735.04, "duration": 2.96}, {"text": "82", "start": 7736.88, "duration": 4.04}, {"text": "668 uh these are not in sequence this is", "start": 7738.0, "duration": 5.04}, {"text": "gone off into", "start": 7740.92, "duration": 6.36}, {"text": "uh uh the 40s in terms of the core", "start": 7743.04, "duration": 6.96}, {"text": "IDs but you can basically see that we", "start": 7747.28, "duration": 4.16}, {"text": "are not over subscribing we are", "start": 7750.0, "duration": 4.48}, {"text": "basically laying out", "start": 7751.44, "duration": 3.04}, {"text": "correctly so um", "start": 7755.239, "duration": 7.681}, {"text": "uh to basically summarize uh what's uh", "start": 7759.239, "duration": 5.96}, {"text": "uh there on expands in terms of binding", "start": 7762.92, "duration": 4.92}, {"text": "options so since the AMD processor on", "start": 7765.199, "duration": 4.52}, {"text": "expans is laid out so that you have four", "start": 7767.84, "duration": 4.12}, {"text": "numer domains with 16 cores", "start": 7769.719, "duration": 5.44}, {"text": "each uh and with eight core complex dies", "start": 7771.96, "duration": 5.48}, {"text": "per processor with two core complexes", "start": 7775.159, "duration": 5.321}, {"text": "per CCV so the four cores in the CCX", "start": 7777.44, "duration": 5.36}, {"text": "Shar the L3 cache so that's you keep", "start": 7780.48, "duration": 3.96}, {"text": "that in mind when you're laying things", "start": 7782.8, "duration": 5.6}, {"text": "out for the hybrid open MP and MPI or", "start": 7784.44, "duration": 6.36}, {"text": "even MPI and P threads codes it's", "start": 7788.4, "duration": 4.96}, {"text": "important to lay out the task correctly", "start": 7790.8, "duration": 4.6}, {"text": "so The Binding is really important in", "start": 7793.36, "duration": 4.4}, {"text": "such cases", "start": 7795.4, "duration": 6.44}, {"text": "um so uh remember uh not to over", "start": 7797.76, "duration": 6.839}, {"text": "subscribe basically uh there are lots of", "start": 7801.84, "duration": 4.6}, {"text": "things to keep in mind with in terms of", "start": 7804.599, "duration": 3.841}, {"text": "over subscription one is The Binding but", "start": 7806.44, "duration": 5.08}, {"text": "there's also like when you launch the", "start": 7808.44, "duration": 6.32}, {"text": "tasks uh make sure you're setting the", "start": 7811.52, "duration": 5.0}, {"text": "CPUs per Tas", "start": 7814.76, "duration": 4.439}, {"text": "correctly because otherwise if an MPI", "start": 7816.52, "duration": 5.679}, {"text": "task gets bound to a core and it doesn't", "start": 7819.199, "duration": 6.04}, {"text": "know that there are uh threads with", "start": 7822.199, "duration": 4.601}, {"text": "Associated it's going to bind all the", "start": 7825.239, "duration": 4.4}, {"text": "threads to the same", "start": 7826.8, "duration": 2.839}, {"text": "core uh I want to kind of end with uh a", "start": 7830.4, "duration": 6.96}, {"text": "bunch of references uh from liore like I", "start": 7834.48, "duration": 4.52}, {"text": "said these tutorials are way more", "start": 7837.36, "duration": 4.6}, {"text": "detailed than what we have uh just", "start": 7839.0, "duration": 5.36}, {"text": "because we from the time constraint", "start": 7841.96, "duration": 4.679}, {"text": "perspective I didn't go into all the", "start": 7844.36, "duration": 5.719}, {"text": "details uh there's MPI for python if", "start": 7846.639, "duration": 7.161}, {"text": "you're uh interested in that MPI for pi", "start": 7850.079, "duration": 8.961}, {"text": "and like I said in my uh uh uh code", "start": 7853.8, "duration": 8.68}, {"text": "forting talk uh when you do MPI for pi", "start": 7859.04, "duration": 7.8}, {"text": "you you have to be careful to uh uh", "start": 7862.48, "duration": 6.96}, {"text": "build the MPI for pi with uh with the", "start": 7866.84, "duration": 5.799}, {"text": "MPI that you're going to use uh on", "start": 7869.44, "duration": 6.44}, {"text": "expans because uh if you do a cond", "start": 7872.639, "duration": 5.6}, {"text": "install uh it's going to pull in its own", "start": 7875.88, "duration": 4.56}, {"text": "on MPI which won't be using the high", "start": 7878.239, "duration": 4.44}, {"text": "performance Network and then there are", "start": 7880.44, "duration": 7.56}, {"text": "user guides for uh um uh open MPI and", "start": 7882.679, "duration": 8.841}, {"text": "mvap to uh I just want to show you", "start": 7888.0, "duration": 6.84}, {"text": "something because uh this can get very", "start": 7891.52, "duration": 7.639}, {"text": "detailed that's uh the user guides so so", "start": 7894.84, "duration": 6.719}, {"text": "if you click on the full user guide for", "start": 7899.159, "duration": 5.881}, {"text": "uh Mage for example uh you'll see we", "start": 7901.559, "duration": 5.921}, {"text": "just crash the surface in terms of what", "start": 7905.04, "duration": 4.36}, {"text": "options are there", "start": 7907.48, "duration": 6.48}, {"text": "uh you can you can kind of see uh uh", "start": 7909.4, "duration": 7.0}, {"text": "there's the whole layout information and", "start": 7913.96, "duration": 4.599}, {"text": "stuff they have some feature", "start": 7916.4, "duration": 4.4}, {"text": "information uh but then if you scroll", "start": 7918.559, "duration": 6.321}, {"text": "down you'll see uh um this is the build", "start": 7920.8, "duration": 5.48}, {"text": "information that you don't have to worry", "start": 7924.88, "duration": 3.359}, {"text": "about because we did the build but then", "start": 7926.28, "duration": 5.52}, {"text": "you then starts all the uh layout kind", "start": 7928.239, "duration": 8.84}, {"text": "of options that Mage itself has right", "start": 7931.8, "duration": 7.24}, {"text": "um", "start": 7937.079, "duration": 4.841}, {"text": "uh let me go scroll a bit so yeah so", "start": 7939.04, "duration": 5.519}, {"text": "yeah you can start here basically it has", "start": 7941.92, "duration": 5.36}, {"text": "uh binding policy things that it can do", "start": 7944.559, "duration": 7.281}, {"text": "to kind of again lay out um within MP", "start": 7947.28, "duration": 6.64}, {"text": "see remember I I showed you IB run which", "start": 7951.84, "duration": 4.719}, {"text": "is doing it from from a system level", "start": 7953.92, "duration": 5.199}, {"text": "like in terms of we find the info from", "start": 7956.559, "duration": 4.241}, {"text": "slum and do it but you can do it from", "start": 7959.119, "duration": 4.48}, {"text": "MPI too so that's what I wanted to kind", "start": 7960.8, "duration": 5.08}, {"text": "of show here", "start": 7963.599, "duration": 4.881}, {"text": "uh so there's all these play replacement", "start": 7965.88, "duration": 4.679}, {"text": "options and CPU binding policies that", "start": 7968.48, "duration": 4.56}, {"text": "you can do and and it does make a", "start": 7970.559, "duration": 5.481}, {"text": "difference in terms of uh uh how you", "start": 7973.04, "duration": 6.679}, {"text": "bind you can and they have some uh uh", "start": 7976.04, "duration": 6.84}, {"text": "performance impact uh of basically", "start": 7979.719, "duration": 6.84}, {"text": "latency and uh and so", "start": 7982.88, "duration": 9.44}, {"text": "on they also mention uh uh limic which", "start": 7986.559, "duration": 10.241}, {"text": "is which is built uh into mvap 2 and", "start": 7992.32, "duration": 7.56}, {"text": "they also mention some other things uh", "start": 7996.8, "duration": 5.24}, {"text": "called xpm and everything so those are", "start": 7999.88, "duration": 4.279}, {"text": "kind of built in that you you don't have", "start": 8002.04, "duration": 5.559}, {"text": "to think about but uh what I want to uh", "start": 8004.159, "duration": 6.361}, {"text": "show is that there are other things uh", "start": 8007.599, "duration": 5.321}, {"text": "that uh involve like how you use the", "start": 8010.52, "duration": 5.52}, {"text": "network that they didn't go into but", "start": 8012.92, "duration": 6.679}, {"text": "they actually have uh options to kind of", "start": 8016.04, "duration": 5.159}, {"text": "set the", "start": 8019.599, "duration": 4.201}, {"text": "thresholds so let me scroll down and", "start": 8021.199, "duration": 7.36}, {"text": "maybe show you some examples of that uh", "start": 8023.8, "duration": 7.04}, {"text": "let's", "start": 8028.559, "duration": 2.281}, {"text": "see yeah so you can see like in in the", "start": 8034.559, "duration": 6.0}, {"text": "shared memory tuning there are uh uh", "start": 8037.199, "duration": 8.04}, {"text": "there are thresholds uh uh like uh then", "start": 8040.559, "duration": 9.281}, {"text": "there are uh uh thresholds on on the", "start": 8045.239, "duration": 7.241}, {"text": "collectives uh on the message sizes and", "start": 8049.84, "duration": 5.0}, {"text": "everything let me go on a little bit", "start": 8052.48, "duration": 4.4}, {"text": "further I'm looking for a particular", "start": 8054.84, "duration": 5.04}, {"text": "example", "start": 8056.88, "duration": 3.0}, {"text": "there's also debug info that you can", "start": 8062.159, "duration": 5.48}, {"text": "print out in this checkpoint Flags so", "start": 8063.92, "duration": 6.239}, {"text": "you can see the CPU mapping flag Flags", "start": 8067.639, "duration": 5.161}, {"text": "the CPU binding Flags uh there's the", "start": 8070.159, "duration": 5.121}, {"text": "hybrid binding Flags so this is for the", "start": 8072.8, "duration": 4.359}, {"text": "MPI plus", "start": 8075.28, "duration": 4.959}, {"text": "threads uh so whatever we did with IB", "start": 8077.159, "duration": 6.201}, {"text": "run you can also do it with MPI run MPI", "start": 8080.239, "duration": 7.0}, {"text": "uh mvap options basically there's this", "start": 8083.36, "duration": 6.52}, {"text": "enable f", "start": 8087.239, "duration": 2.641}, {"text": "option but then you get into all these", "start": 8090.04, "duration": 7.28}, {"text": "uh uh uh options that are for the", "start": 8093.559, "duration": 6.321}, {"text": "network and uh everything so like the", "start": 8097.32, "duration": 5.919}, {"text": "number of ports and uh if they're", "start": 8099.88, "duration": 5.52}, {"text": "multi-rail like uh how how do you want", "start": 8103.239, "duration": 5.081}, {"text": "to share the two rails uh then there are", "start": 8105.4, "duration": 4.679}, {"text": "thresholds for these", "start": 8108.32, "duration": 6.44}, {"text": "sharings uh and then uh then as you go", "start": 8110.079, "duration": 8.56}, {"text": "uh further out you'll see there's uh uh", "start": 8114.76, "duration": 7.68}, {"text": "thresholds on the uh IB side like uh", "start": 8118.639, "duration": 6.761}, {"text": "which protocol you want to use and then", "start": 8122.44, "duration": 5.199}, {"text": "you will also see that there'll be some", "start": 8125.4, "duration": 5.96}, {"text": "uh shared memory uh options on what you", "start": 8127.639, "duration": 7.801}, {"text": "want to do so you can see lots of", "start": 8131.36, "duration": 6.879}, {"text": "details so once you start figuring out", "start": 8135.44, "duration": 6.159}, {"text": "like uh from the profiling like where", "start": 8138.239, "duration": 7.081}, {"text": "your message sizes range from and like", "start": 8141.599, "duration": 6.841}, {"text": "uh kind of where they fall you might", "start": 8145.32, "duration": 4.879}, {"text": "want to go back and look at the MPI and", "start": 8148.44, "duration": 4.199}, {"text": "see hey like at this message size is it", "start": 8150.199, "duration": 4.761}, {"text": "better if I change some of the flags", "start": 8152.639, "duration": 6.681}, {"text": "because sometimes what happens is uh not", "start": 8154.96, "duration": 8.8}, {"text": "some sometimes Mage and open MPI both uh", "start": 8159.32, "duration": 6.239}, {"text": "like when you do collectives or when you", "start": 8163.76, "duration": 4.76}, {"text": "do pointto point there are different Al", "start": 8165.559, "duration": 4.441}, {"text": "especially with collectives there are", "start": 8168.52, "duration": 3.96}, {"text": "very different algorithms depending on", "start": 8170.0, "duration": 3.76}, {"text": "the size of the", "start": 8172.48, "duration": 6.679}, {"text": "message uh because uh uh you can uh you", "start": 8173.76, "duration": 8.319}, {"text": "can do some things faster if uh if if", "start": 8179.159, "duration": 5.44}, {"text": "the message sizes are small uh because", "start": 8182.079, "duration": 4.48}, {"text": "you can use the network", "start": 8184.599, "duration": 4.241}, {"text": "differently so there are thresholds", "start": 8186.559, "duration": 5.641}, {"text": "where these changes uh within the MPI", "start": 8188.84, "duration": 5.839}, {"text": "and these are preset uh tuned for", "start": 8192.2, "duration": 5.119}, {"text": "particular machines like so on expanse", "start": 8194.679, "duration": 4.601}, {"text": "the mvapich to install already kind of", "start": 8197.319, "duration": 4.601}, {"text": "is aware that this is an AMD processor", "start": 8199.28, "duration": 6.359}, {"text": "and it has its uh tuning setup for that", "start": 8201.92, "duration": 6.519}, {"text": "but that is set up for a very generic uh", "start": 8205.639, "duration": 6.0}, {"text": "case right your particular application", "start": 8208.439, "duration": 7.801}, {"text": "uh might have a different uh uh profile", "start": 8211.639, "duration": 6.561}, {"text": "in terms of the sizes of the messages", "start": 8216.24, "duration": 4.92}, {"text": "you're sending or whatever and in that", "start": 8218.2, "duration": 4.8}, {"text": "case you might want to go and find out", "start": 8221.16, "duration": 3.519}, {"text": "hey I might be right on the threshold", "start": 8223.0, "duration": 3.599}, {"text": "and sometimes one algorithm does better", "start": 8224.679, "duration": 3.521}, {"text": "than something else and you you can", "start": 8226.599, "duration": 2.401}, {"text": "switch", "start": 8228.2, "duration": 3.96}, {"text": "it uh and then even all R use for", "start": 8229.0, "duration": 5.359}, {"text": "example there are different algorithms", "start": 8232.16, "duration": 4.559}, {"text": "of doing all R use you can do all R use", "start": 8234.359, "duration": 4.04}, {"text": "in different ways", "start": 8236.719, "duration": 4.161}, {"text": "and again those can be changed with", "start": 8238.399, "duration": 5.12}, {"text": "flags and uh you'll have to play around", "start": 8240.88, "duration": 5.439}, {"text": "to see which one works better for you so", "start": 8243.519, "duration": 5.321}, {"text": "lots of different options", "start": 8246.319, "duration": 6.0}, {"text": "basically uh so keep that in mind and", "start": 8248.84, "duration": 5.679}, {"text": "the other one other thing I I don't know", "start": 8252.319, "duration": 4.2}, {"text": "if I have an example let", "start": 8254.519, "duration": 3.601}, {"text": "me", "start": 8256.519, "duration": 7.241}, {"text": "uh I was reminded of it because uh", "start": 8258.12, "duration": 8.239}, {"text": "um we had", "start": 8263.76, "duration": 5.839}, {"text": "the uh", "start": 8266.359, "duration": 3.24}, {"text": "threaded example in uh in in Mage but", "start": 8270.16, "duration": 8.199}, {"text": "let me see if I can find so find one in", "start": 8274.679, "duration": 6.84}, {"text": "my own account that", "start": 8278.359, "duration": 6.681}, {"text": "shows how to do this for p threads so", "start": 8281.519, "duration": 5.321}, {"text": "today we didn't talk about P threads at", "start": 8285.04, "duration": 4.96}, {"text": "all we were talking about MPI and open", "start": 8286.84, "duration": 6.479}, {"text": "MP but uh some codes do threading using", "start": 8290.0, "duration": 7.76}, {"text": "p threads and the problem with that is", "start": 8293.319, "duration": 7.881}, {"text": "uh with open MP there are like explicit", "start": 8297.76, "duration": 6.04}, {"text": "Flags you can use to kind of set", "start": 8301.2, "duration": 5.359}, {"text": "environment variables to bind things but", "start": 8303.8, "duration": 4.4}, {"text": "with P threads there's nothing like that", "start": 8306.559, "duration": 3.561}, {"text": "you either have to bind them uh", "start": 8308.2, "duration": 5.72}, {"text": "internally in your code being aware of", "start": 8310.12, "duration": 7.16}, {"text": "what's going on or uh you will have to", "start": 8313.92, "duration": 5.479}, {"text": "bind the threads after they're", "start": 8317.28, "duration": 5.439}, {"text": "launched uh and this can cause a lot of", "start": 8319.399, "duration": 5.761}, {"text": "performance issues if they're not bound", "start": 8322.719, "duration": 5.92}, {"text": "and uh one code one such code is raxl", "start": 8325.16, "duration": 4.88}, {"text": "and I'm I'm actually looking for an", "start": 8328.639, "duration": 2.68}, {"text": "example of", "start": 8330.04, "duration": 5.399}, {"text": "that and so that I can show", "start": 8331.319, "duration": 4.12}, {"text": "you", "start": 8356.439, "duration": 3.0}, {"text": "so I'm trying to figure out if I", "start": 8383.439, "duration": 5.04}, {"text": "can uh show you an easy example", "start": 8385.679, "duration": 5.72}, {"text": "otherwise I'm going to probably go", "start": 8388.479, "duration": 5.92}, {"text": "and", "start": 8391.399, "duration": 3.0}, {"text": "uh show you the script itself we have a", "start": 8399.28, "duration": 5.64}, {"text": "script to kind of De deal with the", "start": 8402.359, "duration": 5.561}, {"text": "Affinity", "start": 8404.92, "duration": 3.0}, {"text": "uh", "start": 8416.359, "duration": 3.0}, {"text": "apologize I should have actually gotten", "start": 8436.52, "duration": 5.04}, {"text": "this set up first okay let me just show", "start": 8438.96, "duration": 6.88}, {"text": "you the script I don't that might", "start": 8441.56, "duration": 8.0}, {"text": "uh so B basically we have this uh script", "start": 8445.84, "duration": 8.08}, {"text": "called slum uh Affinity uh", "start": 8449.56, "duration": 7.64}, {"text": "prod uh that again Manu wrote basically", "start": 8453.92, "duration": 6.84}, {"text": "what it does is uh it binds the pr", "start": 8457.2, "duration": 6.32}, {"text": "threads within an MPI task to the course", "start": 8460.76, "duration": 7.08}, {"text": "uh that are given to you so uh so what", "start": 8463.52, "duration": 5.919}, {"text": "what you have to do is basically launch", "start": 8467.84, "duration": 5.08}, {"text": "your MPI job with the p threads uh let", "start": 8469.439, "duration": 6.401}, {"text": "the P threads go wherever they go and", "start": 8472.92, "duration": 4.92}, {"text": "then after like a", "start": 8475.84, "duration": 4.72}, {"text": "uh so in the in the script you can", "start": 8477.84, "duration": 6.0}, {"text": "basically wait a few seconds and then uh", "start": 8480.56, "duration": 6.799}, {"text": "do this Affinity that basically tells uh", "start": 8483.84, "duration": 7.639}, {"text": "takes the uh name of the script uh uh", "start": 8487.359, "duration": 7.0}, {"text": "name of your executable to go find the", "start": 8491.479, "duration": 5.96}, {"text": "threads and then does the right Affinity", "start": 8494.359, "duration": 6.481}, {"text": "uh based on what uh so you have the name", "start": 8497.439, "duration": 6.241}, {"text": "of the binary the number of MPI tasks", "start": 8500.84, "duration": 6.639}, {"text": "and number of threads right and then uh", "start": 8503.68, "duration": 7.16}, {"text": "it's finding the number of uh task based", "start": 8507.479, "duration": 6.041}, {"text": "on the slum task per node and then the", "start": 8510.84, "duration": 4.72}, {"text": "number of threads using the CPUs Spell", "start": 8513.52, "duration": 3.64}, {"text": "task so all you have to give it is the", "start": 8515.56, "duration": 4.24}, {"text": "name and then it will say oh yeah this", "start": 8517.16, "duration": 5.0}, {"text": "code is supposed to have you know four", "start": 8519.8, "duration": 5.84}, {"text": "MPI tasks and five threads each now when", "start": 8522.16, "duration": 5.08}, {"text": "the job launches it's going to throw", "start": 8525.64, "duration": 3.24}, {"text": "those five threads all over the place", "start": 8527.24, "duration": 4.119}, {"text": "and uh and sometimes what happens is two", "start": 8528.88, "duration": 4.12}, {"text": "of the threads end up on the same core", "start": 8531.359, "duration": 3.321}, {"text": "and then you get really poor", "start": 8533.0, "duration": 3.76}, {"text": "performance uh that's essentially how we", "start": 8534.68, "duration": 4.32}, {"text": "found that okay we have to go write", "start": 8536.76, "duration": 4.96}, {"text": "something to change this so This", "start": 8539.0, "duration": 5.84}, {"text": "Affinity script will basically go and uh", "start": 8541.72, "duration": 7.28}, {"text": "re align the P threads uh to the right", "start": 8544.84, "duration": 8.44}, {"text": "course uh you so so that's one one more", "start": 8549.0, "duration": 6.0}, {"text": "thing to keep in mind and that's I think", "start": 8553.28, "duration": 3.84}, {"text": "that's what I mentioned here the slum F", "start": 8555.0, "duration": 4.8}, {"text": "Affinity prod script I was hoping I", "start": 8557.12, "duration": 5.319}, {"text": "could show you uh in the script you know", "start": 8559.8, "duration": 6.24}, {"text": "axml script itself but uh but anyway", "start": 8562.439, "duration": 6.401}, {"text": "it's uh it's another Affinity thing that", "start": 8566.04, "duration": 6.279}, {"text": "you have to keep in mind so uh I think", "start": 8568.84, "duration": 5.599}, {"text": "that pretty much ends what I wanted to", "start": 8572.319, "duration": 5.241}, {"text": "talk about today uh the main thing to", "start": 8574.439, "duration": 6.761}, {"text": "keep in mind is that uh uh with open MP", "start": 8577.56, "duration": 6.44}, {"text": "everything is shared memory uh you have", "start": 8581.2, "duration": 8.64}, {"text": "to uh you can bind task uh uh uh uh", "start": 8584.0, "duration": 7.479}, {"text": "using the proc bind", "start": 8589.84, "duration": 4.599}, {"text": "option uh and you can uh there are", "start": 8591.479, "duration": 6.601}, {"text": "Affinity Flags in uh open MP to like", "start": 8594.439, "duration": 6.081}, {"text": "where you can uh lay out the threads the", "start": 8598.08, "duration": 6.76}, {"text": "way you want uh with MPI again uh the", "start": 8600.52, "duration": 8.64}, {"text": "task can be bound uh uh to the cores", "start": 8604.84, "duration": 6.12}, {"text": "just just make sure that if you're doing", "start": 8609.16, "duration": 5.6}, {"text": "an MPI open MP hybrid uh uh you don't", "start": 8610.96, "duration": 6.359}, {"text": "bind all the threads to the same task", "start": 8614.76, "duration": 4.559}, {"text": "that the same core that the NPI task is", "start": 8617.319, "duration": 6.96}, {"text": "using so you have to make a uh make uh", "start": 8619.319, "duration": 6.96}, {"text": "uh your setup aware that basically", "start": 8624.279, "duration": 4.481}, {"text": "either use IB run to lay it out", "start": 8626.279, "duration": 5.921}, {"text": "correctly or if you're using the MPI way", "start": 8628.76, "duration": 6.639}, {"text": "uh use the MPI flags that let you do it", "start": 8632.2, "duration": 7.079}, {"text": "so we saw the flags for uh open MPI and", "start": 8635.399, "duration": 6.561}, {"text": "also for mage so you can go set", "start": 8639.279, "duration": 6.12}, {"text": "those uh and then if you have a combined", "start": 8641.96, "duration": 5.56}, {"text": "mpip threads code use this Affinity", "start": 8645.399, "duration": 5.441}, {"text": "script I think that uh that's good to", "start": 8647.52, "duration": 6.0}, {"text": "remember I think I'll stop at this point", "start": 8650.84, "duration": 4.92}, {"text": "and", "start": 8653.52, "duration": 2.24}]