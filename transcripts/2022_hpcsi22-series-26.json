[{"text": "scaling up your analysis from laptop to", "start": 0.199, "duration": 5.201}, {"text": "HPC and the idea is that you have some", "start": 2.8, "duration": 5.2}, {"text": "data analysis running on your on your", "start": 5.4, "duration": 4.36}, {"text": "laptop or desktop and now you want to", "start": 8.0, "duration": 5.2}, {"text": "move that over to to expanse or another", "start": 9.76, "duration": 7.8}, {"text": "HPC system how would you do that so here", "start": 13.2, "duration": 6.76}, {"text": "is the outline so first we talk about", "start": 17.56, "duration": 4.0}, {"text": "you know when it's and is it actually", "start": 19.96, "duration": 4.52}, {"text": "Worth to run on expanse and and then the", "start": 21.56, "duration": 4.559}, {"text": "most important one is you know how do", "start": 24.48, "duration": 4.08}, {"text": "you set up a portable and reproducible", "start": 26.119, "duration": 4.121}, {"text": "software environment that you can move", "start": 28.56, "duration": 4.159}, {"text": "from your laptop to expanse or vice", "start": 30.24, "duration": 4.999}, {"text": "versa give you some more tips about", "start": 32.719, "duration": 5.401}, {"text": "running jupter lab on expanse and then", "start": 35.239, "duration": 4.64}, {"text": "we're getting into the meat of it we're", "start": 38.12, "duration": 3.64}, {"text": "talking about how to scale up your", "start": 39.879, "duration": 5.281}, {"text": "calculation using multiple CPUs or or", "start": 41.76, "duration": 6.36}, {"text": "gpus and the example we are using is is", "start": 45.16, "duration": 5.32}, {"text": "a python based example using python", "start": 48.12, "duration": 5.56}, {"text": "based data frames and and then we ask", "start": 50.48, "duration": 5.84}, {"text": "the question to then we measure parallel", "start": 53.68, "duration": 4.24}, {"text": "efficiency to see how well we're", "start": 56.32, "duration": 4.039}, {"text": "actually using multiple cores and then", "start": 57.92, "duration": 4.279}, {"text": "finally I mention a little more about", "start": 60.359, "duration": 5.44}, {"text": "how you can get an expanse account", "start": 62.199, "duration": 6.201}, {"text": "yourself okay so when do you want to run", "start": 65.799, "duration": 4.96}, {"text": "things on expans so first of all your", "start": 68.4, "duration": 4.079}, {"text": "laptop or desktop is the best", "start": 70.759, "duration": 3.961}, {"text": "environment to do any coding to write", "start": 72.479, "duration": 4.481}, {"text": "your own code good in for the", "start": 74.72, "duration": 4.719}, {"text": "exploratory phase of a project if you", "start": 76.96, "duration": 4.6}, {"text": "have small data sets and you can run on", "start": 79.439, "duration": 5.121}, {"text": "a single or few course but then", "start": 81.56, "duration": 4.96}, {"text": "eventually you run out of resources and", "start": 84.56, "duration": 3.76}, {"text": "then you want to go to expans if you", "start": 86.52, "duration": 4.8}, {"text": "have large data sets many data sets long", "start": 88.32, "duration": 5.079}, {"text": "run times and then you can take", "start": 91.32, "duration": 6.0}, {"text": "advantage of multiple course or or", "start": 93.399, "duration": 7.321}, {"text": "gpus um basically you know use your", "start": 97.32, "duration": 5.68}, {"text": "laptop if you know if your data fit into", "start": 100.72, "duration": 4.2}, {"text": "memory and the computer time is", "start": 103.0, "duration": 3.439}, {"text": "sufficient then there's no reason to", "start": 104.92, "duration": 3.879}, {"text": "move to expanse but you know if your", "start": 106.439, "duration": 4.521}, {"text": "calculations take too long or you need", "start": 108.799, "duration": 4.6}, {"text": "more memory or both then it's a good", "start": 110.96, "duration": 4.519}, {"text": "time to move to", "start": 113.399, "duration": 4.64}, {"text": "expans so the first thing is you know if", "start": 115.479, "duration": 4.361}, {"text": "you have software running on on your", "start": 118.039, "duration": 3.921}, {"text": "your laptop or desktop how do you move", "start": 119.84, "duration": 4.52}, {"text": "that over to HPC and I mean with moving", "start": 121.96, "duration": 4.759}, {"text": "over meaning using the same exact", "start": 124.36, "duration": 5.599}, {"text": "environment and moving it over to um to", "start": 126.719, "duration": 5.88}, {"text": "HBC and why is that important as as you", "start": 129.959, "duration": 4.081}, {"text": "know it's it's very difficult to", "start": 132.599, "duration": 3.961}, {"text": "reproduce anybody's work that is for", "start": 134.04, "duration": 5.52}, {"text": "experiments but it also applies to code", "start": 136.56, "duration": 4.64}, {"text": "unfortunately you would think that code", "start": 139.56, "duration": 3.36}, {"text": "would give the same results in any", "start": 141.2, "duration": 5.64}, {"text": "environment unfortunately it does not um", "start": 142.92, "duration": 5.959}, {"text": "so here are some definitions I won't go", "start": 146.84, "duration": 3.52}, {"text": "into this about", "start": 148.879, "duration": 3.201}, {"text": "reproducibility basically getting", "start": 150.36, "duration": 3.92}, {"text": "consistent results no matter how you do", "start": 152.08, "duration": 5.72}, {"text": "it reusability basically using your Cod", "start": 154.28, "duration": 5.28}, {"text": "to get new results and today we're going", "start": 157.8, "duration": 3.84}, {"text": "to talk about scalability you know using", "start": 159.56, "duration": 4.2}, {"text": "the same code but you know scaling it up", "start": 161.64, "duration": 4.519}, {"text": "to larger data sets so there are a", "start": 163.76, "duration": 5.479}, {"text": "number of tools that help you rep now", "start": 166.159, "duration": 5.841}, {"text": "create reproducible uh infrastructures", "start": 169.239, "duration": 5.121}, {"text": "and that includes Jupiter because there", "start": 172.0, "duration": 4.44}, {"text": "you can combine the documentation the", "start": 174.36, "duration": 4.56}, {"text": "code and results all all in one document", "start": 176.44, "duration": 3.879}, {"text": "so that helps", "start": 178.92, "duration": 3.2}, {"text": "if you want to get reproducible results", "start": 180.319, "duration": 3.321}, {"text": "you need to Version Control your", "start": 182.12, "duration": 3.52}, {"text": "software so that's where git and GitHub", "start": 183.64, "duration": 4.08}, {"text": "comes in and you already heard a lot", "start": 185.64, "duration": 4.519}, {"text": "about that but then we also need to set", "start": 187.72, "duration": 4.96}, {"text": "up a software environment and yesterday", "start": 190.159, "duration": 4.401}, {"text": "Marty talked about Singularity", "start": 192.68, "duration": 4.639}, {"text": "containers and today I will focus on an", "start": 194.56, "duration": 6.12}, {"text": "alternative which is is is", "start": 197.319, "duration": 5.881}, {"text": "cor and you know if you write Jupiter", "start": 200.68, "duration": 4.199}, {"text": "notebooks for your research you may want", "start": 203.2, "duration": 3.72}, {"text": "to look at this paper that we wrote a", "start": 204.879, "duration": 4.401}, {"text": "few years ago there are some tips about", "start": 206.92, "duration": 4.92}, {"text": "you know reproducible research in in", "start": 209.28, "duration": 3.8}, {"text": "jupter", "start": 211.84, "duration": 3.44}, {"text": "notebooks but let's talk about you know", "start": 213.08, "duration": 4.28}, {"text": "how to set up a software environment", "start": 215.28, "duration": 4.28}, {"text": "that's both reproducible and and that's", "start": 217.36, "duration": 4.4}, {"text": "portable let's say from your PC from", "start": 219.56, "duration": 7.08}, {"text": "your PC or laptop to to expands so which", "start": 221.76, "duration": 6.679}, {"text": "environment you want to choose cond or", "start": 226.64, "duration": 4.44}, {"text": "Singularity so if you're a beginner or", "start": 228.439, "duration": 4.401}, {"text": "you already have experience with cond", "start": 231.08, "duration": 3.879}, {"text": "that will be a good choice if you're in", "start": 232.84, "duration": 4.759}, {"text": "the exploratory development phase of a", "start": 234.959, "duration": 5.2}, {"text": "project if you have frequently changing", "start": 237.599, "duration": 4.961}, {"text": "dependency so it's very easy to compose", "start": 240.159, "duration": 5.481}, {"text": "a new environment in cond within", "start": 242.56, "duration": 6.44}, {"text": "minutes and um cond environment has some", "start": 245.64, "duration": 5.519}, {"text": "limitations generally you would run that", "start": 249.0, "duration": 4.239}, {"text": "just on a single note but which is not", "start": 251.159, "duration": 5.08}, {"text": "bad they have 128 course and it's", "start": 253.239, "duration": 6.761}, {"text": "supported on on almost all you know os's", "start": 256.239, "duration": 6.081}, {"text": "and it runs on your native operating", "start": 260.0, "duration": 4.4}, {"text": "system on the other hand maybe you want", "start": 262.32, "duration": 3.76}, {"text": "to use Singularity container if you're", "start": 264.4, "duration": 3.48}, {"text": "an advanced user you already have", "start": 266.08, "duration": 3.559}, {"text": "experience with Docker containers", "start": 267.88, "duration": 4.28}, {"text": "Singularity containers you're interested", "start": 269.639, "duration": 5.521}, {"text": "in setting up a a production environment", "start": 272.16, "duration": 5.039}, {"text": "now Singularity containers are often set", "start": 275.16, "duration": 4.319}, {"text": "up just for a single tool as you know", "start": 277.199, "duration": 3.961}, {"text": "and you already used them during this", "start": 279.479, "duration": 3.72}, {"text": "Workshop here we have optimized", "start": 281.16, "duration": 4.24}, {"text": "container for expense such as py torch", "start": 283.199, "duration": 5.081}, {"text": "tenser flow etc etc so they have been", "start": 285.4, "duration": 5.56}, {"text": "specially optimized to take advantage of", "start": 288.28, "duration": 5.359}, {"text": "the hardware they support also multi", "start": 290.96, "duration": 5.079}, {"text": "node calculations one downside is", "start": 293.639, "duration": 4.601}, {"text": "they're only supported on Linux so if", "start": 296.039, "duration": 4.481}, {"text": "you want to run sing Singularity on a", "start": 298.24, "duration": 5.0}, {"text": "Mac or Windows you need to install some", "start": 300.52, "duration": 4.959}, {"text": "virtual machine but one advantage of", "start": 303.24, "duration": 4.44}, {"text": "Singularity is that you know you package", "start": 305.479, "duration": 4.28}, {"text": "the entire operating system with it so", "start": 307.68, "duration": 4.079}, {"text": "you know it's it's really very", "start": 309.759, "duration": 4.561}, {"text": "reproducible but you know as a beginner", "start": 311.759, "duration": 4.521}, {"text": "if you're more exploratory development", "start": 314.32, "duration": 4.56}, {"text": "you know cond is much easier to", "start": 316.28, "duration": 5.72}, {"text": "use um and and it's not either or cond", "start": 318.88, "duration": 5.4}, {"text": "or a container you could start you know", "start": 322.0, "duration": 4.639}, {"text": "developing cond environment and then put", "start": 324.28, "duration": 4.16}, {"text": "that into a Docker container to", "start": 326.639, "duration": 4.68}, {"text": "productionize that", "start": 328.44, "duration": 4.8}, {"text": "all right so what is cond in case you", "start": 331.319, "duration": 6.281}, {"text": "have not used cond so I let me first", "start": 333.24, "duration": 6.239}, {"text": "talk about reproducibility so if you", "start": 337.6, "duration": 4.719}, {"text": "think about scientific research usually", "start": 339.479, "duration": 5.081}, {"text": "you know people publish a paper many", "start": 342.319, "duration": 4.0}, {"text": "time these days you know you're required", "start": 344.56, "duration": 3.919}, {"text": "to publish your code hopefully also some", "start": 346.319, "duration": 4.801}, {"text": "of the data but when it breaks down it's", "start": 348.479, "duration": 4.361}, {"text": "usually the software environment I'm", "start": 351.12, "duration": 4.28}, {"text": "sure you have triy to install software", "start": 352.84, "duration": 3.96}, {"text": "that other people have developed you", "start": 355.4, "duration": 3.359}, {"text": "know have a hard time to installing it", "start": 356.8, "duration": 3.8}, {"text": "or or running it so that's where things", "start": 358.759, "duration": 4.0}, {"text": "break down and that's where cond is", "start": 360.6, "duration": 5.0}, {"text": "really helpful first of all cond is a", "start": 362.759, "duration": 4.921}, {"text": "system to install your software I'm sure", "start": 365.6, "duration": 5.439}, {"text": "many of you if you run program in Python", "start": 367.68, "duration": 5.44}, {"text": "have used con to install packages such", "start": 371.039, "duration": 5.72}, {"text": "as numai pandas Etc and one thing it", "start": 373.12, "duration": 5.84}, {"text": "does it checks dependencies of you know", "start": 376.759, "duration": 5.081}, {"text": "any pre-existing packages that it needs", "start": 378.96, "duration": 4.72}, {"text": "but with K you can also set up a", "start": 381.84, "duration": 3.759}, {"text": "portable software environment that means", "start": 383.68, "duration": 3.88}, {"text": "you could have two different", "start": 385.599, "duration": 3.44}, {"text": "environments running on your same", "start": 387.56, "duration": 3.199}, {"text": "computer computer or move it from a", "start": 389.039, "duration": 3.921}, {"text": "laptop to expans for example with the", "start": 390.759, "duration": 5.681}, {"text": "same environment it runs multiplatform", "start": 392.96, "duration": 6.48}, {"text": "supports many", "start": 396.44, "duration": 3.0}, {"text": "languages and so why do you want to use", "start": 400.16, "duration": 5.68}, {"text": "cond environments maybe as a beginning", "start": 403.039, "duration": 5.241}, {"text": "python user what you used to do you just", "start": 405.84, "duration": 4.4}, {"text": "install packages as you need using", "start": 408.28, "duration": 4.919}, {"text": "either pip installs or cond installs but", "start": 410.24, "duration": 4.56}, {"text": "after a while you will notice you're", "start": 413.199, "duration": 3.56}, {"text": "going to run into some trouble here", "start": 414.8, "duration": 4.079}, {"text": "because there going to be version", "start": 416.759, "duration": 4.28}, {"text": "conflict errors and basically", "start": 418.879, "duration": 5.16}, {"text": "nonreproducible results the idea of a qu", "start": 421.039, "duration": 5.0}, {"text": "environment is that you have isolated", "start": 424.039, "duration": 3.84}, {"text": "environments so on the same computer you", "start": 426.039, "duration": 3.321}, {"text": "could have one environment that use", "start": 427.879, "duration": 4.641}, {"text": "let's say python 3.7 and those version", "start": 429.36, "duration": 5.239}, {"text": "of software another environment that", "start": 432.52, "duration": 5.119}, {"text": "uses python 3.9 and another version of", "start": 434.599, "duration": 5.521}, {"text": "software and those can coexist and there", "start": 437.639, "duration": 5.12}, {"text": "are no conflicts about it furthermore", "start": 440.12, "duration": 4.639}, {"text": "you can take those environments and move", "start": 442.759, "duration": 4.481}, {"text": "them from your laptop or desktop to", "start": 444.759, "duration": 4.801}, {"text": "expans and running them and run them", "start": 447.24, "duration": 3.519}, {"text": "there and that's what I'm going to talk", "start": 449.56, "duration": 2.96}, {"text": "about", "start": 450.759, "duration": 4.641}, {"text": "today okay so how do you define a cond", "start": 452.52, "duration": 5.239}, {"text": "environment a cond environment is", "start": 455.4, "duration": 5.76}, {"text": "defined in a yaml file environment. yml", "start": 457.759, "duration": 5.761}, {"text": "file typically you would put them at the", "start": 461.16, "duration": 5.08}, {"text": "top level in your git repository this is", "start": 463.52, "duration": 4.92}, {"text": "the repository that we're using today", "start": 466.24, "duration": 4.72}, {"text": "here and in the top level there's a file", "start": 468.44, "duration": 6.68}, {"text": "called environment. yaml yml and this is", "start": 470.96, "duration": 5.72}, {"text": "the way you define your environment", "start": 475.12, "duration": 3.199}, {"text": "first you give it a name generally it's", "start": 476.68, "duration": 3.44}, {"text": "a good practice to use use the same name", "start": 478.319, "duration": 4.921}, {"text": "as a g repository then some channels", "start": 480.12, "duration": 5.68}, {"text": "that is basically the repository is", "start": 483.24, "duration": 5.239}, {"text": "where you download your packages from", "start": 485.8, "duration": 5.64}, {"text": "and the order here matters and and then", "start": 488.479, "duration": 5.0}, {"text": "you need to specify what software", "start": 491.44, "duration": 4.199}, {"text": "package should we import here so we need", "start": 493.479, "duration": 5.601}, {"text": "python Jupiter lab etc etc and to make", "start": 495.639, "duration": 5.801}, {"text": "it reproducible a good practice is once", "start": 499.08, "duration": 4.92}, {"text": "you know I have a final version uh that", "start": 501.44, "duration": 4.52}, {"text": "you want to you know let other people", "start": 504.0, "duration": 5.36}, {"text": "use to to what's called pin uh the", "start": 505.96, "duration": 5.239}, {"text": "version numbers here so you not it's", "start": 509.36, "duration": 3.64}, {"text": "reproducible to use the same version", "start": 511.199, "duration": 4.2}, {"text": "over and over again moreover one", "start": 513.0, "duration": 4.599}, {"text": "advantage of cond is you cannot only", "start": 515.399, "duration": 5.2}, {"text": "install python packages for example in", "start": 517.599, "duration": 5.841}, {"text": "our later example we're using pypar", "start": 520.599, "duration": 5.8}, {"text": "pypar needs Java so we also install here", "start": 523.44, "duration": 7.2}, {"text": "open jdk so here we install Java 11 now", "start": 526.399, "duration": 6.44}, {"text": "this is independent of the Java that you", "start": 530.64, "duration": 3.92}, {"text": "already installed on your machine so you", "start": 532.839, "duration": 3.801}, {"text": "could have a different version of java", "start": 534.56, "duration": 3.44}, {"text": "and this one here is completely", "start": 536.64, "duration": 3.639}, {"text": "independent envir enironment here you", "start": 538.0, "duration": 4.519}, {"text": "can also specify environment variables", "start": 540.279, "duration": 4.761}, {"text": "in this file here so for example ppar", "start": 542.519, "duration": 5.161}, {"text": "needs a few configuration parameters", "start": 545.04, "duration": 5.799}, {"text": "which I've already set up", "start": 547.68, "duration": 5.719}, {"text": "here okay so how do you create a cond", "start": 550.839, "duration": 5.24}, {"text": "environment if you have not uh used cond", "start": 553.399, "duration": 5.521}, {"text": "before first you need to install usually", "start": 556.079, "duration": 4.88}, {"text": "mini cond that gives you the basic", "start": 558.92, "duration": 4.24}, {"text": "python environment and frequently used", "start": 560.959, "duration": 3.921}, {"text": "packages and once you have installed", "start": 563.16, "duration": 4.64}, {"text": "that then you can say cond environment", "start": 564.88, "duration": 4.76}, {"text": "create and you give it the name of your", "start": 567.8, "duration": 5.479}, {"text": "environment. yml file but if you're a", "start": 569.64, "duration": 6.04}, {"text": "cond user you know that cond can be slow", "start": 573.279, "duration": 4.161}, {"text": "if you have lots of dependencies so", "start": 575.68, "duration": 4.0}, {"text": "there's there's a new kit in town that's", "start": 577.44, "duration": 4.92}, {"text": "called Mamba which is much faster so I", "start": 579.68, "duration": 5.599}, {"text": "suggest try Mamba instead which will be", "start": 582.36, "duration": 4.88}, {"text": "much faster so that's how you create", "start": 585.279, "duration": 4.0}, {"text": "your environment and then if you want to", "start": 587.24, "duration": 4.52}, {"text": "use it you say cor by activate name of", "start": 589.279, "duration": 4.641}, {"text": "environment and then you're ready to go", "start": 591.76, "duration": 4.4}, {"text": "you run Jupiter lab or any other python", "start": 593.92, "duration": 4.72}, {"text": "application and when you're finished you", "start": 596.16, "duration": 4.84}, {"text": "deactivate acate your environment now", "start": 598.64, "duration": 4.319}, {"text": "this all works very well on your laptop", "start": 601.0, "duration": 4.64}, {"text": "Mac Windows Linux now if you try to do", "start": 602.959, "duration": 5.241}, {"text": "that at an expense you will see this is", "start": 605.64, "duration": 4.48}, {"text": "going to take a very long time and the", "start": 608.2, "duration": 3.8}, {"text": "reason is that your home directory is on", "start": 610.12, "duration": 4.76}, {"text": "a network file system so this will", "start": 612.0, "duration": 5.04}, {"text": "install you know thousands of files in", "start": 614.88, "duration": 3.84}, {"text": "your home directory and that will be", "start": 617.04, "duration": 4.64}, {"text": "extremely slow and fortunately we have a", "start": 618.72, "duration": 4.96}, {"text": "solution for that you just use the", "start": 621.68, "duration": 4.36}, {"text": "Galileo script which which will take", "start": 623.68, "duration": 4.36}, {"text": "care of creating your cond environment", "start": 626.04, "duration": 4.68}, {"text": "automatically so don't do this actually", "start": 628.04, "duration": 6.96}, {"text": "on expense but rather use a Galileo", "start": 630.72, "duration": 7.359}, {"text": "script so how does it works so let's go", "start": 635.0, "duration": 5.2}, {"text": "into some details so first of all you", "start": 638.079, "duration": 3.801}, {"text": "know since this is not an in-person", "start": 640.2, "duration": 4.52}, {"text": "meeting I want to get some feedback from", "start": 641.88, "duration": 5.959}, {"text": "you and we're going to use zoom for that", "start": 644.72, "duration": 5.44}, {"text": "so on Zoom under reactions there are two", "start": 647.839, "duration": 5.8}, {"text": "choices here yes or no and we're going", "start": 650.16, "duration": 5.84}, {"text": "to use them today so if you completed", "start": 653.639, "duration": 6.0}, {"text": "the task please you know click yes or if", "start": 656.0, "duration": 5.519}, {"text": "you don't want to follow the examples", "start": 659.639, "duration": 3.88}, {"text": "just click yes right away so have some", "start": 661.519, "duration": 4.32}, {"text": "feedback that okay we can continue", "start": 663.519, "duration": 4.361}, {"text": "because we don't have much time if you", "start": 665.839, "duration": 5.201}, {"text": "have a problem turn on the no flag and", "start": 667.88, "duration": 5.6}, {"text": "then go to slag and report your problem", "start": 671.04, "duration": 4.56}, {"text": "there and we'll see if we can resolve it", "start": 673.48, "duration": 4.64}, {"text": "so so please use those so I get some", "start": 675.6, "duration": 4.12}, {"text": "feedback I don't want to waste time we", "start": 678.12, "duration": 3.32}, {"text": "don't have much time", "start": 679.72, "duration": 5.08}, {"text": "left okay so the first thing is I want", "start": 681.44, "duration": 6.519}, {"text": "you to uh log in so if you do not have", "start": 684.8, "duration": 7.56}, {"text": "an have not logged into expanse yet just", "start": 687.959, "duration": 7.241}, {"text": "go ahead use either SSH or use the", "start": 692.36, "duration": 5.36}, {"text": "expanse portal and log in with your", "start": 695.2, "duration": 5.199}, {"text": "training account and then when once you", "start": 697.72, "duration": 5.919}, {"text": "have a terminal window open then use the", "start": 700.399, "duration": 6.801}, {"text": "uh the reactions in uh Zoom to say yes", "start": 703.639, "duration": 6.401}, {"text": "that you uh that you have an open", "start": 707.2, "duration": 5.439}, {"text": "Terminal so let's go ahead you know if", "start": 710.04, "duration": 4.239}, {"text": "you don't want to do the exercise then", "start": 712.639, "duration": 4.0}, {"text": "please say yes right away so we can see", "start": 714.279, "duration": 5.36}, {"text": "you know how things are going", "start": 716.639, "duration": 6.76}, {"text": "okay I already see one green here four", "start": 719.639, "duration": 6.44}, {"text": "okay there some thumbs", "start": 723.399, "duration": 6.88}, {"text": "up let's wait for a minute here or so", "start": 726.079, "duration": 6.401}, {"text": "want to make sure everybody is logged in", "start": 730.279, "duration": 3.92}, {"text": "and again if you don't want to follow", "start": 732.48, "duration": 4.039}, {"text": "the uh don't want to run the examples", "start": 734.199, "duration": 5.32}, {"text": "just uh say yes anyway so I just know", "start": 736.519, "duration": 5.44}, {"text": "that I can", "start": 739.519, "duration": 4.361}, {"text": "continue all right I think in the", "start": 741.959, "duration": 5.0}, {"text": "interest of time I need to go on here", "start": 743.88, "duration": 5.68}, {"text": "you can always do the exercises later", "start": 746.959, "duration": 6.281}, {"text": "yourself as well um so you know which", "start": 749.56, "duration": 5.92}, {"text": "partition should we use so you know for", "start": 753.24, "duration": 4.52}, {"text": "many of the exercises so far we gave you", "start": 755.48, "duration": 4.68}, {"text": "a script which basically did that choice", "start": 757.76, "duration": 5.319}, {"text": "for you but I I structure my talk in", "start": 760.16, "duration": 5.2}, {"text": "such a way so that when you get your own", "start": 763.079, "duration": 4.2}, {"text": "let's say startup account you know what", "start": 765.36, "duration": 3.56}, {"text": "to do so you can refer to this", "start": 767.279, "duration": 3.521}, {"text": "presentation so if you want to run", "start": 768.92, "duration": 4.919}, {"text": "Jupiter lab on a CPU use a shared", "start": 770.8, "duration": 5.96}, {"text": "petition if you run less than 128 course", "start": 773.839, "duration": 5.521}, {"text": "which I quite usually would do for", "start": 776.76, "duration": 4.28}, {"text": "jupter Notebook it probably doesn't make", "start": 779.36, "duration": 4.44}, {"text": "sense to run that motor core if you run", "start": 781.04, "duration": 6.84}, {"text": "your notebook on GPU use GPU shared if", "start": 783.8, "duration": 7.039}, {"text": "you use less than four gpus but one", "start": 787.88, "duration": 4.68}, {"text": "thing to keep in mind too is sometimes", "start": 790.839, "duration": 3.521}, {"text": "you just want to quickly test something", "start": 792.56, "duration": 4.24}, {"text": "or you have a very short run then you", "start": 794.36, "duration": 5.0}, {"text": "can use the debug or GPU debug", "start": 796.8, "duration": 5.039}, {"text": "partitions you can only have one run job", "start": 799.36, "duration": 4.2}, {"text": "running in those but that's a really", "start": 801.839, "duration": 4.24}, {"text": "quick way to to get on onto a node", "start": 803.56, "duration": 4.36}, {"text": "otherwise you know if you choose any of", "start": 806.079, "duration": 4.56}, {"text": "the other ones you wait longer in the", "start": 807.92, "duration": 6.479}, {"text": "queue okay all right so here's just an", "start": 810.639, "duration": 5.801}, {"text": "example how you would use galileon and", "start": 814.399, "duration": 3.68}, {"text": "you have used that a lot but this is the", "start": 816.44, "duration": 3.16}, {"text": "idea let's say you're on your own you", "start": 818.079, "duration": 2.921}, {"text": "have your own account this is the way", "start": 819.6, "duration": 3.679}, {"text": "you would do it first you need to add", "start": 821.0, "duration": 5.399}, {"text": "the path to to Galileo you can put that", "start": 823.279, "duration": 5.68}, {"text": "into your bash profile file we have", "start": 826.399, "duration": 3.921}, {"text": "already done that for your training", "start": 828.959, "duration": 4.841}, {"text": "account so don't don't do that then you", "start": 830.32, "duration": 5.8}, {"text": "you clone a get repository you launch", "start": 833.8, "duration": 4.8}, {"text": "your notebook with a cond environment", "start": 836.12, "duration": 4.36}, {"text": "that's see how that works you already", "start": 838.6, "duration": 6.919}, {"text": "submitted uh uh jobs with um with", "start": 840.48, "duration": 6.479}, {"text": "container environment but now we're", "start": 845.519, "duration": 3.401}, {"text": "using a cond environment so the only", "start": 846.959, "duration": 4.0}, {"text": "difference is that we're saying here's", "start": 848.92, "duration": 4.64}, {"text": "an option called cond en and this is the", "start": 850.959, "duration": 5.201}, {"text": "name of the cond environment and cond", "start": 853.56, "duration": 5.8}, {"text": "yml which is a path to the environment.", "start": 856.16, "duration": 6.28}, {"text": "yml file and and then for good measures", "start": 859.36, "duration": 5.44}, {"text": "we had member to speed it up so this", "start": 862.44, "duration": 5.839}, {"text": "this is your recipe basically to uh use", "start": 864.8, "duration": 6.32}, {"text": "you know cond environment on on", "start": 868.279, "duration": 5.521}, {"text": "expanse and yeah you copy that as you", "start": 871.12, "duration": 4.56}, {"text": "know copy that URL in your browser so", "start": 873.8, "duration": 3.839}, {"text": "don't do this this is just in principle", "start": 875.68, "duration": 4.44}, {"text": "how this would work if you do this", "start": 877.639, "duration": 5.2}, {"text": "yourself um now creating a cond", "start": 880.12, "duration": 5.6}, {"text": "environment takes time because Galileo", "start": 882.839, "duration": 4.92}, {"text": "creates a cond environment on the Fly", "start": 885.72, "duration": 4.72}, {"text": "that may take a few minutes so instead", "start": 887.759, "duration": 5.041}, {"text": "you can also create a packed cond", "start": 890.44, "duration": 5.24}, {"text": "environment and there is a a shell", "start": 892.8, "duration": 5.959}, {"text": "script in this DF parallel gway called p", "start": 895.68, "duration": 6.0}, {"text": "pack and it creates basically a a packed", "start": 898.759, "duration": 6.0}, {"text": "cond environment which is a tar.gz file", "start": 901.68, "duration": 5.48}, {"text": "and once you create it then you can just", "start": 904.759, "duration": 5.361}, {"text": "use it and you run Galileo this way", "start": 907.16, "duration": 5.239}, {"text": "where you basically specify instead of", "start": 910.12, "duration": 4.839}, {"text": "the yaml file you give it the cond pack", "start": 912.399, "duration": 4.68}, {"text": "file with the cond pack option and then", "start": 914.959, "duration": 4.841}, {"text": "the pass to this tar.gz file which you", "start": 917.079, "duration": 4.68}, {"text": "can keep in your home directly so we're", "start": 919.8, "duration": 3.44}, {"text": "not going to do this today I just want", "start": 921.759, "duration": 3.681}, {"text": "to mention that in case you use that", "start": 923.24, "duration": 4.2}, {"text": "same environment over and over again you", "start": 925.44, "duration": 4.519}, {"text": "may want to create a p environment again", "start": 927.44, "duration": 4.16}, {"text": "it may not always work so that's why I", "start": 929.959, "duration": 4.161}, {"text": "call it work in progress but that's", "start": 931.6, "duration": 5.08}, {"text": "something you consider so one other", "start": 934.12, "duration": 4.36}, {"text": "thing I want to talk about in terms of", "start": 936.68, "duration": 4.0}, {"text": "launching Jupiter lab you already know", "start": 938.48, "duration": 5.359}, {"text": "how to launch Galileo but one important", "start": 940.68, "duration": 5.0}, {"text": "part is when you are finished with your", "start": 943.839, "duration": 3.24}, {"text": "work important thing is when you're", "start": 945.68, "duration": 3.159}, {"text": "finished you go to the file menu in", "start": 947.079, "duration": 4.76}, {"text": "Jupiter lab and you go to shut down if", "start": 948.839, "duration": 5.48}, {"text": "you don't do that your process will", "start": 951.839, "duration": 4.48}, {"text": "continue running let's say you requested", "start": 954.319, "duration": 5.721}, {"text": "four hours of of time unless you shut it", "start": 956.319, "duration": 5.76}, {"text": "down your process will continue running", "start": 960.04, "duration": 3.88}, {"text": "and and you burn through your allocation", "start": 962.079, "duration": 4.081}, {"text": "so at the end always go to shut down you", "start": 963.92, "duration": 3.88}, {"text": "may not have done that during the", "start": 966.16, "duration": 3.479}, {"text": "training which which is okay but once", "start": 967.8, "duration": 3.88}, {"text": "you have your own allocation you know", "start": 969.639, "duration": 3.841}, {"text": "this is your money that you're burning", "start": 971.68, "duration": 3.839}, {"text": "if you don't shut this down so that's", "start": 973.48, "duration": 3.56}, {"text": "something to", "start": 975.519, "duration": 4.44}, {"text": "remember um so we're going to run", "start": 977.04, "duration": 5.359}, {"text": "through a few data frame examples here", "start": 979.959, "duration": 5.68}, {"text": "one is we're going to run pandas Dusk", "start": 982.399, "duration": 5.321}, {"text": "and Spark data frames if you would run", "start": 985.639, "duration": 5.841}, {"text": "that on a those run on CPU so this is", "start": 987.72, "duration": 5.64}, {"text": "the way that would be run we say we want", "start": 991.48, "duration": 5.039}, {"text": "to have 10 CPUs 20 megabytes of memory", "start": 993.36, "duration": 6.24}, {"text": "one hour and then we specify the name of", "start": 996.519, "duration": 6.041}, {"text": "the environment and the path and if you", "start": 999.6, "duration": 5.4}, {"text": "want to run the same thing on on GPU to", "start": 1002.56, "duration": 5.839}, {"text": "enable the Cuda data frames um we say", "start": 1005.0, "duration": 8.12}, {"text": "okay we run that on 10 CPUs one GPU 92", "start": 1008.399, "duration": 7.24}, {"text": "gabt of memory for one hour but this", "start": 1013.12, "duration": 4.76}, {"text": "case we use a different cond environment", "start": 1015.639, "duration": 5.481}, {"text": "for GP which is called dfp GPU and it", "start": 1017.88, "duration": 6.72}, {"text": "has a different uh yml file as well", "start": 1021.12, "duration": 5.079}, {"text": "again don't do that this is just the", "start": 1024.6, "duration": 4.599}, {"text": "recipe for you how to run things on CPU", "start": 1026.199, "duration": 3.961}, {"text": "and", "start": 1029.199, "duration": 4.6}, {"text": "GPU okay so now we come to our first", "start": 1030.16, "duration": 7.36}, {"text": "task um so we're going to launch Jupiter", "start": 1033.799, "duration": 7.52}, {"text": "Labs so go go to this link here and", "start": 1037.52, "duration": 5.64}, {"text": "their description what you're supposed", "start": 1041.319, "duration": 5.281}, {"text": "to do you basically just launch Jupiter", "start": 1043.16, "duration": 6.16}, {"text": "so we're just doing task one", "start": 1046.6, "duration": 5.16}, {"text": "so clone this git", "start": 1049.32, "duration": 5.88}, {"text": "repository and then copy this uh Galileo", "start": 1051.76, "duration": 5.36}, {"text": "launch command here you know the way to", "start": 1055.2, "duration": 4.12}, {"text": "copy that is to click on the on the side", "start": 1057.12, "duration": 4.08}, {"text": "you know this button that's how you copy", "start": 1059.32, "duration": 5.239}, {"text": "that so launch Galileo and once you get", "start": 1061.2, "duration": 6.24}, {"text": "the GitHub once you get the jupter lab", "start": 1064.559, "duration": 6.12}, {"text": "URL paste that in a browser and then", "start": 1067.44, "duration": 4.8}, {"text": "then you're done for now we just want to", "start": 1070.679, "duration": 4.081}, {"text": "launch this now and then I'll continue", "start": 1072.24, "duration": 4.439}, {"text": "while the job gets ready and when you're", "start": 1074.76, "duration": 4.44}, {"text": "finished again turn on the the yes flag", "start": 1076.679, "duration": 4.721}, {"text": "so I get some feedback you know when to", "start": 1079.2, "duration": 6.56}, {"text": "continue any questions about this", "start": 1081.4, "duration": 9.56}, {"text": "task so while this you know um job is is", "start": 1085.76, "duration": 7.88}, {"text": "launching I'm going to go through what", "start": 1090.96, "duration": 4.079}, {"text": "we're actually going to do so we're", "start": 1093.64, "duration": 2.88}, {"text": "going to talk about scaling up", "start": 1095.039, "duration": 4.841}, {"text": "calculation on CPU and G GPU as an", "start": 1096.52, "duration": 5.76}, {"text": "example we use a data analysis with data", "start": 1099.88, "duration": 5.159}, {"text": "frames so if you're a user in R you're", "start": 1102.28, "duration": 5.04}, {"text": "probably familiar using R data frames if", "start": 1105.039, "duration": 4.241}, {"text": "you're a python user I'm sure you have", "start": 1107.32, "duration": 4.28}, {"text": "used pandas data frames before but they", "start": 1109.28, "duration": 4.519}, {"text": "have some limitations so we want to try", "start": 1111.6, "duration": 3.88}, {"text": "to overcome those", "start": 1113.799, "duration": 4.681}, {"text": "limitations let's talk about pandas data", "start": 1115.48, "duration": 5.679}, {"text": "frames so pandas data frames basically", "start": 1118.48, "duration": 6.4}, {"text": "represent tabular data in in uh in in", "start": 1121.159, "duration": 6.121}, {"text": "Python the problem is Panda's data", "start": 1124.88, "duration": 4.279}, {"text": "frames are limited to the available", "start": 1127.28, "duration": 4.279}, {"text": "memory so if you're running on a laptop", "start": 1129.159, "duration": 5.161}, {"text": "let's say you have 16 gigabytes you know", "start": 1131.559, "duration": 4.36}, {"text": "you're going to be limited to that if", "start": 1134.32, "duration": 3.4}, {"text": "you have larger data sets that don't fit", "start": 1135.919, "duration": 3.041}, {"text": "into memory", "start": 1137.72, "duration": 3.92}, {"text": "we get an auto memory error so", "start": 1138.96, "duration": 4.64}, {"text": "fortunately there are some libraries", "start": 1141.64, "duration": 4.56}, {"text": "available that can uh overcome that", "start": 1143.6, "duration": 5.36}, {"text": "issues and one of them is are the dusk", "start": 1146.2, "duration": 6.08}, {"text": "data frames so dusk is very simple it", "start": 1148.96, "duration": 5.68}, {"text": "takes basically your data and it breaks", "start": 1152.28, "duration": 5.24}, {"text": "up a pandas data frame into partition so", "start": 1154.64, "duration": 5.96}, {"text": "it breaks it into multiple smaller P", "start": 1157.52, "duration": 7.2}, {"text": "dusk I'm sorry pandas data frames so", "start": 1160.6, "duration": 5.92}, {"text": "that resolves the issue of handling", "start": 1164.72, "duration": 3.92}, {"text": "large data set now you can you know run", "start": 1166.52, "duration": 4.8}, {"text": "terabyte data sets even on a smaller", "start": 1168.64, "duration": 6.0}, {"text": "computer but in so basically we can run", "start": 1171.32, "duration": 5.76}, {"text": "out of core data sets larger than", "start": 1174.64, "duration": 4.88}, {"text": "available memory but now that opens up", "start": 1177.08, "duration": 4.76}, {"text": "also the opportunity to run basically", "start": 1179.52, "duration": 4.6}, {"text": "process in parallel on each of those", "start": 1181.84, "duration": 5.8}, {"text": "partitions here as well now dusk", "start": 1184.12, "duration": 6.36}, {"text": "supports only a subset of the pandas API", "start": 1187.64, "duration": 5.32}, {"text": "so if you're used to pandas not all the", "start": 1190.48, "duration": 4.36}, {"text": "options or arguments you know are", "start": 1192.96, "duration": 3.52}, {"text": "available so there are some limitations", "start": 1194.84, "duration": 4.4}, {"text": "to it but this is a way to overcome very", "start": 1196.48, "duration": 6.28}, {"text": "large data sets plus being able to run", "start": 1199.24, "duration": 5.24}, {"text": "those calculations in", "start": 1202.76, "duration": 4.32}, {"text": "parallel so that's one way you can use", "start": 1204.48, "duration": 4.36}, {"text": "task on on", "start": 1207.08, "duration": 4.36}, {"text": "CPU yeah other one this slide almost", "start": 1208.84, "duration": 4.4}, {"text": "looks identical but now we're talking", "start": 1211.44, "duration": 4.2}, {"text": "about processing large data sets on on", "start": 1213.24, "duration": 5.72}, {"text": "GPU and we'll do both so Nvidia has", "start": 1215.64, "duration": 7.399}, {"text": "developed a a um a GPU powered data", "start": 1218.96, "duration": 6.839}, {"text": "frame Library which is called CF or Cuda", "start": 1223.039, "duration": 5.441}, {"text": "DF but again it's limited to the", "start": 1225.799, "duration": 5.041}, {"text": "available memory so for example on", "start": 1228.48, "duration": 5.24}, {"text": "expans we have the v100s and they have", "start": 1230.84, "duration": 6.16}, {"text": "32 GB of memory so you're limited to", "start": 1233.72, "duration": 5.36}, {"text": "that so if you have less than 32", "start": 1237.0, "duration": 4.96}, {"text": "gigabytes scolf will just work fine if", "start": 1239.08, "duration": 4.959}, {"text": "you have more you're going to get an out", "start": 1241.96, "duration": 5.8}, {"text": "of memory error and that do comes to the", "start": 1244.039, "duration": 7.201}, {"text": "rescue again as before um basically we", "start": 1247.76, "duration": 6.2}, {"text": "can split up this large Cuda data frame", "start": 1251.24, "duration": 5.679}, {"text": "into multiple smaller Cuda data frames", "start": 1253.96, "duration": 5.64}, {"text": "and then has the advantage we can then", "start": 1256.919, "duration": 4.721}, {"text": "you know for example process things on", "start": 1259.6, "duration": 5.12}, {"text": "on GPU run things in parallel and", "start": 1261.64, "duration": 7.039}, {"text": "process any large data sets and again", "start": 1264.72, "duration": 6.6}, {"text": "unfortunately does Cuda doesn't support", "start": 1268.679, "duration": 5.6}, {"text": "all the uh options of pandas but has a", "start": 1271.32, "duration": 5.4}, {"text": "limited subsets of pandas so there are", "start": 1274.279, "duration": 6.681}, {"text": "two options running either on CPU or", "start": 1276.72, "duration": 8.48}, {"text": "GPU okay so so far in very often when", "start": 1280.96, "duration": 6.12}, {"text": "you deal with tabular data sets you", "start": 1285.2, "duration": 4.44}, {"text": "probably have them in a CSV file format", "start": 1287.08, "duration": 6.04}, {"text": "or tsv file format and those are okay", "start": 1289.64, "duration": 5.399}, {"text": "but they are slow because those are text", "start": 1293.12, "duration": 4.24}, {"text": "based formats now if you do really want", "start": 1295.039, "duration": 4.841}, {"text": "to do high throughput Computing you may", "start": 1297.36, "duration": 4.64}, {"text": "want to choose a different file format", "start": 1299.88, "duration": 5.32}, {"text": "and for for data frames one of the best", "start": 1302.0, "duration": 6.72}, {"text": "option is to use pet what is a pet file", "start": 1305.2, "duration": 6.479}, {"text": "format let's first talk about CSV files", "start": 1308.72, "duration": 6.72}, {"text": "in a CSV file data are arranged in a row", "start": 1311.679, "duration": 6.6}, {"text": "by row fashion so when you read a CSV", "start": 1315.44, "duration": 5.119}, {"text": "you need to read each row to get the", "start": 1318.279, "duration": 5.601}, {"text": "data you need in a column storage format", "start": 1320.559, "duration": 6.881}, {"text": "data are organized on in a per column uh", "start": 1323.88, "duration": 7.039}, {"text": "fashion for example let's say row a is a", "start": 1327.44, "duration": 6.08}, {"text": "set of dogs row b those are the cats", "start": 1330.919, "duration": 3.76}, {"text": "here for", "start": 1333.52, "duration": 4.2}, {"text": "example and let's say your anal analysis", "start": 1334.679, "duration": 6.081}, {"text": "only needs the cats I only want to need", "start": 1337.72, "duration": 7.04}, {"text": "column B pet lets you read just column B", "start": 1340.76, "duration": 7.48}, {"text": "and ignoring columns A and C for example", "start": 1344.76, "duration": 5.44}, {"text": "so that's called vertical", "start": 1348.24, "duration": 4.88}, {"text": "partitioning then in addition pet can do", "start": 1350.2, "duration": 5.4}, {"text": "a few more things it can do horizontal", "start": 1353.12, "duration": 5.08}, {"text": "partitioning let's say I don't like", "start": 1355.6, "duration": 4.559}, {"text": "black cats and I don't want to do", "start": 1358.2, "duration": 3.88}, {"text": "calculations with black cats I can", "start": 1360.159, "duration": 3.841}, {"text": "eliminate them as well without ever", "start": 1362.08, "duration": 4.599}, {"text": "reading the black cats too and then if", "start": 1364.0, "duration": 5.0}, {"text": "we combine the two together so basically", "start": 1366.679, "duration": 5.561}, {"text": "I read only the data that I need so how", "start": 1369.0, "duration": 6.039}, {"text": "how does that work so horizontal", "start": 1372.24, "duration": 6.919}, {"text": "partitioning here uses a sta statistics", "start": 1375.039, "duration": 8.64}, {"text": "so you know cond I'm sorry like d for", "start": 1379.159, "duration": 7.801}, {"text": "example will break up your data frames", "start": 1383.679, "duration": 6.161}, {"text": "into partition into smaller sets and for", "start": 1386.96, "duration": 4.76}, {"text": "each of those sets it will calculate", "start": 1389.84, "duration": 4.959}, {"text": "minimum maximum statistics so let's say", "start": 1391.72, "duration": 4.88}, {"text": "you have a floating point value if it's", "start": 1394.799, "duration": 3.681}, {"text": "within the range then it will use the", "start": 1396.6, "duration": 3.84}, {"text": "data if it's out of range it will skip", "start": 1398.48, "duration": 4.0}, {"text": "the data that you know that's that's one", "start": 1400.44, "duration": 4.64}, {"text": "way so park files have meta data they", "start": 1402.48, "duration": 4.4}, {"text": "allow this horizontal", "start": 1405.08, "duration": 4.479}, {"text": "partitioning", "start": 1406.88, "duration": 5.32}, {"text": "um so how do you use that in practice so", "start": 1409.559, "duration": 5.24}, {"text": "when you later look at the notebooks you", "start": 1412.2, "duration": 4.56}, {"text": "you will see this code here so this is", "start": 1414.799, "duration": 3.961}, {"text": "how that works let's say I don't want to", "start": 1416.76, "duration": 4.279}, {"text": "read all the columns in a pet file I can", "start": 1418.76, "duration": 4.279}, {"text": "say I only want to read those seven", "start": 1421.039, "duration": 4.401}, {"text": "columns here so there's a data set with", "start": 1423.039, "duration": 4.321}, {"text": "Gene information which we'll be using", "start": 1425.44, "duration": 4.479}, {"text": "today here has many columns but I'm only", "start": 1427.36, "duration": 5.12}, {"text": "interested in those seven columns so", "start": 1429.919, "duration": 4.521}, {"text": "that's the horiz that's the vertical", "start": 1432.48, "duration": 4.4}, {"text": "partitioning so we're choosing columns", "start": 1434.44, "duration": 4.719}, {"text": "but then we also only want those rows", "start": 1436.88, "duration": 5.0}, {"text": "where the gene type is protein coding", "start": 1439.159, "duration": 4.961}, {"text": "and the way you do that in I'm sorry", "start": 1441.88, "duration": 5.399}, {"text": "this should run say pandas here so in", "start": 1444.12, "duration": 7.08}, {"text": "pandas you say read pet file file name", "start": 1447.279, "duration": 6.361}, {"text": "and then you specify the column names", "start": 1451.2, "duration": 5.56}, {"text": "here and you specify your filters the", "start": 1453.64, "duration": 6.84}, {"text": "same in desk and cud exactly the same", "start": 1456.76, "duration": 6.519}, {"text": "syntax so then we also have the desk", "start": 1460.48, "duration": 6.16}, {"text": "Cuda DF it has a filters option but I", "start": 1463.279, "duration": 4.76}, {"text": "couldn't get that to work for some", "start": 1466.64, "duration": 3.0}, {"text": "reason it's not doesn't work or it's not", "start": 1468.039, "duration": 4.161}, {"text": "fully implemented but you can do the", "start": 1469.64, "duration": 4.519}, {"text": "vertical petitioning and pass in the", "start": 1472.2, "duration": 4.64}, {"text": "column names and then I do the filtering", "start": 1474.159, "duration": 4.721}, {"text": "as as a postprocessing step where say", "start": 1476.84, "duration": 3.959}, {"text": "only on the genes that are protein", "start": 1478.88, "duration": 4.919}, {"text": "coding we also will look at spark data", "start": 1480.799, "duration": 5.961}, {"text": "frames I I think uh my talked about", "start": 1483.799, "duration": 6.161}, {"text": "spark data frames uh spark data frames", "start": 1486.76, "duration": 5.08}, {"text": "also allow vertical and horizontal", "start": 1489.96, "duration": 3.56}, {"text": "partitioning and it works like this you", "start": 1491.84, "duration": 4.319}, {"text": "say read this file select the columns", "start": 1493.52, "duration": 6.48}, {"text": "and filter by uh this now this looks", "start": 1496.159, "duration": 5.841}, {"text": "like it's three separate steps but as", "start": 1500.0, "duration": 5.399}, {"text": "you probably heard spark initializes um", "start": 1502.0, "duration": 5.919}, {"text": "lazily so it will actually only read the", "start": 1505.399, "duration": 4.841}, {"text": "data that it", "start": 1507.919, "duration": 5.201}, {"text": "needs okay how do you create a PAR file", "start": 1510.24, "duration": 4.919}, {"text": "the easiest way to create a pet file is", "start": 1513.12, "duration": 4.64}, {"text": "with stask and it would look like this", "start": 1515.159, "duration": 4.681}, {"text": "let's say you have a in in my case the", "start": 1517.76, "duration": 4.72}, {"text": "file we're using today is a tsv file so", "start": 1519.84, "duration": 5.52}, {"text": "we use the CSV reader input file name", "start": 1522.48, "duration": 5.72}, {"text": "and we say it's tab separated and then", "start": 1525.36, "duration": 6.799}, {"text": "we just say to P output file there few", "start": 1528.2, "duration": 6.56}, {"text": "options when I have a metadata file then", "start": 1532.159, "duration": 5.561}, {"text": "and save it so what do you get so a pet", "start": 1534.76, "duration": 4.919}, {"text": "file is actually not a file it's usually", "start": 1537.72, "duration": 5.0}, {"text": "a directory of file so this file g g or", "start": 1539.679, "duration": 6.041}, {"text": "directory Gene info. pet is actually a", "start": 1542.72, "duration": 5.76}, {"text": "file that has metadata information and", "start": 1545.72, "duration": 4.8}, {"text": "then as we talked about you know this is", "start": 1548.48, "duration": 4.48}, {"text": "broken up in into partition and smaller", "start": 1550.52, "duration": 4.6}, {"text": "partitions and the default partition", "start": 1552.96, "duration": 6.56}, {"text": "size is 40 64 G gabes however if you", "start": 1555.12, "duration": 6.84}, {"text": "save it on on dis it's actually smaller", "start": 1559.52, "duration": 5.2}, {"text": "because pet also adds some compression", "start": 1561.96, "duration": 5.28}, {"text": "to it but in memory those partitions are", "start": 1564.72, "duration": 5.72}, {"text": "typically 64 megabytes large and they", "start": 1567.24, "duration": 5.96}, {"text": "are processed in parallel so important", "start": 1570.44, "duration": 4.64}, {"text": "Point Park files are really not files", "start": 1573.2, "duration": 3.24}, {"text": "they're generally", "start": 1575.08, "duration": 3.76}, {"text": "directories um there's one more thing we", "start": 1576.44, "duration": 5.44}, {"text": "we can do here and that is um we can", "start": 1578.84, "duration": 6.12}, {"text": "partition our data so here I have one", "start": 1581.88, "duration": 5.88}, {"text": "more argument partition on Gene type so", "start": 1584.96, "duration": 4.839}, {"text": "Gene type is really an enumeration there", "start": 1587.76, "duration": 4.44}, {"text": "are only 12 different Gene types here", "start": 1589.799, "duration": 4.88}, {"text": "and if I specify that it will create", "start": 1592.2, "duration": 4.92}, {"text": "subdirectories later on we will only be", "start": 1594.679, "duration": 4.281}, {"text": "interested in protein coding so instead", "start": 1597.12, "duration": 3.559}, {"text": "of reading all the other data it can", "start": 1598.96, "duration": 4.56}, {"text": "just focus on protein coding and that", "start": 1600.679, "duration": 5.12}, {"text": "obviously you know helps with the query", "start": 1603.52, "duration": 4.48}, {"text": "efficiency and again you can partition", "start": 1605.799, "duration": 3.441}, {"text": "on on", "start": 1608.0, "duration": 5.279}, {"text": "multiple columns here not just", "start": 1609.24, "duration": 6.72}, {"text": "one okay so let's we're getting closer", "start": 1613.279, "duration": 4.4}, {"text": "to actually running some of the notes", "start": 1615.96, "duration": 3.839}, {"text": "books and comparing their performance", "start": 1617.679, "duration": 4.081}, {"text": "but let's let's quickly review the", "start": 1619.799, "duration": 4.401}, {"text": "different data frames so we many of you", "start": 1621.76, "duration": 4.68}, {"text": "probably know Panda's data frame they", "start": 1624.2, "duration": 4.719}, {"text": "run on a single chord and don't run in", "start": 1626.44, "duration": 4.839}, {"text": "parallel and they generally run out of", "start": 1628.919, "duration": 4.24}, {"text": "memory if you don't have enough memory", "start": 1631.279, "duration": 3.601}, {"text": "there there's some walkarounds but I'm", "start": 1633.159, "duration": 5.161}, {"text": "not going to talk about those", "start": 1634.88, "duration": 3.44}, {"text": "today hand can run because it breaks up", "start": 1639.52, "duration": 4.24}, {"text": "that Panda's data frame in multiple", "start": 1642.279, "duration": 3.441}, {"text": "smaller data frames therefore it can run", "start": 1643.76, "duration": 4.56}, {"text": "in parallel and it can run on very large", "start": 1645.72, "duration": 5.72}, {"text": "data sets spark is the same spark just", "start": 1648.32, "duration": 5.4}, {"text": "has a completely different syntax from", "start": 1651.44, "duration": 5.68}, {"text": "panas and desk but again it it runs you", "start": 1653.72, "duration": 5.76}, {"text": "know in parallel and any size you can", "start": 1657.12, "duration": 4.799}, {"text": "have terabyte data sets can process them", "start": 1659.48, "duration": 7.919}, {"text": "even on your laptop now cadf runs on GPU", "start": 1661.919, "duration": 8.201}, {"text": "it runs in parallel on GPU but again", "start": 1667.399, "duration": 5.601}, {"text": "it's limited to the available GPU memory", "start": 1670.12, "duration": 4.64}, {"text": "so it will run out of", "start": 1673.0, "duration": 5.6}, {"text": "memory and that's where dusk CF comes in", "start": 1674.76, "duration": 5.96}, {"text": "which again splits this up into multiple", "start": 1678.6, "duration": 4.84}, {"text": "Cuda data frames and runs both parallel", "start": 1680.72, "duration": 5.319}, {"text": "and out of", "start": 1683.44, "duration": 5.32}, {"text": "core all right so now let's actually", "start": 1686.039, "duration": 4.801}, {"text": "let's let's do a little comparison so", "start": 1688.76, "duration": 4.159}, {"text": "we're going to compare the runtime of", "start": 1690.84, "duration": 5.079}, {"text": "five of those five data frame libraries", "start": 1692.919, "duration": 5.6}, {"text": "at the first step and then then we're", "start": 1695.919, "duration": 4.681}, {"text": "going to look at the Cuda data frame and", "start": 1698.519, "duration": 4.76}, {"text": "run it with a CSV and a pet file as", "start": 1700.6, "duration": 5.559}, {"text": "input to see how the how the performance", "start": 1703.279, "duration": 6.841}, {"text": "is so let's go to uh GitHub to task", "start": 1706.159, "duration": 7.681}, {"text": "number two um so by this time hopefully", "start": 1710.12, "duration": 6.0}, {"text": "your notebooks have launched or Jupiter", "start": 1713.84, "duration": 5.0}, {"text": "lab has launched so for me let's have a", "start": 1716.12, "duration": 5.84}, {"text": "quick look here see my Jupiter so in", "start": 1718.84, "duration": 8.12}, {"text": "this uh DF parallel you know navigate to", "start": 1721.96, "duration": 8.24}, {"text": "notebooks and then let's see where were", "start": 1726.96, "duration": 6.36}, {"text": "we um the first step we need you need", "start": 1730.2, "duration": 5.52}, {"text": "some data files so the first step once", "start": 1733.32, "duration": 5.199}, {"text": "you get your notebooks run this notebook", "start": 1735.72, "duration": 5.439}, {"text": "that will copy the data files into the", "start": 1738.519, "duration": 5.4}, {"text": "local scratch disc on your CPU note so", "start": 1741.159, "duration": 4.721}, {"text": "that's step number one if you don't do", "start": 1743.919, "duration": 4.201}, {"text": "this or everything else will fail so", "start": 1745.88, "duration": 4.679}, {"text": "that's step one get the data once you're", "start": 1748.12, "duration": 5.96}, {"text": "done with that then run those five data", "start": 1750.559, "duration": 6.561}, {"text": "frames from pandas to dusk KF and you", "start": 1754.08, "duration": 5.24}, {"text": "will see at the bottom of the of each", "start": 1757.12, "duration": 5.679}, {"text": "notebook it will print the the run time", "start": 1759.32, "duration": 5.16}, {"text": "one important thing is when you run", "start": 1762.799, "duration": 4.76}, {"text": "those notebooks don't go through it step", "start": 1764.48, "duration": 5.439}, {"text": "by step but just use this run all button", "start": 1767.559, "duration": 4.801}, {"text": "or the fast forward button that will run", "start": 1769.919, "duration": 4.281}, {"text": "through all cells in your notebook if", "start": 1772.36, "duration": 3.96}, {"text": "you don't do that your timings may be", "start": 1774.2, "duration": 5.079}, {"text": "off so that's step one we're going to", "start": 1776.32, "duration": 4.8}, {"text": "compare those five data frames and give", "start": 1779.279, "duration": 4.12}, {"text": "you maybe five minutes or so for then", "start": 1781.12, "duration": 4.24}, {"text": "I'll go through at to in case you don't", "start": 1783.399, "duration": 4.76}, {"text": "want to run this yourself and once we", "start": 1785.36, "duration": 5.08}, {"text": "have done that we want to compare", "start": 1788.159, "duration": 4.961}, {"text": "reading CSV versus pet F so we're going", "start": 1790.44, "duration": 6.16}, {"text": "to go into the five Cuda data frame and", "start": 1793.12, "duration": 6.279}, {"text": "we change the file form from CSV to", "start": 1796.6, "duration": 4.76}, {"text": "paret and we run it again and see what", "start": 1799.399, "duration": 4.921}, {"text": "the run time is and then the important", "start": 1801.36, "duration": 4.76}, {"text": "part when you're all finished remember", "start": 1804.32, "duration": 4.32}, {"text": "you need to shut down your jupter lab to", "start": 1806.12, "duration": 4.919}, {"text": "not waste resources so you go to file", "start": 1808.64, "duration": 4.6}, {"text": "shut down and then when you finished", "start": 1811.039, "duration": 4.401}, {"text": "again you know click yes so I know that", "start": 1813.24, "duration": 5.64}, {"text": "you're finished so that's the task for", "start": 1815.44, "duration": 6.359}, {"text": "you now to do so please go ahead and if", "start": 1818.88, "duration": 5.72}, {"text": "you have any problems put a note in chat", "start": 1821.799, "duration": 7.441}, {"text": "please I mean I'm sorry into a slack", "start": 1824.6, "duration": 4.64}, {"text": "okay so for those of you that don't run", "start": 1830.32, "duration": 6.359}, {"text": "those tests let me run them as well but", "start": 1833.039, "duration": 5.76}, {"text": "if you do it yourself just keep running", "start": 1836.679, "duration": 4.281}, {"text": "your own version", "start": 1838.799, "duration": 6.48}, {"text": "here so so the first step is we need to", "start": 1840.96, "duration": 6.839}, {"text": "run this notebook here which just copies", "start": 1845.279, "duration": 5.161}, {"text": "the data files that we need which is one", "start": 1847.799, "duration": 8.441}, {"text": "CSV and one pet file so let's do", "start": 1850.44, "duration": 8.8}, {"text": "this", "start": 1856.24, "duration": 3.0}, {"text": "so the file we're downloading is really", "start": 1861.399, "duration": 4.921}, {"text": "not that large of a file it's it's 5.4", "start": 1863.159, "duration": 5.0}, {"text": "gigabytes I", "start": 1866.32, "duration": 4.44}, {"text": "believe to make it faster for the", "start": 1868.159, "duration": 4.36}, {"text": "tutorial so we don't have really big", "start": 1870.76, "duration": 4.24}, {"text": "datas", "start": 1872.519, "duration": 2.481}, {"text": "now okay 5.4 gigabytes for the CSV file", "start": 1876.32, "duration": 6.839}, {"text": "and as I mentioned the pet file are comp", "start": 1880.76, "duration": 5.279}, {"text": "have include compression so they are 1.5", "start": 1883.159, "duration": 5.201}, {"text": "gigabytes on this so now that we have", "start": 1886.039, "duration": 3.921}, {"text": "the two files we can go through the", "start": 1888.36, "duration": 3.279}, {"text": "different data frames we do some data", "start": 1889.96, "duration": 4.48}, {"text": "analysis here so again we want to use", "start": 1891.639, "duration": 5.681}, {"text": "this button here to run through all all", "start": 1894.44, "duration": 5.839}, {"text": "cells automatically and let's have a", "start": 1897.32, "duration": 4.92}, {"text": "quick look what this does so we read a", "start": 1900.279, "duration": 4.601}, {"text": "CSV file here and this is where we read", "start": 1902.24, "duration": 5.52}, {"text": "the data um so this is for the pandas", "start": 1904.88, "duration": 4.6}, {"text": "data frame you're probably familiar with", "start": 1907.76, "duration": 3.799}, {"text": "that if you read a CSV file you can also", "start": 1909.48, "duration": 4.919}, {"text": "pass in the columns and it's a tsv it's", "start": 1911.559, "duration": 5.801}, {"text": "it's a tab separated file and we read", "start": 1914.399, "duration": 6.601}, {"text": "pet file we pass in the column names up", "start": 1917.36, "duration": 6.4}, {"text": "here that does the vertical partitioning", "start": 1921.0, "duration": 5.32}, {"text": "and then we also run in uh the filters", "start": 1923.76, "duration": 5.08}, {"text": "where we can do rowwise filtering as", "start": 1926.32, "duration": 5.0}, {"text": "well and then we just do some simple", "start": 1928.84, "duration": 5.76}, {"text": "data manipulation we group the data by", "start": 1931.32, "duration": 5.359}, {"text": "what's is called here the taxonomy ID", "start": 1934.6, "duration": 5.039}, {"text": "and we count how many there are and then", "start": 1936.679, "duration": 5.321}, {"text": "we sort by that count and finally we we", "start": 1939.639, "duration": 4.4}, {"text": "display that information and let's just", "start": 1942.0, "duration": 4.399}, {"text": "wait a minute to see and then we print", "start": 1944.039, "duration": 4.52}, {"text": "out a few results just so we know that", "start": 1946.399, "duration": 3.921}, {"text": "all of the data frames give the same", "start": 1948.559, "duration": 4.921}, {"text": "results so it's reproducible no matter", "start": 1950.32, "duration": 4.88}, {"text": "what method we're using here so this", "start": 1953.48, "duration": 4.6}, {"text": "should take about a minute or so yeah so", "start": 1955.2, "duration": 4.56}, {"text": "here you see how this data frame looks", "start": 1958.08, "duration": 5.719}, {"text": "like and this is each row is one Gene", "start": 1959.76, "duration": 7.68}, {"text": "and taxonomy ID is an identifier of of", "start": 1963.799, "duration": 5.561}, {"text": "an organism and those are different", "start": 1967.44, "duration": 4.68}, {"text": "genes yeah so we are grouping the data", "start": 1969.36, "duration": 5.12}, {"text": "by taxonomy ID and then counting the", "start": 1972.12, "duration": 5.159}, {"text": "number of genes for each taxonomy ID and", "start": 1974.48, "duration": 5.039}, {"text": "then we finally sort that in a", "start": 1977.279, "duration": 5.24}, {"text": "descending order and then we display the", "start": 1979.519, "duration": 5.481}, {"text": "result here just to quickly check we get", "start": 1982.519, "duration": 3.88}, {"text": "the right numbers see there should be", "start": 1985.0, "duration": 4.96}, {"text": "about 20,000 human genes that's correct", "start": 1986.399, "duration": 7.041}, {"text": "and those are the top five uh top five", "start": 1989.96, "duration": 6.439}, {"text": "organism with the most genes here and", "start": 1993.44, "duration": 5.719}, {"text": "the run time was 56 seconds so there was", "start": 1996.399, "duration": 5.88}, {"text": "1 minute for 5.4 gigabytes of data so", "start": 1999.159, "duration": 5.64}, {"text": "that's not bad let's go to desk now", "start": 2002.279, "duration": 6.161}, {"text": "which can run this in parallel", "start": 2004.799, "duration": 5.6}, {"text": "and the code looks pretty much the same", "start": 2008.44, "duration": 3.68}, {"text": "I'm not going to go through it there's", "start": 2010.399, "duration": 4.081}, {"text": "some minor variations to the syntax but", "start": 2012.12, "duration": 4.439}, {"text": "it's pretty much the same thing so let", "start": 2014.48, "duration": 4.72}, {"text": "me run the desk data frame now let's see", "start": 2016.559, "duration": 4.521}, {"text": "how long that", "start": 2019.2, "duration": 4.199}, {"text": "takes and let's also make sure we get", "start": 2021.08, "duration": 5.88}, {"text": "the same results", "start": 2023.399, "duration": 3.561}, {"text": "here", "start": 2035.96, "duration": 3.0}, {"text": "okay we got the same results and it took", "start": 2039.32, "duration": 6.04}, {"text": "15 seconds so there was about four times", "start": 2042.279, "duration": 5.481}, {"text": "faster than than using pet because it", "start": 2045.36, "duration": 5.519}, {"text": "could uh parallelize some of the", "start": 2047.76, "duration": 5.359}, {"text": "calculation remember that actually the", "start": 2050.879, "duration": 4.2}, {"text": "most time and consuming part is reading", "start": 2053.119, "duration": 4.401}, {"text": "the file so you know the scaling is is", "start": 2055.079, "duration": 5.04}, {"text": "somewhat limited that that we can do", "start": 2057.52, "duration": 5.24}, {"text": "here okay let's go next to the spark", "start": 2060.119, "duration": 5.76}, {"text": "data frame and run", "start": 2062.76, "duration": 4.639}, {"text": "that", "start": 2065.879, "duration": 5.361}, {"text": "so again spark runs in", "start": 2067.399, "duration": 3.841}, {"text": "parallel now the thing about spark is it", "start": 2071.56, "duration": 4.799}, {"text": "has a completely different syntax you", "start": 2074.119, "duration": 6.56}, {"text": "know how you read the files and how you", "start": 2076.359, "duration": 7.72}, {"text": "uh how you process the", "start": 2080.679, "duration": 7.281}, {"text": "data but the idea is the same and again", "start": 2084.079, "duration": 6.52}, {"text": "we get the same results 14 seconds so", "start": 2087.96, "duration": 6.24}, {"text": "it's about the same as as desk okay so", "start": 2090.599, "duration": 5.361}, {"text": "that those three data frames were", "start": 2094.2, "duration": 5.48}, {"text": "running on on CPU now let's do GPU data", "start": 2095.96, "duration": 6.2}, {"text": "frame so we're going to Cuda", "start": 2099.68, "duration": 6.56}, {"text": "DF let's run Cuda", "start": 2102.16, "duration": 7.199}, {"text": "DF again the syntax is is very much the", "start": 2106.24, "duration": 8.599}, {"text": "same as as you had for U for", "start": 2109.359, "duration": 5.48}, {"text": "pandas oh and you see it's already", "start": 2114.96, "duration": 4.96}, {"text": "finished it only took three seconds to", "start": 2117.119, "duration": 4.601}, {"text": "run it so that's pretty amazing you know", "start": 2119.92, "duration": 6.6}, {"text": "you read in a 5.4 gigabyte file and you", "start": 2121.72, "duration": 7.08}, {"text": "do data manipulation you can do that all", "start": 2126.52, "duration": 4.28}, {"text": "in three seconds so that's that's pretty", "start": 2128.8, "duration": 4.0}, {"text": "amazing at least I find that", "start": 2130.8, "duration": 4.96}, {"text": "amazing and you know if you have really", "start": 2132.8, "duration": 6.24}, {"text": "big data sets that does not fit into uh", "start": 2135.76, "duration": 6.72}, {"text": "the GPU memory then you would run dusk", "start": 2139.04, "duration": 8.44}, {"text": "Cuda and let's run that one as", "start": 2142.48, "duration": 5.0}, {"text": "well now this will split up that data", "start": 2149.16, "duration": 5.4}, {"text": "frame into multiple partitions and run", "start": 2152.4, "duration": 5.4}, {"text": "each one separately and and this will", "start": 2154.56, "duration": 5.08}, {"text": "actually create some overhead as we will", "start": 2157.8, "duration": 4.88}, {"text": "see this is actually now getting slower", "start": 2159.64, "duration": 4.8}, {"text": "because there's some overhead you know", "start": 2162.68, "duration": 3.88}, {"text": "basically running this in parallel now", "start": 2164.44, "duration": 4.52}, {"text": "as long as your data fit into memory", "start": 2166.56, "duration": 5.36}, {"text": "just use Cuda DF don't use DK Cuda DF", "start": 2168.96, "duration": 4.76}, {"text": "I'm just showing that here know how to", "start": 2171.92, "duration": 5.679}, {"text": "do it all right so this is you know so", "start": 2173.72, "duration": 7.28}, {"text": "far we have only used CSV files let's do", "start": 2177.599, "duration": 5.561}, {"text": "one example where we change things so", "start": 2181.0, "duration": 4.8}, {"text": "here we were reading in a CSV file so", "start": 2183.16, "duration": 6.52}, {"text": "let's in instead read a pet file here so", "start": 2185.8, "duration": 6.6}, {"text": "we want to change this file format to p", "start": 2189.68, "duration": 4.399}, {"text": "and run this again again this is now the", "start": 2192.4, "duration": 5.64}, {"text": "Cuda data frame using", "start": 2194.079, "duration": 3.961}, {"text": "paret remember before it took about 3", "start": 2199.48, "duration": 6.52}, {"text": "seconds to run this on GPU and here", "start": 2202.44, "duration": 6.48}, {"text": "surprise 1.5 seconds so it actually cut", "start": 2206.0, "duration": 5.119}, {"text": "that in half by just using you know a", "start": 2208.92, "duration": 4.679}, {"text": "different kind of of data frame here I", "start": 2211.119, "duration": 5.161}, {"text": "mean using different file format so that", "start": 2213.599, "duration": 5.881}, {"text": "shows the power of using the P file", "start": 2216.28, "duration": 6.6}, {"text": "format okay and that ends the demo so", "start": 2219.48, "duration": 6.2}, {"text": "hopefully many of you were able to run", "start": 2222.88, "duration": 5.12}, {"text": "some of those examples", "start": 2225.68, "duration": 4.52}, {"text": "yourself and", "start": 2228.0, "duration": 7.319}, {"text": "um all right so so so here's a little", "start": 2230.2, "duration": 7.399}, {"text": "summary so on pandas it took about a", "start": 2235.319, "duration": 5.641}, {"text": "minute Dusk and Spark around 15 seconds", "start": 2237.599, "duration": 7.601}, {"text": "scooter about three seconds and desk was", "start": 2240.96, "duration": 6.48}, {"text": "actually a little slower but you know if", "start": 2245.2, "duration": 4.04}, {"text": "you get to larger data sets you will", "start": 2247.44, "duration": 3.96}, {"text": "find out eventually pandas will run out", "start": 2249.24, "duration": 4.0}, {"text": "of memory here so here we have an input", "start": 2251.4, "duration": 4.8}, {"text": "file 43 gigabytes that was too large for", "start": 2253.24, "duration": 6.599}, {"text": "pandas to handle here with Cuda DF using", "start": 2256.2, "duration": 6.2}, {"text": "this data set was already ran out of", "start": 2259.839, "duration": 4.881}, {"text": "memory but then if you use dusk K have", "start": 2262.4, "duration": 5.0}, {"text": "it can handle that very efficiently and", "start": 2264.72, "duration": 4.92}, {"text": "that's pretty amazing here you have a 43", "start": 2267.4, "duration": 4.959}, {"text": "gigabyte file you can process that with", "start": 2269.64, "duration": 6.4}, {"text": "dusk who have in in in 19 seconds that's", "start": 2272.359, "duration": 6.321}, {"text": "pretty amazing amazing to me all right", "start": 2276.04, "duration": 5.4}, {"text": "so a little comparison here but you know", "start": 2278.68, "duration": 4.56}, {"text": "how well did we actually use a different", "start": 2281.44, "duration": 4.6}, {"text": "cor so that's where parallel efficiency", "start": 2283.24, "duration": 4.76}, {"text": "come in so on the first day Bob", "start": 2286.04, "duration": 4.68}, {"text": "sinkovitz was talking about am law and", "start": 2288.0, "duration": 5.079}, {"text": "measuring parallel efficiency so that's", "start": 2290.72, "duration": 4.24}, {"text": "what I did let let's see how how", "start": 2293.079, "duration": 3.801}, {"text": "efficient we are so first of all let's", "start": 2294.96, "duration": 3.8}, {"text": "look at the overall performance of those", "start": 2296.88, "duration": 4.239}, {"text": "data frames and let's just take the", "start": 2298.76, "duration": 5.48}, {"text": "small data set of 5.5 gabyt which", "start": 2301.119, "duration": 5.561}, {"text": "actually takes in memory takes up 15", "start": 2304.24, "duration": 4.32}, {"text": "gigabytes because there a lot of", "start": 2306.68, "duration": 4.639}, {"text": "strength or character data strengths in", "start": 2308.56, "duration": 4.48}, {"text": "Python they take a lot of memory so in", "start": 2311.319, "duration": 4.121}, {"text": "memory it's actually 15 gigabytes this", "start": 2313.04, "duration": 4.319}, {"text": "comparison is on a single core on a", "start": 2315.44, "duration": 5.52}, {"text": "single GPU obviously the single GPU know", "start": 2317.359, "duration": 5.921}, {"text": "is faster than than any of if you run it", "start": 2320.96, "duration": 6.119}, {"text": "on on one CPU so um that's what you see", "start": 2323.28, "duration": 7.96}, {"text": "here um in general you see pet is much", "start": 2327.079, "duration": 6.641}, {"text": "faster than CSV format there's one", "start": 2331.24, "duration": 6.04}, {"text": "exception the Cuda uh dusk C data frame", "start": 2333.72, "duration": 5.48}, {"text": "currently has some problem with pet so", "start": 2337.28, "duration": 3.839}, {"text": "ignore that there's something wrong with", "start": 2339.2, "duration": 4.48}, {"text": "that Cuda reading the pet files I'm not", "start": 2341.119, "duration": 4.841}, {"text": "sure why that's happening it should not", "start": 2343.68, "duration": 6.6}, {"text": "be so the bottom line is you know uh GPU", "start": 2345.96, "duration": 6.6}, {"text": "data frames can be extremely efficient", "start": 2350.28, "duration": 5.68}, {"text": "plus paret also helps you know to uh", "start": 2352.56, "duration": 7.2}, {"text": "bring down your uh runtime as well okay", "start": 2355.96, "duration": 5.879}, {"text": "now let's scale it up to a larger data", "start": 2359.76, "duration": 4.2}, {"text": "set so now I took that small data sets", "start": 2361.839, "duration": 5.361}, {"text": "and made 16 copies of it so this file", "start": 2363.96, "duration": 7.2}, {"text": "size is now 87 gab here and let's just", "start": 2367.2, "duration": 6.68}, {"text": "run it on a single core again first of", "start": 2371.16, "duration": 4.8}, {"text": "all you don't see Cuda anymore why is", "start": 2373.88, "duration": 4.04}, {"text": "that because it ran out of memory you", "start": 2375.96, "duration": 4.52}, {"text": "know so you can't run this big size on", "start": 2377.92, "duration": 4.08}, {"text": "on a Cuda data frame that's why you", "start": 2380.48, "duration": 4.4}, {"text": "don't see it anymore but dusk Cuda is", "start": 2382.0, "duration": 4.839}, {"text": "able to handle that since it splits it", "start": 2384.88, "duration": 7.199}, {"text": "up but interestingly um just using paret", "start": 2386.839, "duration": 8.561}, {"text": "on on spark actually beats the the Cuda", "start": 2392.079, "duration": 4.401}, {"text": "here which is kind of interesting", "start": 2395.4, "duration": 3.6}, {"text": "interesting now let's run the same data", "start": 2396.48, "duration": 5.16}, {"text": "set on sixd in course here and again you", "start": 2399.0, "duration": 5.96}, {"text": "see that spark running on CPU actually", "start": 2401.64, "duration": 8.08}, {"text": "beats beats the single GPU here okay so", "start": 2404.96, "duration": 7.24}, {"text": "that's that so important bottom line is", "start": 2409.72, "duration": 5.0}, {"text": "you know GPU although it's fast on on a", "start": 2412.2, "duration": 4.639}, {"text": "small data set if it fits into memory", "start": 2414.72, "duration": 5.2}, {"text": "and if you need to split it up and so on", "start": 2416.839, "duration": 5.161}, {"text": "it's not necess that much faster you", "start": 2419.92, "duration": 4.08}, {"text": "know in many cases you can just do the", "start": 2422.0, "duration": 5.56}, {"text": "same on on CPU and again right to use", "start": 2424.0, "duration": 5.64}, {"text": "pet files if you're really if you use", "start": 2427.56, "duration": 4.24}, {"text": "that same data set over and over again", "start": 2429.64, "duration": 4.0}, {"text": "pet is a good", "start": 2431.8, "duration": 4.96}, {"text": "choice so how does it actually scale you", "start": 2433.64, "duration": 5.479}, {"text": "know the those examples I had they're", "start": 2436.76, "duration": 4.28}, {"text": "mostly reading data they don't do much", "start": 2439.119, "duration": 3.72}, {"text": "computation therefore they don't scale", "start": 2441.04, "duration": 3.4}, {"text": "that well but let's see how well they", "start": 2442.839, "duration": 4.161}, {"text": "scale so you have seen in in Bob", "start": 2444.44, "duration": 4.96}, {"text": "covich's presentation the way you do the", "start": 2447.0, "duration": 5.28}, {"text": "scaling plot you have time on the Y AIS", "start": 2449.4, "duration": 5.4}, {"text": "and the number of course on the xaxis", "start": 2452.28, "duration": 4.319}, {"text": "and you have a log scale here so this is", "start": 2454.8, "duration": 4.12}, {"text": "a log 10 scale on the bottom I have a", "start": 2456.599, "duration": 5.201}, {"text": "log two scale here going from one to to", "start": 2458.92, "duration": 6.12}, {"text": "16 cores here and let look at the small", "start": 2461.8, "duration": 5.92}, {"text": "data set that you process here the 5.5", "start": 2465.04, "duration": 5.24}, {"text": "gabyt so the dash line This is the", "start": 2467.72, "duration": 5.08}, {"text": "theoretical speed up you should get in", "start": 2470.28, "duration": 4.64}, {"text": "reality you see if you get to eight", "start": 2472.8, "duration": 4.92}, {"text": "cores it it already diverges quite a lot", "start": 2474.92, "duration": 4.6}, {"text": "but as you get to bigger data frames", "start": 2477.72, "duration": 4.96}, {"text": "like the one with almost 90 gab you see", "start": 2479.52, "duration": 5.16}, {"text": "you you get a better efficiency out of", "start": 2482.68, "duration": 3.32}, {"text": "that you know it's it's still pretty", "start": 2484.68, "duration": 3.56}, {"text": "good up to eight course and even 16", "start": 2486.0, "duration": 4.599}, {"text": "course it's still pretty acceptable and", "start": 2488.24, "duration": 4.0}, {"text": "see how the time goes down we're going", "start": 2490.599, "duration": 4.961}, {"text": "from over a th seconds down to about 100", "start": 2492.24, "duration": 6.04}, {"text": "seconds and this is for D using", "start": 2495.56, "duration": 5.92}, {"text": "CSV and then we can do those efficiency", "start": 2498.28, "duration": 5.88}, {"text": "plus that Bob showed us you know that", "start": 2501.48, "duration": 5.2}, {"text": "basically shows the utilization of the", "start": 2504.16, "duration": 5.52}, {"text": "core so if you go to One Core you have", "start": 2506.68, "duration": 5.639}, {"text": "you see 100% utilization of the core if", "start": 2509.68, "duration": 4.48}, {"text": "you go to two you lose something still", "start": 2512.319, "duration": 5.441}, {"text": "in a 90% range if you go to four course", "start": 2514.16, "duration": 5.88}, {"text": "you know you get lower and you see you", "start": 2517.76, "duration": 5.079}, {"text": "know larger data sets obviously uh know", "start": 2520.04, "duration": 4.6}, {"text": "benefit from more course but if you have", "start": 2522.839, "duration": 3.601}, {"text": "a small data set it doesn't make sense", "start": 2524.64, "duration": 3.719}, {"text": "to run it on 16 course you know your", "start": 2526.44, "duration": 4.879}, {"text": "efficiency already going down to 50%", "start": 2528.359, "duration": 5.441}, {"text": "here if you want to see how to write how", "start": 2531.319, "duration": 4.881}, {"text": "I actually did those plots the notebooks", "start": 2533.8, "duration": 3.84}, {"text": "are available there's an interactive", "start": 2536.2, "duration": 3.0}, {"text": "Benchmark and there's also batch", "start": 2537.64, "duration": 3.12}, {"text": "Benchmark aailable you can look at those", "start": 2539.2, "duration": 4.52}, {"text": "notebooks how I create those plots here", "start": 2540.76, "duration": 5.52}, {"text": "now how about the GPU data frame now as", "start": 2543.72, "duration": 5.68}, {"text": "it says a GPU data Frame Works on GPU so", "start": 2546.28, "duration": 5.279}, {"text": "if you increase the number of cores it", "start": 2549.4, "duration": 4.56}, {"text": "basically does nothing actually for", "start": 2551.559, "duration": 5.361}, {"text": "small data sets you know your CPU your", "start": 2553.96, "duration": 5.0}, {"text": "total runtime actually slightly goes up", "start": 2556.92, "duration": 4.28}, {"text": "if you use too many cores because you're", "start": 2558.96, "duration": 4.399}, {"text": "creating overhead but what happens if", "start": 2561.2, "duration": 4.04}, {"text": "you have very large data sets having", "start": 2563.359, "duration": 4.041}, {"text": "let's say two course is actually", "start": 2565.24, "duration": 3.92}, {"text": "beneficial here you see it it actually", "start": 2567.4, "duration": 4.04}, {"text": "cut the runtime in half because even", "start": 2569.16, "duration": 4.04}, {"text": "though it's a GPU data frame it still", "start": 2571.44, "duration": 4.72}, {"text": "utilizes the CPU too but you know it", "start": 2573.2, "duration": 5.8}, {"text": "doesn't scale it doesn't need many CPUs", "start": 2576.16, "duration": 4.439}, {"text": "just a little", "start": 2579.0, "duration": 4.2}, {"text": "bit all right so but then the question", "start": 2580.599, "duration": 4.0}, {"text": "comes you know you can look at those", "start": 2583.2, "duration": 4.0}, {"text": "plots but how do you decide how many", "start": 2584.599, "duration": 4.801}, {"text": "course should I actually use for my job", "start": 2587.2, "duration": 4.52}, {"text": "and I came up with the following idea", "start": 2589.4, "duration": 3.76}, {"text": "which is prob not the best but that's", "start": 2591.72, "duration": 3.48}, {"text": "all way I thought about what is actually", "start": 2593.16, "duration": 4.36}, {"text": "the cost of running your job the cost of", "start": 2595.2, "duration": 4.399}, {"text": "your running a job is the number of", "start": 2597.52, "duration": 5.52}, {"text": "course times time and then I normalize", "start": 2599.599, "duration": 6.121}, {"text": "it by the size of the data set so but", "start": 2603.04, "duration": 4.96}, {"text": "unfor with this formula you always favor", "start": 2605.72, "duration": 4.28}, {"text": "a single core because on a single core", "start": 2608.0, "duration": 4.52}, {"text": "you have 100% efficiency by definition", "start": 2610.0, "duration": 5.64}, {"text": "that favors a single core but you know", "start": 2612.52, "duration": 5.28}, {"text": "as you know time is money so there's an", "start": 2615.64, "duration": 4.56}, {"text": "opportunity cost if you wa too long you", "start": 2617.8, "duration": 5.0}, {"text": "want to get your work done faster so I", "start": 2620.2, "duration": 4.48}, {"text": "Define a variable called opportunity", "start": 2622.8, "duration": 4.0}, {"text": "cost I it's an adjustable parameter I", "start": 2624.68, "duration": 4.52}, {"text": "just set that to one in this example so", "start": 2626.8, "duration": 5.16}, {"text": "we take this cost here and we add", "start": 2629.2, "duration": 5.48}, {"text": "another term opportunity cost times the", "start": 2631.96, "duration": 5.08}, {"text": "normalized time and if you plot it it", "start": 2634.68, "duration": 4.879}, {"text": "looks like this so for the dusk data", "start": 2637.04, "duration": 6.16}, {"text": "frame running using the CSV file format", "start": 2639.559, "duration": 6.52}, {"text": "you see for for the small data sets the", "start": 2643.2, "duration": 5.84}, {"text": "optimum seems to be about four cores and", "start": 2646.079, "duration": 4.921}, {"text": "for the larger data sets the optimum", "start": 2649.04, "duration": 5.16}, {"text": "seems to be around you know eight cores", "start": 2651.0, "duration": 7.16}, {"text": "and if we use dusk with a pet data frame", "start": 2654.2, "duration": 6.2}, {"text": "the story changes a little bit it", "start": 2658.16, "duration": 4.72}, {"text": "actually for small data set see it's", "start": 2660.4, "duration": 5.12}, {"text": "satisfied with just two cores whereas", "start": 2662.88, "duration": 5.84}, {"text": "for medium siiz data frames it four", "start": 2665.52, "duration": 6.4}, {"text": "cores is Optimum and for the large one", "start": 2668.72, "duration": 5.08}, {"text": "it probably uses eight course so that", "start": 2671.92, "duration": 4.0}, {"text": "that's one way maybe to think about it", "start": 2673.8, "duration": 3.759}, {"text": "but the situation is a little more", "start": 2675.92, "duration": 4.08}, {"text": "complex because we need to think about", "start": 2677.559, "duration": 5.8}, {"text": "how our uh jobs actually charge on on", "start": 2680.0, "duration": 5.68}, {"text": "expands and let's have a let's review", "start": 2683.359, "duration": 6.161}, {"text": "how jobs are charged on the uh on expans", "start": 2685.68, "duration": 5.76}, {"text": "so let's first think about running on", "start": 2689.52, "duration": 4.48}, {"text": "CPUs so this is a typical launch command", "start": 2691.44, "duration": 5.36}, {"text": "let's say we're using 10 CPUs 20 gab of", "start": 2694.0, "duration": 5.44}, {"text": "memory for half an hour how much does it", "start": 2696.8, "duration": 7.16}, {"text": "cost so one CPU or 2 gabt of memory", "start": 2699.44, "duration": 6.6}, {"text": "whatever is larger you will be charged", "start": 2703.96, "duration": 3.96}, {"text": "one Service", "start": 2706.04, "duration": 4.72}, {"text": "Unit now since we're using 10 CPUs and", "start": 2707.92, "duration": 5.88}, {"text": "20 GB of memory this job will be charged", "start": 2710.76, "duration": 5.799}, {"text": "10 service units per hours but since", "start": 2713.8, "duration": 4.559}, {"text": "we're only running it for 30 minutes you", "start": 2716.559, "duration": 4.441}, {"text": "will be charged five service units so", "start": 2718.359, "duration": 4.641}, {"text": "you need to remember that you cannot", "start": 2721.0, "duration": 4.96}, {"text": "just look at the number of CPUs because", "start": 2723.0, "duration": 4.8}, {"text": "they depend also on the memory now", "start": 2725.96, "duration": 3.44}, {"text": "you're also being charged for the memory", "start": 2727.8, "duration": 3.72}, {"text": "so you need to keep that into account as", "start": 2729.4, "duration": 4.719}, {"text": "well now how about how does that work on", "start": 2731.52, "duration": 5.839}, {"text": "on gpus so here we say okay for the gpus", "start": 2734.119, "duration": 7.841}, {"text": "we use 10 CPUs 92 gabt of memory one GPU", "start": 2737.359, "duration": 8.121}, {"text": "for 30 minutes so on a GPU the counting", "start": 2741.96, "duration": 7.639}, {"text": "is different so one GPU or 10 CPUs or 92", "start": 2745.48, "duration": 6.76}, {"text": "gbes of memory whatever is larger I", "start": 2749.599, "duration": 7.201}, {"text": "charge one GPU Service Unit so this job", "start": 2752.24, "duration": 7.079}, {"text": "with one GPU will be charged one GPU", "start": 2756.8, "duration": 5.36}, {"text": "hour per hour one GPU Service Unit per", "start": 2759.319, "duration": 5.52}, {"text": "hour but we're only running it for 30", "start": 2762.16, "duration": 5.439}, {"text": "minutes right but there's a catch", "start": 2764.839, "duration": 4.52}, {"text": "because the minimum charge for any job", "start": 2767.599, "duration": 3.601}, {"text": "is one Service Unit so that's also", "start": 2769.359, "duration": 4.0}, {"text": "something to keep in mind so this job", "start": 2771.2, "duration": 4.76}, {"text": "although it only runs for 30 minutes you", "start": 2773.359, "duration": 4.441}, {"text": "still pay the charge for one hour which", "start": 2775.96, "duration": 4.2}, {"text": "is one Service Unit so when you think", "start": 2777.8, "duration": 4.12}, {"text": "about scaling you also need to think a", "start": 2780.16, "duration": 3.959}, {"text": "little bit about you know how how you're", "start": 2781.92, "duration": 4.36}, {"text": "being charred so that's another in", "start": 2784.119, "duration": 4.44}, {"text": "consideration and how much memory you", "start": 2786.28, "duration": 3.52}, {"text": "need for your", "start": 2788.559, "duration": 5.601}, {"text": "job okay so let me see how we're in time", "start": 2789.8, "duration": 6.72}, {"text": "probably pretty good so getting ready to", "start": 2794.16, "duration": 4.439}, {"text": "use expans so a few people already asked", "start": 2796.52, "duration": 4.599}, {"text": "about how can we get access to expense", "start": 2798.599, "duration": 6.0}, {"text": "so you can apply for trial allocation or", "start": 2801.119, "duration": 6.44}, {"text": "startup allocation or if you do need a", "start": 2804.599, "duration": 5.121}, {"text": "larger allocation you can submit a", "start": 2807.559, "duration": 5.401}, {"text": "proposal there's only uh one catch is", "start": 2809.72, "duration": 5.8}, {"text": "that the exceed system will switch over", "start": 2812.96, "duration": 4.96}, {"text": "to new system called access on September", "start": 2815.52, "duration": 4.48}, {"text": "one so in this transition period so look", "start": 2817.92, "duration": 4.52}, {"text": "at this link to more information and", "start": 2820.0, "duration": 5.0}, {"text": "announcement how this is going to to", "start": 2822.44, "duration": 4.96}, {"text": "change but you know I showed you how you", "start": 2825.0, "duration": 4.119}, {"text": "can do performance so you can get a", "start": 2827.4, "duration": 3.4}, {"text": "trial account and you can do some", "start": 2829.119, "duration": 3.361}, {"text": "performance evaluation you can use some", "start": 2830.8, "duration": 4.559}, {"text": "of my code look at those uh create those", "start": 2832.48, "duration": 4.52}, {"text": "performance statistics and they will", "start": 2835.359, "duration": 3.72}, {"text": "help you you know submit a good proposal", "start": 2837.0, "duration": 4.16}, {"text": "if you need a large allocation and and", "start": 2839.079, "duration": 4.52}, {"text": "justify why you need to run this that's", "start": 2841.16, "duration": 5.919}, {"text": "12 128 course so in summary I showed you", "start": 2843.599, "duration": 5.48}, {"text": "you know when does it make sense to run", "start": 2847.079, "duration": 4.961}, {"text": "on expanse how to set up a portal and", "start": 2849.079, "duration": 4.921}, {"text": "republe software environment this Cas", "start": 2852.04, "duration": 5.72}, {"text": "using cond and um how to run some tips", "start": 2854.0, "duration": 5.88}, {"text": "how to run Jupiter lab on expanse and", "start": 2857.76, "duration": 5.12}, {"text": "then we showed you how you can use uh", "start": 2859.88, "duration": 4.8}, {"text": "how you can parallelize data frames", "start": 2862.88, "duration": 4.88}, {"text": "using CPUs and GPU data frame libraries", "start": 2864.68, "duration": 4.8}, {"text": "how to measure efficiency and a little", "start": 2867.76, "duration": 4.599}, {"text": "bit how to get accounts okay so here's", "start": 2869.48, "duration": 5.24}, {"text": "some homework for you now I said this is", "start": 2872.359, "duration": 3.881}, {"text": "a portal environment", "start": 2874.72, "duration": 3.0}, {"text": "now let's do the other way around we", "start": 2876.24, "duration": 4.04}, {"text": "know this works on expanse the question", "start": 2877.72, "duration": 4.96}, {"text": "is does this DF work on your lab or", "start": 2880.28, "duration": 4.52}, {"text": "desktop so that's your homework try to", "start": 2882.68, "duration": 5.52}, {"text": "install it on on your laptop or desktop", "start": 2884.8, "duration": 5.84}, {"text": "and then try to run the CPU examples", "start": 2888.2, "duration": 4.399}, {"text": "that they they should work and you can", "start": 2890.64, "duration": 4.679}, {"text": "also run some of the performance", "start": 2892.599, "duration": 4.681}, {"text": "statistics see how it works compared to", "start": 2895.319, "duration": 4.161}, {"text": "expans and then the most important thing", "start": 2897.28, "duration": 4.44}, {"text": "is once you get this working then you", "start": 2899.48, "duration": 4.72}, {"text": "really have a template how you can apply", "start": 2901.72, "duration": 4.96}, {"text": "this now to your own work and I would", "start": 2904.2, "duration": 4.159}, {"text": "like you to commit yourself in the", "start": 2906.68, "duration": 3.56}, {"text": "future to write portable and", "start": 2908.359, "duration": 4.281}, {"text": "reproducible code and with that we come", "start": 2910.24, "duration": 4.68}, {"text": "to our acknowledgments Marty helped me a", "start": 2912.64, "duration": 5.52}, {"text": "lot in Mary Scott and Bob and this was", "start": 2914.92, "duration": 6.159}, {"text": "funded in part by an NSF cyber training", "start": 2918.16, "duration": 6.8}, {"text": "Grant so in any for last question again", "start": 2921.079, "duration": 5.801}, {"text": "if you have if you try to do your", "start": 2924.96, "duration": 3.92}, {"text": "homework and things don't work feel free", "start": 2926.88, "duration": 4.679}, {"text": "to email me because I'm interested in", "start": 2928.88, "duration": 4.959}, {"text": "why things may not work I claim it will", "start": 2931.559, "duration": 5.601}, {"text": "work on both MEC and PC and Linux but", "start": 2933.839, "duration": 5.881}, {"text": "you know you never know so that's the", "start": 2937.16, "duration": 4.48}, {"text": "end of my presentation and sorry for", "start": 2939.72, "duration": 6.2}, {"text": "going a little bit overtime", "start": 2941.64, "duration": 4.28}]